{"expireTime":9007200914465209000,"key":"transformer-remark-markdown-html-ast-5e765edda8b15e5a25412cb21456dd29--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_events","title":"Permalink to Handling events"},"children":[{"type":"text","value":"Handling events","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":20,"offset":20}}}],"position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":201,"offset":201}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":201,"offset":201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you've only written vanilla JavaScript before now, you might be used to having a separate JavaScript file, where you query for some DOM nodes and attach listeners to them. For example:","position":{"start":{"line":4,"column":1,"offset":203},"end":{"line":4,"column":188,"offset":390}}}],"position":{"start":{"line":4,"column":1,"offset":203},"end":{"line":4,"column":188,"offset":390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//x\nconst btn = document.querySelector('button');\n\nbtn.addEventListener('click', () => {\n    alert('hi!');\n});\n"}],"position":{"start":{"line":6,"column":1,"offset":392},"end":{"line":13,"column":4,"offset":512}}}],"position":{"start":{"line":6,"column":1,"offset":392},"end":{"line":13,"column":4,"offset":512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In React, we write event handlers directly on the elements in our JSX, like this:","position":{"start":{"line":15,"column":1,"offset":514},"end":{"line":15,"column":82,"offset":595}}}],"position":{"start":{"line":15,"column":1,"offset":514},"end":{"line":15,"column":82,"offset":595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//x\n<button type=\"button\" onClick={() => alert('hi!')}>\n    Say hi!\n</button>\n"}],"position":{"start":{"line":17,"column":1,"offset":597},"end":{"line":22,"column":4,"offset":684}}}],"position":{"start":{"line":17,"column":1,"offset":597},"end":{"line":22,"column":4,"offset":684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":24,"column":3,"offset":688},"end":{"line":24,"column":8,"offset":693}}}],"position":{"start":{"line":24,"column":1,"offset":686},"end":{"line":24,"column":10,"offset":695}}},{"type":"text","value":" This may seem counter-intuitive regarding best-practice advice that tends to advise against use of inline event handlers on HTML, but remember that JSX is actually part of your JavaScript.","position":{"start":{"line":24,"column":10,"offset":695},"end":{"line":24,"column":199,"offset":884}}}],"position":{"start":{"line":24,"column":1,"offset":686},"end":{"line":24,"column":199,"offset":884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the above example, we're adding an ","position":{"start":{"line":26,"column":1,"offset":886},"end":{"line":26,"column":39,"offset":924}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":26,"column":39,"offset":924},"end":{"line":26,"column":48,"offset":933}}},{"type":"text","value":" attribute to the ","position":{"start":{"line":26,"column":48,"offset":933},"end":{"line":26,"column":66,"offset":951}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<button>"}],"position":{"start":{"line":26,"column":66,"offset":951},"end":{"line":26,"column":76,"offset":961}}},{"type":"text","value":" element. The value of that attribute is a function that triggers a simple alert.","position":{"start":{"line":26,"column":76,"offset":961},"end":{"line":26,"column":157,"offset":1042}}}],"position":{"start":{"line":26,"column":1,"offset":886},"end":{"line":26,"column":157,"offset":1042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":28,"column":1,"offset":1044},"end":{"line":28,"column":5,"offset":1048}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":28,"column":5,"offset":1048},"end":{"line":28,"column":14,"offset":1057}}},{"type":"text","value":" attribute has special meaning here: it tells React to run a given function when the user clicks on the button. There are a couple of other things to note:","position":{"start":{"line":28,"column":14,"offset":1057},"end":{"line":28,"column":169,"offset":1212}}}],"position":{"start":{"line":28,"column":1,"offset":1044},"end":{"line":28,"column":169,"offset":1212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The camel-cased nature of ","position":{"start":{"line":30,"column":5,"offset":1218},"end":{"line":30,"column":31,"offset":1244}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":30,"column":31,"offset":1244},"end":{"line":30,"column":40,"offset":1253}}},{"type":"text","value":" is important — JSX will not recognize ","position":{"start":{"line":30,"column":40,"offset":1253},"end":{"line":30,"column":79,"offset":1292}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onclick"}],"position":{"start":{"line":30,"column":79,"offset":1292},"end":{"line":30,"column":88,"offset":1301}}},{"type":"text","value":" (again, it is already used in JavaScript for a specific purpose, which is related but different — standard ","position":{"start":{"line":30,"column":88,"offset":1301},"end":{"line":30,"column":196,"offset":1409}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onclick"}],"position":{"start":{"line":30,"column":197,"offset":1410},"end":{"line":30,"column":206,"offset":1419}}}],"position":{"start":{"line":30,"column":196,"offset":1409},"end":{"line":30,"column":285,"offset":1498}}},{"type":"text","value":" handler properties).","position":{"start":{"line":30,"column":285,"offset":1498},"end":{"line":30,"column":306,"offset":1519}}}],"position":{"start":{"line":30,"column":1,"offset":1214},"end":{"line":30,"column":306,"offset":1519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All browser events follow this format in JSX – ","position":{"start":{"line":31,"column":5,"offset":1524},"end":{"line":31,"column":52,"offset":1571}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"on"}],"position":{"start":{"line":31,"column":52,"offset":1571},"end":{"line":31,"column":56,"offset":1575}}},{"type":"text","value":", followed by the name of the event.","position":{"start":{"line":31,"column":56,"offset":1575},"end":{"line":31,"column":92,"offset":1611}}}],"position":{"start":{"line":31,"column":1,"offset":1520},"end":{"line":31,"column":92,"offset":1611}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":1,"offset":1214},"end":{"line":31,"column":92,"offset":1611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's apply this to our app, starting in the ","position":{"start":{"line":33,"column":1,"offset":1613},"end":{"line":33,"column":46,"offset":1658}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":33,"column":46,"offset":1658},"end":{"line":33,"column":55,"offset":1667}}},{"type":"text","value":" component.","position":{"start":{"line":33,"column":55,"offset":1667},"end":{"line":33,"column":66,"offset":1678}}}],"position":{"start":{"line":33,"column":1,"offset":1613},"end":{"line":33,"column":66,"offset":1678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission","title":"Permalink to Handling form submission"},"children":[{"type":"text","value":"Handling form submission","position":{"start":{"line":35,"column":6,"offset":1685},"end":{"line":35,"column":30,"offset":1709}}}],"position":{"start":{"line":35,"column":5,"offset":1684},"end":{"line":35,"column":229,"offset":1908}}}],"position":{"start":{"line":35,"column":1,"offset":1680},"end":{"line":35,"column":229,"offset":1908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the top of the ","position":{"start":{"line":37,"column":1,"offset":1910},"end":{"line":37,"column":19,"offset":1928}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form()"}],"position":{"start":{"line":37,"column":19,"offset":1928},"end":{"line":37,"column":27,"offset":1936}}},{"type":"text","value":" component function, create a function named ","position":{"start":{"line":37,"column":27,"offset":1936},"end":{"line":37,"column":72,"offset":1981}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":37,"column":72,"offset":1981},"end":{"line":37,"column":88,"offset":1997}}},{"type":"text","value":". This function should ","position":{"start":{"line":37,"column":88,"offset":1997},"end":{"line":37,"column":111,"offset":2020}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#preventing_default_behavior"},"children":[{"type":"text","value":"prevent the default behavior of the ","position":{"start":{"line":37,"column":112,"offset":2021},"end":{"line":37,"column":148,"offset":2057}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"submit"}],"position":{"start":{"line":37,"column":148,"offset":2057},"end":{"line":37,"column":156,"offset":2065}}},{"type":"text","value":" event","position":{"start":{"line":37,"column":156,"offset":2065},"end":{"line":37,"column":162,"offset":2071}}}],"position":{"start":{"line":37,"column":111,"offset":2020},"end":{"line":37,"column":273,"offset":2182}}},{"type":"text","value":". After that, it should trigger an ","position":{"start":{"line":37,"column":273,"offset":2182},"end":{"line":37,"column":308,"offset":2217}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alert()"}],"position":{"start":{"line":37,"column":308,"offset":2217},"end":{"line":37,"column":317,"offset":2226}}},{"type":"text","value":", which can say whatever you'd like. It should end up looking something like this:","position":{"start":{"line":37,"column":317,"offset":2226},"end":{"line":37,"column":399,"offset":2308}}}],"position":{"start":{"line":37,"column":1,"offset":1910},"end":{"line":37,"column":399,"offset":2308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//x\nfunction handleSubmit(e) {\n    e.preventDefault();\n    alert('Hello, world!');\n}\n"}],"position":{"start":{"line":39,"column":1,"offset":2310},"end":{"line":45,"column":4,"offset":2404}}}],"position":{"start":{"line":39,"column":1,"offset":2310},"end":{"line":45,"column":4,"offset":2404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To use this function, add an ","position":{"start":{"line":47,"column":1,"offset":2406},"end":{"line":47,"column":30,"offset":2435}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}],"position":{"start":{"line":47,"column":30,"offset":2435},"end":{"line":47,"column":40,"offset":2445}}},{"type":"text","value":" attribute to the ","position":{"start":{"line":47,"column":40,"offset":2445},"end":{"line":47,"column":58,"offset":2463}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<form>"}],"position":{"start":{"line":47,"column":59,"offset":2464},"end":{"line":47,"column":67,"offset":2472}}}],"position":{"start":{"line":47,"column":58,"offset":2463},"end":{"line":47,"column":132,"offset":2537}}},{"type":"text","value":" element, and set its value to the ","position":{"start":{"line":47,"column":132,"offset":2537},"end":{"line":47,"column":167,"offset":2572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit"}],"position":{"start":{"line":47,"column":167,"offset":2572},"end":{"line":47,"column":181,"offset":2586}}},{"type":"text","value":" function:","position":{"start":{"line":47,"column":181,"offset":2586},"end":{"line":47,"column":191,"offset":2596}}}],"position":{"start":{"line":47,"column":1,"offset":2406},"end":{"line":47,"column":191,"offset":2596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<form onSubmit={handleSubmit}>\n"}],"position":{"start":{"line":49,"column":1,"offset":2598},"end":{"line":51,"column":4,"offset":2636}}}],"position":{"start":{"line":49,"column":1,"offset":2598},"end":{"line":51,"column":4,"offset":2636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now if you head back to your browser and click on the \"Add\" button, your browser will show you an alert dialog with the words \"Hello, world!\" — or whatever you chose to write there.","position":{"start":{"line":53,"column":1,"offset":2638},"end":{"line":53,"column":182,"offset":2819}}}],"position":{"start":{"line":53,"column":1,"offset":2638},"end":{"line":53,"column":182,"offset":2819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#callback_props","title":"Permalink to Callback props"},"children":[{"type":"text","value":"Callback props","position":{"start":{"line":55,"column":5,"offset":2825},"end":{"line":55,"column":19,"offset":2839}}}],"position":{"start":{"line":55,"column":4,"offset":2824},"end":{"line":55,"column":198,"offset":3018}}}],"position":{"start":{"line":55,"column":1,"offset":2821},"end":{"line":55,"column":198,"offset":3018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In React applications, interactivity is rarely confined to just one component: events that happen in one component will affect other parts of the app. When we start giving ourselves the power to make new tasks, things that happen in the ","position":{"start":{"line":57,"column":1,"offset":3020},"end":{"line":57,"column":238,"offset":3257}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":57,"column":238,"offset":3257},"end":{"line":57,"column":248,"offset":3267}}},{"type":"text","value":" component will affect the list rendered in ","position":{"start":{"line":57,"column":248,"offset":3267},"end":{"line":57,"column":292,"offset":3311}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":57,"column":292,"offset":3311},"end":{"line":57,"column":301,"offset":3320}}},{"type":"text","value":".","position":{"start":{"line":57,"column":301,"offset":3320},"end":{"line":57,"column":302,"offset":3321}}}],"position":{"start":{"line":57,"column":1,"offset":3020},"end":{"line":57,"column":302,"offset":3321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want our ","position":{"start":{"line":59,"column":1,"offset":3323},"end":{"line":59,"column":13,"offset":3335}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":59,"column":13,"offset":3335},"end":{"line":59,"column":29,"offset":3351}}},{"type":"text","value":" function to ultimately help us create a new task, so we need a way to pass information from ","position":{"start":{"line":59,"column":29,"offset":3351},"end":{"line":59,"column":122,"offset":3444}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":59,"column":122,"offset":3444},"end":{"line":59,"column":132,"offset":3454}}},{"type":"text","value":" to ","position":{"start":{"line":59,"column":132,"offset":3454},"end":{"line":59,"column":136,"offset":3458}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":59,"column":136,"offset":3458},"end":{"line":59,"column":145,"offset":3467}}},{"type":"text","value":". We can't pass data from child to parent in the same way as we pass data from parent to child using standard props. Instead, we can write a function in ","position":{"start":{"line":59,"column":145,"offset":3467},"end":{"line":59,"column":298,"offset":3620}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":59,"column":298,"offset":3620},"end":{"line":59,"column":307,"offset":3629}}},{"type":"text","value":" that will expect some data from our form as an input, then pass that function to ","position":{"start":{"line":59,"column":307,"offset":3629},"end":{"line":59,"column":389,"offset":3711}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":59,"column":389,"offset":3711},"end":{"line":59,"column":399,"offset":3721}}},{"type":"text","value":" as a prop. This function-as-a-prop is called a callback prop. Once we have our callback prop, we can call it inside ","position":{"start":{"line":59,"column":399,"offset":3721},"end":{"line":59,"column":516,"offset":3838}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":59,"column":516,"offset":3838},"end":{"line":59,"column":526,"offset":3848}}},{"type":"text","value":" to send the right data to ","position":{"start":{"line":59,"column":526,"offset":3848},"end":{"line":59,"column":553,"offset":3875}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<App />"}],"position":{"start":{"line":59,"column":553,"offset":3875},"end":{"line":59,"column":562,"offset":3884}}},{"type":"text","value":".","position":{"start":{"line":59,"column":562,"offset":3884},"end":{"line":59,"column":563,"offset":3885}}}],"position":{"start":{"line":59,"column":1,"offset":3323},"end":{"line":59,"column":563,"offset":3885}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#handling_form_submission_via_callbacks","title":"Permalink to Handling form submission via callbacks"},"children":[{"type":"text","value":"Handling form submission via callbacks","position":{"start":{"line":61,"column":6,"offset":3892},"end":{"line":61,"column":44,"offset":3930}}}],"position":{"start":{"line":61,"column":5,"offset":3891},"end":{"line":61,"column":271,"offset":4157}}}],"position":{"start":{"line":61,"column":1,"offset":3887},"end":{"line":61,"column":271,"offset":4157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the top of our ","position":{"start":{"line":63,"column":1,"offset":4159},"end":{"line":63,"column":23,"offset":4181}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":63,"column":23,"offset":4181},"end":{"line":63,"column":30,"offset":4188}}},{"type":"text","value":" component function, create a function named ","position":{"start":{"line":63,"column":30,"offset":4188},"end":{"line":63,"column":75,"offset":4233}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":63,"column":75,"offset":4233},"end":{"line":63,"column":86,"offset":4244}}},{"type":"text","value":" which has a single parameter of ","position":{"start":{"line":63,"column":86,"offset":4244},"end":{"line":63,"column":119,"offset":4277}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":63,"column":119,"offset":4277},"end":{"line":63,"column":125,"offset":4283}}},{"type":"text","value":":","position":{"start":{"line":63,"column":125,"offset":4283},"end":{"line":63,"column":126,"offset":4284}}}],"position":{"start":{"line":63,"column":1,"offset":4159},"end":{"line":63,"column":126,"offset":4284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function addTask(name) {\n  alert(name);\n}\n"}],"position":{"start":{"line":65,"column":1,"offset":4286},"end":{"line":69,"column":4,"offset":4335}}}],"position":{"start":{"line":65,"column":1,"offset":4286},"end":{"line":69,"column":4,"offset":4335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we'll pass ","position":{"start":{"line":71,"column":1,"offset":4337},"end":{"line":71,"column":18,"offset":4354}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":71,"column":18,"offset":4354},"end":{"line":71,"column":29,"offset":4365}}},{"type":"text","value":" into ","position":{"start":{"line":71,"column":29,"offset":4365},"end":{"line":71,"column":35,"offset":4371}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":71,"column":35,"offset":4371},"end":{"line":71,"column":45,"offset":4381}}},{"type":"text","value":" as a prop. The prop can have whatever name you want, but pick a name you'll understand later. Something like ","position":{"start":{"line":71,"column":45,"offset":4381},"end":{"line":71,"column":155,"offset":4491}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":71,"column":155,"offset":4491},"end":{"line":71,"column":164,"offset":4500}}},{"type":"text","value":" works, because it matches the name of the function as well as what the function will do. Your ","position":{"start":{"line":71,"column":164,"offset":4500},"end":{"line":71,"column":259,"offset":4595}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":71,"column":259,"offset":4595},"end":{"line":71,"column":269,"offset":4605}}},{"type":"text","value":" component call should be updated as follows:","position":{"start":{"line":71,"column":269,"offset":4605},"end":{"line":71,"column":314,"offset":4650}}}],"position":{"start":{"line":71,"column":1,"offset":4337},"end":{"line":71,"column":314,"offset":4650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form addTask={addTask} />\n"}],"position":{"start":{"line":73,"column":1,"offset":4652},"end":{"line":75,"column":4,"offset":4686}}}],"position":{"start":{"line":73,"column":1,"offset":4652},"end":{"line":75,"column":4,"offset":4686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, you can use this prop inside the ","position":{"start":{"line":77,"column":1,"offset":4688},"end":{"line":77,"column":43,"offset":4730}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":77,"column":43,"offset":4730},"end":{"line":77,"column":59,"offset":4746}}},{"type":"text","value":" function in your ","position":{"start":{"line":77,"column":59,"offset":4746},"end":{"line":77,"column":77,"offset":4764}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":77,"column":77,"offset":4764},"end":{"line":77,"column":87,"offset":4774}}},{"type":"text","value":" component! Update it as follows:","position":{"start":{"line":77,"column":87,"offset":4774},"end":{"line":77,"column":120,"offset":4807}}}],"position":{"start":{"line":77,"column":1,"offset":4688},"end":{"line":77,"column":120,"offset":4807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleSubmit(e) {\n  e.preventDefault();\n  props.addTask(\"Say hello!\");\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":4809},"end":{"line":84,"column":4,"offset":4898}}}],"position":{"start":{"line":79,"column":1,"offset":4809},"end":{"line":84,"column":4,"offset":4898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Clicking on the \"Add\" button in your browser will prove that the ","position":{"start":{"line":86,"column":1,"offset":4900},"end":{"line":86,"column":66,"offset":4965}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":86,"column":66,"offset":4965},"end":{"line":86,"column":77,"offset":4976}}},{"type":"text","value":" callback function works, but it'd be nice if we could get the alert to show us what we're typing in our input field! This is what we'll do next.","position":{"start":{"line":86,"column":77,"offset":4976},"end":{"line":86,"column":222,"offset":5121}}}],"position":{"start":{"line":86,"column":1,"offset":4900},"end":{"line":86,"column":222,"offset":5121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":88,"column":3,"offset":5125},"end":{"line":88,"column":8,"offset":5130}}}],"position":{"start":{"line":88,"column":1,"offset":5123},"end":{"line":88,"column":10,"offset":5132}}},{"type":"text","value":" We decided to name our callback prop ","position":{"start":{"line":88,"column":10,"offset":5132},"end":{"line":88,"column":48,"offset":5170}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":88,"column":48,"offset":5170},"end":{"line":88,"column":57,"offset":5179}}},{"type":"text","value":" to make it easy to understand what the prop will do. Another common convention you may well come across in React code is to prefix callback prop names with the word ","position":{"start":{"line":88,"column":57,"offset":5179},"end":{"line":88,"column":223,"offset":5345}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"on"}],"position":{"start":{"line":88,"column":223,"offset":5345},"end":{"line":88,"column":227,"offset":5349}}},{"type":"text","value":", followed by the name of the event that will cause them to be run. For instance, we could have given our form a prop of ","position":{"start":{"line":88,"column":227,"offset":5349},"end":{"line":88,"column":348,"offset":5470}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onSubmit"}],"position":{"start":{"line":88,"column":348,"offset":5470},"end":{"line":88,"column":358,"offset":5480}}},{"type":"text","value":" with the value of ","position":{"start":{"line":88,"column":358,"offset":5480},"end":{"line":88,"column":377,"offset":5499}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask"}],"position":{"start":{"line":88,"column":377,"offset":5499},"end":{"line":88,"column":386,"offset":5508}}},{"type":"text","value":".","position":{"start":{"line":88,"column":386,"offset":5508},"end":{"line":88,"column":387,"offset":5509}}}],"position":{"start":{"line":88,"column":1,"offset":5123},"end":{"line":88,"column":387,"offset":5509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#state_and_the_usestate_hook","title":"Permalink to State and the useState hook"},"children":[{"type":"text","value":"State and the ","position":{"start":{"line":90,"column":5,"offset":5515},"end":{"line":90,"column":19,"offset":5529}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":90,"column":19,"offset":5529},"end":{"line":90,"column":29,"offset":5539}}},{"type":"text","value":" hook","position":{"start":{"line":90,"column":29,"offset":5539},"end":{"line":90,"column":34,"offset":5544}}}],"position":{"start":{"line":90,"column":4,"offset":5514},"end":{"line":90,"column":239,"offset":5749}}}],"position":{"start":{"line":90,"column":1,"offset":5511},"end":{"line":90,"column":239,"offset":5749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So far, we've used props to pass data through our components and this has served us just fine. Now that we're dealing with user input and data updates, however, we need something more.","position":{"start":{"line":92,"column":1,"offset":5751},"end":{"line":92,"column":185,"offset":5935}}}],"position":{"start":{"line":92,"column":1,"offset":5751},"end":{"line":92,"column":185,"offset":5935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For one thing, props come from the parent of a component. Our ","position":{"start":{"line":94,"column":1,"offset":5937},"end":{"line":94,"column":63,"offset":5999}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":94,"column":63,"offset":5999},"end":{"line":94,"column":73,"offset":6009}}},{"type":"text","value":" will not be inheriting a new name for our task; our ","position":{"start":{"line":94,"column":73,"offset":6009},"end":{"line":94,"column":126,"offset":6062}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":94,"column":126,"offset":6062},"end":{"line":94,"column":137,"offset":6073}}},{"type":"text","value":" element lives directly inside of ","position":{"start":{"line":94,"column":137,"offset":6073},"end":{"line":94,"column":171,"offset":6107}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":94,"column":171,"offset":6107},"end":{"line":94,"column":181,"offset":6117}}},{"type":"text","value":", so ","position":{"start":{"line":94,"column":181,"offset":6117},"end":{"line":94,"column":186,"offset":6122}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form/>"}],"position":{"start":{"line":94,"column":186,"offset":6122},"end":{"line":94,"column":195,"offset":6131}}},{"type":"text","value":" will be directly responsible for creating that new name. We can't ask ","position":{"start":{"line":94,"column":195,"offset":6131},"end":{"line":94,"column":266,"offset":6202}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Form />"}],"position":{"start":{"line":94,"column":266,"offset":6202},"end":{"line":94,"column":276,"offset":6212}}},{"type":"text","value":" to spontaneously create its own props, but we ","position":{"start":{"line":94,"column":276,"offset":6212},"end":{"line":94,"column":323,"offset":6259}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"can","position":{"start":{"line":94,"column":324,"offset":6260},"end":{"line":94,"column":327,"offset":6263}}}],"position":{"start":{"line":94,"column":323,"offset":6259},"end":{"line":94,"column":328,"offset":6264}}},{"type":"text","value":" ask it to track some of its own data for us. Data such as this, which a component itself owns, is called ","position":{"start":{"line":94,"column":328,"offset":6264},"end":{"line":94,"column":434,"offset":6370}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"state","position":{"start":{"line":94,"column":436,"offset":6372},"end":{"line":94,"column":441,"offset":6377}}}],"position":{"start":{"line":94,"column":434,"offset":6370},"end":{"line":94,"column":443,"offset":6379}}},{"type":"text","value":". State is another powerful tool for React because components not only ","position":{"start":{"line":94,"column":443,"offset":6379},"end":{"line":94,"column":514,"offset":6450}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"own","position":{"start":{"line":94,"column":515,"offset":6451},"end":{"line":94,"column":518,"offset":6454}}}],"position":{"start":{"line":94,"column":514,"offset":6450},"end":{"line":94,"column":519,"offset":6455}}},{"type":"text","value":" state, but can ","position":{"start":{"line":94,"column":519,"offset":6455},"end":{"line":94,"column":535,"offset":6471}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"update","position":{"start":{"line":94,"column":536,"offset":6472},"end":{"line":94,"column":542,"offset":6478}}}],"position":{"start":{"line":94,"column":535,"offset":6471},"end":{"line":94,"column":543,"offset":6479}}},{"type":"text","value":" it later. It's not possible to update the props a component receives; only to read them.","position":{"start":{"line":94,"column":543,"offset":6479},"end":{"line":94,"column":632,"offset":6568}}}],"position":{"start":{"line":94,"column":1,"offset":5937},"end":{"line":94,"column":632,"offset":6568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"React provides a variety of special functions that allow us to provide new capabilities to components, like state. These functions are called ","position":{"start":{"line":96,"column":1,"offset":6570},"end":{"line":96,"column":143,"offset":6712}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"hooks","position":{"start":{"line":96,"column":145,"offset":6714},"end":{"line":96,"column":150,"offset":6719}}}],"position":{"start":{"line":96,"column":143,"offset":6712},"end":{"line":96,"column":152,"offset":6721}}},{"type":"text","value":", and the ","position":{"start":{"line":96,"column":152,"offset":6721},"end":{"line":96,"column":162,"offset":6731}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":96,"column":162,"offset":6731},"end":{"line":96,"column":172,"offset":6741}}},{"type":"text","value":" hook, as its name implies, is precisely the one we need in order to give our component some state.","position":{"start":{"line":96,"column":172,"offset":6741},"end":{"line":96,"column":271,"offset":6840}}}],"position":{"start":{"line":96,"column":1,"offset":6570},"end":{"line":96,"column":271,"offset":6840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To use a React hook, we need to import it from the React module. In ","position":{"start":{"line":98,"column":1,"offset":6842},"end":{"line":98,"column":69,"offset":6910}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":98,"column":69,"offset":6910},"end":{"line":98,"column":78,"offset":6919}}},{"type":"text","value":", change your very first line so that it reads like this:","position":{"start":{"line":98,"column":78,"offset":6919},"end":{"line":98,"column":135,"offset":6976}}}],"position":{"start":{"line":98,"column":1,"offset":6842},"end":{"line":98,"column":135,"offset":6976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n"}],"position":{"start":{"line":100,"column":1,"offset":6978},"end":{"line":102,"column":4,"offset":7026}}}],"position":{"start":{"line":100,"column":1,"offset":6978},"end":{"line":102,"column":4,"offset":7026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This allows us to import the ","position":{"start":{"line":104,"column":1,"offset":7028},"end":{"line":104,"column":30,"offset":7057}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":104,"column":30,"offset":7057},"end":{"line":104,"column":42,"offset":7069}}},{"type":"text","value":" function by itself, and utilize it anywhere in this file.","position":{"start":{"line":104,"column":42,"offset":7069},"end":{"line":104,"column":100,"offset":7127}}}],"position":{"start":{"line":104,"column":1,"offset":7028},"end":{"line":104,"column":100,"offset":7127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":106,"column":1,"offset":7129},"end":{"line":106,"column":13,"offset":7141}}},{"type":"text","value":" creates a piece of state for a component, and its only parameter determines the ","position":{"start":{"line":106,"column":13,"offset":7141},"end":{"line":106,"column":94,"offset":7222}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"initial value","position":{"start":{"line":106,"column":95,"offset":7223},"end":{"line":106,"column":108,"offset":7236}}}],"position":{"start":{"line":106,"column":94,"offset":7222},"end":{"line":106,"column":109,"offset":7237}}},{"type":"text","value":" of that state. It returns two things: the state, and a function that can be used to update the state later.","position":{"start":{"line":106,"column":109,"offset":7237},"end":{"line":106,"column":217,"offset":7345}}}],"position":{"start":{"line":106,"column":1,"offset":7129},"end":{"line":106,"column":217,"offset":7345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a lot to take in at once, so let's try it out. We're going to make ourselves a ","position":{"start":{"line":108,"column":1,"offset":7347},"end":{"line":108,"column":88,"offset":7434}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":108,"column":88,"offset":7434},"end":{"line":108,"column":94,"offset":7440}}},{"type":"text","value":" state, and a function for updating the ","position":{"start":{"line":108,"column":94,"offset":7440},"end":{"line":108,"column":134,"offset":7480}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":108,"column":134,"offset":7480},"end":{"line":108,"column":140,"offset":7486}}},{"type":"text","value":" state.","position":{"start":{"line":108,"column":140,"offset":7486},"end":{"line":108,"column":147,"offset":7493}}}],"position":{"start":{"line":108,"column":1,"offset":7347},"end":{"line":108,"column":147,"offset":7493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write the following above your ","position":{"start":{"line":110,"column":1,"offset":7495},"end":{"line":110,"column":32,"offset":7526}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":110,"column":32,"offset":7526},"end":{"line":110,"column":48,"offset":7542}}},{"type":"text","value":" function, inside ","position":{"start":{"line":110,"column":48,"offset":7542},"end":{"line":110,"column":66,"offset":7560}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form()"}],"position":{"start":{"line":110,"column":66,"offset":7560},"end":{"line":110,"column":74,"offset":7568}}},{"type":"text","value":":","position":{"start":{"line":110,"column":74,"offset":7568},"end":{"line":110,"column":75,"offset":7569}}}],"position":{"start":{"line":110,"column":1,"offset":7495},"end":{"line":110,"column":75,"offset":7569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [name, setName] = useState('Use hooks!');\n"}],"position":{"start":{"line":112,"column":1,"offset":7571},"end":{"line":114,"column":4,"offset":7626}}}],"position":{"start":{"line":112,"column":1,"offset":7571},"end":{"line":114,"column":4,"offset":7626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What's going on in this line of code?","position":{"start":{"line":116,"column":1,"offset":7628},"end":{"line":116,"column":38,"offset":7665}}}],"position":{"start":{"line":116,"column":1,"offset":7628},"end":{"line":116,"column":38,"offset":7665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are setting the initial ","position":{"start":{"line":118,"column":5,"offset":7671},"end":{"line":118,"column":32,"offset":7698}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":118,"column":32,"offset":7698},"end":{"line":118,"column":38,"offset":7704}}},{"type":"text","value":" value as \"Use hooks!\".","position":{"start":{"line":118,"column":38,"offset":7704},"end":{"line":118,"column":61,"offset":7727}}}],"position":{"start":{"line":118,"column":1,"offset":7667},"end":{"line":118,"column":61,"offset":7727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are defining a function whose job is to modify ","position":{"start":{"line":119,"column":5,"offset":7732},"end":{"line":119,"column":55,"offset":7782}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":119,"column":55,"offset":7782},"end":{"line":119,"column":61,"offset":7788}}},{"type":"text","value":", called ","position":{"start":{"line":119,"column":61,"offset":7788},"end":{"line":119,"column":70,"offset":7797}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":119,"column":70,"offset":7797},"end":{"line":119,"column":81,"offset":7808}}},{"type":"text","value":".","position":{"start":{"line":119,"column":81,"offset":7808},"end":{"line":119,"column":82,"offset":7809}}}],"position":{"start":{"line":119,"column":1,"offset":7728},"end":{"line":119,"column":82,"offset":7809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":120,"column":5,"offset":7814},"end":{"line":120,"column":17,"offset":7826}}},{"type":"text","value":" returns these two things, so we are using ","position":{"start":{"line":120,"column":17,"offset":7826},"end":{"line":120,"column":60,"offset":7869}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"children":[{"type":"text","value":"array destructuring","position":{"start":{"line":120,"column":61,"offset":7870},"end":{"line":120,"column":80,"offset":7889}}}],"position":{"start":{"line":120,"column":60,"offset":7869},"end":{"line":120,"column":183,"offset":7992}}},{"type":"text","value":" to capture them both in separate variables.","position":{"start":{"line":120,"column":183,"offset":7992},"end":{"line":120,"column":227,"offset":8036}}}],"position":{"start":{"line":120,"column":1,"offset":7810},"end":{"line":120,"column":227,"offset":8036}}},{"type":"text","value":"\n"}],"position":{"start":{"line":118,"column":1,"offset":7667},"end":{"line":120,"column":227,"offset":8036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_state","title":"Permalink to Reading state"},"children":[{"type":"text","value":"Reading state","position":{"start":{"line":122,"column":6,"offset":8043},"end":{"line":122,"column":19,"offset":8056}}}],"position":{"start":{"line":122,"column":5,"offset":8042},"end":{"line":122,"column":196,"offset":8233}}}],"position":{"start":{"line":122,"column":1,"offset":8038},"end":{"line":122,"column":196,"offset":8233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see the ","position":{"start":{"line":124,"column":1,"offset":8235},"end":{"line":124,"column":17,"offset":8251}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":124,"column":17,"offset":8251},"end":{"line":124,"column":23,"offset":8257}}},{"type":"text","value":" state in action right away. Add a ","position":{"start":{"line":124,"column":23,"offset":8257},"end":{"line":124,"column":58,"offset":8292}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":124,"column":58,"offset":8292},"end":{"line":124,"column":65,"offset":8299}}},{"type":"text","value":" attribute to the form's input, and set its value to ","position":{"start":{"line":124,"column":65,"offset":8299},"end":{"line":124,"column":118,"offset":8352}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":124,"column":118,"offset":8352},"end":{"line":124,"column":124,"offset":8358}}},{"type":"text","value":". Your browser will render \"Use hooks!\" inside the input.","position":{"start":{"line":124,"column":124,"offset":8358},"end":{"line":124,"column":181,"offset":8415}}}],"position":{"start":{"line":124,"column":1,"offset":8235},"end":{"line":124,"column":181,"offset":8415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input\n  type=\"text\"\n  id=\"new-todo-input\"\n  className=\"input input__lg\"\n  name=\"text\"\n  autoComplete=\"off\"\n  value={name}\n/>\n"}],"position":{"start":{"line":126,"column":1,"offset":8417},"end":{"line":135,"column":4,"offset":8550}}}],"position":{"start":{"line":126,"column":1,"offset":8417},"end":{"line":135,"column":4,"offset":8550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Change \"Use hooks!\" to an empty string once you're done; this is what we want for our initial state.","position":{"start":{"line":137,"column":1,"offset":8552},"end":{"line":137,"column":101,"offset":8652}}}],"position":{"start":{"line":137,"column":1,"offset":8552},"end":{"line":137,"column":101,"offset":8652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [name, setName] = useState('');\n"}],"position":{"start":{"line":139,"column":1,"offset":8654},"end":{"line":141,"column":4,"offset":8699}}}],"position":{"start":{"line":139,"column":1,"offset":8654},"end":{"line":141,"column":4,"offset":8699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#reading_user_input","title":"Permalink to Reading user input"},"children":[{"type":"text","value":"Reading user input","position":{"start":{"line":143,"column":6,"offset":8706},"end":{"line":143,"column":24,"offset":8724}}}],"position":{"start":{"line":143,"column":5,"offset":8705},"end":{"line":143,"column":211,"offset":8911}}}],"position":{"start":{"line":143,"column":1,"offset":8701},"end":{"line":143,"column":211,"offset":8911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before we can change the value of ","position":{"start":{"line":145,"column":1,"offset":8913},"end":{"line":145,"column":35,"offset":8947}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":145,"column":35,"offset":8947},"end":{"line":145,"column":41,"offset":8953}}},{"type":"text","value":", we need to capture a user's input as they type. For this, we can listen to the ","position":{"start":{"line":145,"column":41,"offset":8953},"end":{"line":145,"column":122,"offset":9034}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}],"position":{"start":{"line":145,"column":122,"offset":9034},"end":{"line":145,"column":132,"offset":9044}}},{"type":"text","value":" event. Let's write a ","position":{"start":{"line":145,"column":132,"offset":9044},"end":{"line":145,"column":154,"offset":9066}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":145,"column":154,"offset":9066},"end":{"line":145,"column":170,"offset":9082}}},{"type":"text","value":" function, and listen for it on the ","position":{"start":{"line":145,"column":170,"offset":9082},"end":{"line":145,"column":206,"offset":9118}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":145,"column":206,"offset":9118},"end":{"line":145,"column":217,"offset":9129}}},{"type":"text","value":" tag.","position":{"start":{"line":145,"column":217,"offset":9129},"end":{"line":145,"column":222,"offset":9134}}}],"position":{"start":{"line":145,"column":1,"offset":8913},"end":{"line":145,"column":222,"offset":9134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"// near the top of the `Form` component\nfunction handleChange(e) {\n  console.log(\"Typing!\");\n}\n\n// Down in the return statement\n<input\n  type=\"text\"\n  id=\"new-todo-input\"\n  className=\"input input__lg\"\n  name=\"text\"\n  autoComplete=\"off\"\n  value={name}\n  onChange={handleChange}\n/>\n"}],"position":{"start":{"line":147,"column":1,"offset":9136},"end":{"line":163,"column":4,"offset":9423}}}],"position":{"start":{"line":147,"column":1,"offset":9136},"end":{"line":163,"column":4,"offset":9423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Currently, your input's value will not change as you type, but your browser will log the word \"Typing!\" to the JavaScript console, so we know our event listener is attached to the input. In order to change the input's value, we have to use our ","position":{"start":{"line":165,"column":1,"offset":9425},"end":{"line":165,"column":245,"offset":9669}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":165,"column":245,"offset":9669},"end":{"line":165,"column":261,"offset":9685}}},{"type":"text","value":" function to update our ","position":{"start":{"line":165,"column":261,"offset":9685},"end":{"line":165,"column":285,"offset":9709}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":165,"column":285,"offset":9709},"end":{"line":165,"column":291,"offset":9715}}},{"type":"text","value":" state.","position":{"start":{"line":165,"column":291,"offset":9715},"end":{"line":165,"column":298,"offset":9722}}}],"position":{"start":{"line":165,"column":1,"offset":9425},"end":{"line":165,"column":298,"offset":9722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To read the contents of the input field as they change, you can access the input's ","position":{"start":{"line":167,"column":1,"offset":9724},"end":{"line":167,"column":84,"offset":9807}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":167,"column":84,"offset":9807},"end":{"line":167,"column":91,"offset":9814}}},{"type":"text","value":" property. We can do this inside ","position":{"start":{"line":167,"column":91,"offset":9814},"end":{"line":167,"column":124,"offset":9847}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleChange()"}],"position":{"start":{"line":167,"column":124,"offset":9847},"end":{"line":167,"column":140,"offset":9863}}},{"type":"text","value":" by reading ","position":{"start":{"line":167,"column":140,"offset":9863},"end":{"line":167,"column":152,"offset":9875}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e.target.value"}],"position":{"start":{"line":167,"column":152,"offset":9875},"end":{"line":167,"column":168,"offset":9891}}},{"type":"text","value":". ","position":{"start":{"line":167,"column":168,"offset":9891},"end":{"line":167,"column":170,"offset":9893}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"e.target"}],"position":{"start":{"line":167,"column":170,"offset":9893},"end":{"line":167,"column":180,"offset":9903}}},{"type":"text","value":" represents the element that fired the ","position":{"start":{"line":167,"column":180,"offset":9903},"end":{"line":167,"column":219,"offset":9942}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"change"}],"position":{"start":{"line":167,"column":219,"offset":9942},"end":{"line":167,"column":227,"offset":9950}}},{"type":"text","value":" event — that's our input. So, ","position":{"start":{"line":167,"column":227,"offset":9950},"end":{"line":167,"column":258,"offset":9981}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"value"}],"position":{"start":{"line":167,"column":258,"offset":9981},"end":{"line":167,"column":265,"offset":9988}}},{"type":"text","value":" is the text inside it.","position":{"start":{"line":167,"column":265,"offset":9988},"end":{"line":167,"column":288,"offset":10011}}}],"position":{"start":{"line":167,"column":1,"offset":9724},"end":{"line":167,"column":288,"offset":10011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can ","position":{"start":{"line":169,"column":1,"offset":10013},"end":{"line":169,"column":9,"offset":10021}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log()"}],"position":{"start":{"line":169,"column":9,"offset":10021},"end":{"line":169,"column":24,"offset":10036}}},{"type":"text","value":" this value to see it in your browser's console.","position":{"start":{"line":169,"column":24,"offset":10036},"end":{"line":169,"column":72,"offset":10084}}}],"position":{"start":{"line":169,"column":1,"offset":10013},"end":{"line":169,"column":72,"offset":10084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleChange(e) {\n  console.log(e.target.value);\n}\n"}],"position":{"start":{"line":171,"column":1,"offset":10086},"end":{"line":175,"column":4,"offset":10153}}}],"position":{"start":{"line":171,"column":1,"offset":10086},"end":{"line":175,"column":4,"offset":10153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#updating_state","title":"Permalink to Updating state"},"children":[{"type":"text","value":"Updating state","position":{"start":{"line":177,"column":6,"offset":10160},"end":{"line":177,"column":20,"offset":10174}}}],"position":{"start":{"line":177,"column":5,"offset":10159},"end":{"line":177,"column":199,"offset":10353}}}],"position":{"start":{"line":177,"column":1,"offset":10155},"end":{"line":177,"column":199,"offset":10353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logging isn't enough — we want to actually store the updated state of the name as the input value changes! Change the ","position":{"start":{"line":179,"column":1,"offset":10355},"end":{"line":179,"column":119,"offset":10473}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log()"}],"position":{"start":{"line":179,"column":119,"offset":10473},"end":{"line":179,"column":134,"offset":10488}}},{"type":"text","value":" to ","position":{"start":{"line":179,"column":134,"offset":10488},"end":{"line":179,"column":138,"offset":10492}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":179,"column":138,"offset":10492},"end":{"line":179,"column":149,"offset":10503}}},{"type":"text","value":", as shown below:","position":{"start":{"line":179,"column":149,"offset":10503},"end":{"line":179,"column":166,"offset":10520}}}],"position":{"start":{"line":179,"column":1,"offset":10355},"end":{"line":179,"column":166,"offset":10520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleChange(e) {\n  setName(e.target.value);\n}\n"}],"position":{"start":{"line":181,"column":1,"offset":10522},"end":{"line":185,"column":4,"offset":10585}}}],"position":{"start":{"line":181,"column":1,"offset":10522},"end":{"line":185,"column":4,"offset":10585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we need to change our ","position":{"start":{"line":187,"column":1,"offset":10587},"end":{"line":187,"column":27,"offset":10613}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":187,"column":27,"offset":10613},"end":{"line":187,"column":43,"offset":10629}}},{"type":"text","value":" function so that it calls ","position":{"start":{"line":187,"column":43,"offset":10629},"end":{"line":187,"column":70,"offset":10656}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.addTask"}],"position":{"start":{"line":187,"column":70,"offset":10656},"end":{"line":187,"column":85,"offset":10671}}},{"type":"text","value":" with name as an argument — remember our callback prop? This will serve to send the task back to the ","position":{"start":{"line":187,"column":85,"offset":10671},"end":{"line":187,"column":186,"offset":10772}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App"}],"position":{"start":{"line":187,"column":186,"offset":10772},"end":{"line":187,"column":191,"offset":10777}}},{"type":"text","value":" component, so we can add it to our list of tasks at some later date. As a matter of good practice, you should clear the input after your form submits, so we'll call ","position":{"start":{"line":187,"column":191,"offset":10777},"end":{"line":187,"column":357,"offset":10943}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setName()"}],"position":{"start":{"line":187,"column":357,"offset":10943},"end":{"line":187,"column":368,"offset":10954}}},{"type":"text","value":" again with an empty string to do so:","position":{"start":{"line":187,"column":368,"offset":10954},"end":{"line":187,"column":405,"offset":10991}}}],"position":{"start":{"line":187,"column":1,"offset":10587},"end":{"line":187,"column":405,"offset":10991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function handleSubmit(e) {\n  e.preventDefault();\n  props.addTask(name);\n  setName(\"\");\n}\n"}],"position":{"start":{"line":189,"column":1,"offset":10993},"end":{"line":195,"column":4,"offset":11089}}}],"position":{"start":{"line":189,"column":1,"offset":10993},"end":{"line":195,"column":4,"offset":11089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At last, you can type something into the input field in your browser and click ","position":{"start":{"line":197,"column":1,"offset":11091},"end":{"line":197,"column":80,"offset":11170}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Add","position":{"start":{"line":197,"column":81,"offset":11171},"end":{"line":197,"column":84,"offset":11174}}}],"position":{"start":{"line":197,"column":80,"offset":11170},"end":{"line":197,"column":85,"offset":11175}}},{"type":"text","value":" — whatever you typed will appear in an alert dialog.","position":{"start":{"line":197,"column":85,"offset":11175},"end":{"line":197,"column":138,"offset":11228}}}],"position":{"start":{"line":197,"column":1,"offset":11091},"end":{"line":197,"column":138,"offset":11228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your ","position":{"start":{"line":199,"column":1,"offset":11230},"end":{"line":199,"column":6,"offset":11235}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Form.js"}],"position":{"start":{"line":199,"column":6,"offset":11235},"end":{"line":199,"column":15,"offset":11244}}},{"type":"text","value":" file should now read like this:","position":{"start":{"line":199,"column":15,"offset":11244},"end":{"line":199,"column":47,"offset":11276}}}],"position":{"start":{"line":199,"column":1,"offset":11230},"end":{"line":199,"column":47,"offset":11276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n"}],"position":{"start":{"line":201,"column":1,"offset":11278},"end":{"line":240,"column":4,"offset":12102}}}],"position":{"start":{"line":201,"column":1,"offset":11278},"end":{"line":240,"column":4,"offset":12102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":242,"column":3,"offset":12106},"end":{"line":242,"column":8,"offset":12111}}}],"position":{"start":{"line":242,"column":1,"offset":12104},"end":{"line":242,"column":10,"offset":12113}}},{"type":"text","value":" One thing you'll notice is that you are able to submit empty tasks by just pressing the Add button without entering a task name. Can you think of a way to disallow empty tasks from being added? As a hint, you probably need to add some kind of check into the ","position":{"start":{"line":242,"column":10,"offset":12113},"end":{"line":242,"column":269,"offset":12372}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"handleSubmit()"}],"position":{"start":{"line":242,"column":269,"offset":12372},"end":{"line":242,"column":285,"offset":12388}}},{"type":"text","value":" function.","position":{"start":{"line":242,"column":285,"offset":12388},"end":{"line":242,"column":295,"offset":12398}}}],"position":{"start":{"line":242,"column":1,"offset":12104},"end":{"line":242,"column":295,"offset":12398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#putting_it_all_together_adding_a_task","title":"Permalink to Putting it all together: Adding a task"},"children":[{"type":"text","value":"Putting it all together: Adding a task","position":{"start":{"line":244,"column":5,"offset":12404},"end":{"line":244,"column":43,"offset":12442}}}],"position":{"start":{"line":244,"column":4,"offset":12403},"end":{"line":244,"column":269,"offset":12668}}}],"position":{"start":{"line":244,"column":1,"offset":12400},"end":{"line":244,"column":269,"offset":12668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we've practiced with events, callback props, and hooks we're ready to write functionality that will allow a user to add a new task from their browser.","position":{"start":{"line":246,"column":1,"offset":12670},"end":{"line":246,"column":160,"offset":12829}}}],"position":{"start":{"line":246,"column":1,"offset":12670},"end":{"line":246,"column":160,"offset":12829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#tasks_as_state","title":"Permalink to Tasks as state"},"children":[{"type":"text","value":"Tasks as state","position":{"start":{"line":248,"column":6,"offset":12836},"end":{"line":248,"column":20,"offset":12850}}}],"position":{"start":{"line":248,"column":5,"offset":12835},"end":{"line":248,"column":199,"offset":13029}}}],"position":{"start":{"line":248,"column":1,"offset":12831},"end":{"line":248,"column":199,"offset":13029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Import ","position":{"start":{"line":250,"column":1,"offset":13031},"end":{"line":250,"column":8,"offset":13038}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState"}],"position":{"start":{"line":250,"column":8,"offset":13038},"end":{"line":250,"column":18,"offset":13048}}},{"type":"text","value":" into ","position":{"start":{"line":250,"column":18,"offset":13048},"end":{"line":250,"column":24,"offset":13054}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":250,"column":24,"offset":13054},"end":{"line":250,"column":32,"offset":13062}}},{"type":"text","value":", so that we can store our tasks in state — update your ","position":{"start":{"line":250,"column":32,"offset":13062},"end":{"line":250,"column":88,"offset":13118}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"React"}],"position":{"start":{"line":250,"column":88,"offset":13118},"end":{"line":250,"column":95,"offset":13125}}},{"type":"text","value":" import line to the following:","position":{"start":{"line":250,"column":95,"offset":13125},"end":{"line":250,"column":125,"offset":13155}}}],"position":{"start":{"line":250,"column":1,"offset":13031},"end":{"line":250,"column":125,"offset":13155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import React, { useState } from \"react\";\n"}],"position":{"start":{"line":252,"column":1,"offset":13157},"end":{"line":254,"column":4,"offset":13205}}}],"position":{"start":{"line":252,"column":1,"offset":13157},"end":{"line":254,"column":4,"offset":13205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to pass ","position":{"start":{"line":256,"column":1,"offset":13207},"end":{"line":256,"column":17,"offset":13223}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.tasks"}],"position":{"start":{"line":256,"column":17,"offset":13223},"end":{"line":256,"column":30,"offset":13236}}},{"type":"text","value":" into the ","position":{"start":{"line":256,"column":30,"offset":13236},"end":{"line":256,"column":40,"offset":13246}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"useState()"}],"position":{"start":{"line":256,"column":40,"offset":13246},"end":{"line":256,"column":52,"offset":13258}}},{"type":"text","value":" hook – this will preserve its initial state. Add the following right at the top of your App() function definition:","position":{"start":{"line":256,"column":52,"offset":13258},"end":{"line":256,"column":167,"offset":13373}}}],"position":{"start":{"line":256,"column":1,"offset":13207},"end":{"line":256,"column":167,"offset":13373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const [tasks, setTasks] = useState(props.tasks);\n"}],"position":{"start":{"line":258,"column":1,"offset":13375},"end":{"line":260,"column":4,"offset":13431}}}],"position":{"start":{"line":258,"column":1,"offset":13375},"end":{"line":260,"column":4,"offset":13431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, we can change our ","position":{"start":{"line":262,"column":1,"offset":13433},"end":{"line":262,"column":24,"offset":13456}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":262,"column":24,"offset":13456},"end":{"line":262,"column":34,"offset":13466}}},{"type":"text","value":" mapping so that it is the result of mapping ","position":{"start":{"line":262,"column":34,"offset":13466},"end":{"line":262,"column":79,"offset":13511}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":262,"column":79,"offset":13511},"end":{"line":262,"column":86,"offset":13518}}},{"type":"text","value":", instead of ","position":{"start":{"line":262,"column":86,"offset":13518},"end":{"line":262,"column":99,"offset":13531}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.tasks"}],"position":{"start":{"line":262,"column":99,"offset":13531},"end":{"line":262,"column":112,"offset":13544}}},{"type":"text","value":". Your ","position":{"start":{"line":262,"column":112,"offset":13544},"end":{"line":262,"column":119,"offset":13551}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":262,"column":119,"offset":13551},"end":{"line":262,"column":129,"offset":13561}}},{"type":"text","value":" constant declaration should now look like so:","position":{"start":{"line":262,"column":129,"offset":13561},"end":{"line":262,"column":175,"offset":13607}}}],"position":{"start":{"line":262,"column":1,"offset":13433},"end":{"line":262,"column":175,"offset":13607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n      />\n    )\n  );\n"}],"position":{"start":{"line":264,"column":1,"offset":13609},"end":{"line":274,"column":4,"offset":13786}}}],"position":{"start":{"line":264,"column":1,"offset":13609},"end":{"line":274,"column":4,"offset":13786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#adding_a_task","title":"Permalink to Adding a task"},"children":[{"type":"text","value":"Adding a task","position":{"start":{"line":276,"column":6,"offset":13793},"end":{"line":276,"column":19,"offset":13806}}}],"position":{"start":{"line":276,"column":5,"offset":13792},"end":{"line":276,"column":196,"offset":13983}}}],"position":{"start":{"line":276,"column":1,"offset":13788},"end":{"line":276,"column":196,"offset":13983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We've now got a ","position":{"start":{"line":278,"column":1,"offset":13985},"end":{"line":278,"column":17,"offset":14001}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks"}],"position":{"start":{"line":278,"column":17,"offset":14001},"end":{"line":278,"column":27,"offset":14011}}},{"type":"text","value":" hook that we can use in our ","position":{"start":{"line":278,"column":27,"offset":14011},"end":{"line":278,"column":56,"offset":14040}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":278,"column":56,"offset":14040},"end":{"line":278,"column":67,"offset":14051}}},{"type":"text","value":" function to update our list of tasks. There's one problem however: we can't just pass the ","position":{"start":{"line":278,"column":67,"offset":14051},"end":{"line":278,"column":158,"offset":14142}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":278,"column":158,"offset":14142},"end":{"line":278,"column":164,"offset":14148}}},{"type":"text","value":" argument of ","position":{"start":{"line":278,"column":164,"offset":14148},"end":{"line":278,"column":177,"offset":14161}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":278,"column":177,"offset":14161},"end":{"line":278,"column":188,"offset":14172}}},{"type":"text","value":" into ","position":{"start":{"line":278,"column":188,"offset":14172},"end":{"line":278,"column":194,"offset":14178}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks"}],"position":{"start":{"line":278,"column":194,"offset":14178},"end":{"line":278,"column":204,"offset":14188}}},{"type":"text","value":", because ","position":{"start":{"line":278,"column":204,"offset":14188},"end":{"line":278,"column":214,"offset":14198}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":278,"column":214,"offset":14198},"end":{"line":278,"column":221,"offset":14205}}},{"type":"text","value":" is an array of objects and ","position":{"start":{"line":278,"column":221,"offset":14205},"end":{"line":278,"column":249,"offset":14233}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":278,"column":249,"offset":14233},"end":{"line":278,"column":255,"offset":14239}}},{"type":"text","value":" is a string. If we tried to do this, the array would be replaced with the string.","position":{"start":{"line":278,"column":255,"offset":14239},"end":{"line":278,"column":337,"offset":14321}}}],"position":{"start":{"line":278,"column":1,"offset":13985},"end":{"line":278,"column":337,"offset":14321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First of all, we need to put ","position":{"start":{"line":280,"column":1,"offset":14323},"end":{"line":280,"column":30,"offset":14352}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name"}],"position":{"start":{"line":280,"column":30,"offset":14352},"end":{"line":280,"column":36,"offset":14358}}},{"type":"text","value":" into an object that has the same structure as our existing tasks. Inside of the ","position":{"start":{"line":280,"column":36,"offset":14358},"end":{"line":280,"column":117,"offset":14439}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":280,"column":117,"offset":14439},"end":{"line":280,"column":128,"offset":14450}}},{"type":"text","value":" function, we will make a ","position":{"start":{"line":280,"column":128,"offset":14450},"end":{"line":280,"column":154,"offset":14476}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"newTask"}],"position":{"start":{"line":280,"column":154,"offset":14476},"end":{"line":280,"column":163,"offset":14485}}},{"type":"text","value":" object to add to the array.","position":{"start":{"line":280,"column":163,"offset":14485},"end":{"line":280,"column":191,"offset":14513}}}],"position":{"start":{"line":280,"column":1,"offset":14323},"end":{"line":280,"column":191,"offset":14513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We then need to make a new array with this new task added to it and then update the state of the tasks data to this new state. To do this, we can use spread syntax to ","position":{"start":{"line":282,"column":1,"offset":14515},"end":{"line":282,"column":168,"offset":14682}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax#copy_an_array"},"children":[{"type":"text","value":"copy the existing array","position":{"start":{"line":282,"column":169,"offset":14683},"end":{"line":282,"column":192,"offset":14706}}}],"position":{"start":{"line":282,"column":168,"offset":14682},"end":{"line":282,"column":298,"offset":14812}}},{"type":"text","value":", and add our object at the end. We then pass this array into ","position":{"start":{"line":282,"column":298,"offset":14812},"end":{"line":282,"column":360,"offset":14874}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":282,"column":360,"offset":14874},"end":{"line":282,"column":372,"offset":14886}}},{"type":"text","value":" to update the state.","position":{"start":{"line":282,"column":372,"offset":14886},"end":{"line":282,"column":393,"offset":14907}}}],"position":{"start":{"line":282,"column":1,"offset":14515},"end":{"line":282,"column":393,"offset":14907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Putting that all together, your ","position":{"start":{"line":284,"column":1,"offset":14909},"end":{"line":284,"column":33,"offset":14941}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":284,"column":33,"offset":14941},"end":{"line":284,"column":44,"offset":14952}}},{"type":"text","value":" function should read like so:","position":{"start":{"line":284,"column":44,"offset":14952},"end":{"line":284,"column":74,"offset":14982}}}],"position":{"start":{"line":284,"column":1,"offset":14909},"end":{"line":284,"column":74,"offset":14982}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function addTask(name) {\n  const newTask = { id: \"id\", name: name, completed: false };\n  setTasks([...tasks, newTask]);\n}\n"}],"position":{"start":{"line":286,"column":1,"offset":14984},"end":{"line":291,"column":4,"offset":15113}}}],"position":{"start":{"line":286,"column":1,"offset":14984},"end":{"line":291,"column":4,"offset":15113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can use the browser to add a task to our data! Type anything into the form and click \"Add\" (or press the Enter key) and you'll see your new todo item appear in the UI!","position":{"start":{"line":293,"column":1,"offset":15115},"end":{"line":293,"column":176,"offset":15290}}}],"position":{"start":{"line":293,"column":1,"offset":15115},"end":{"line":293,"column":176,"offset":15290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"However, we have another problem","position":{"start":{"line":295,"column":3,"offset":15294},"end":{"line":295,"column":35,"offset":15326}}}],"position":{"start":{"line":295,"column":1,"offset":15292},"end":{"line":295,"column":37,"offset":15328}}},{"type":"text","value":": our ","position":{"start":{"line":295,"column":37,"offset":15328},"end":{"line":295,"column":43,"offset":15334}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":295,"column":43,"offset":15334},"end":{"line":295,"column":54,"offset":15345}}},{"type":"text","value":" function is giving each task the same ","position":{"start":{"line":295,"column":54,"offset":15345},"end":{"line":295,"column":93,"offset":15384}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":295,"column":93,"offset":15384},"end":{"line":295,"column":97,"offset":15388}}},{"type":"text","value":". This is bad for accessibility, and makes it impossible for React to tell future tasks apart with the ","position":{"start":{"line":295,"column":97,"offset":15388},"end":{"line":295,"column":200,"offset":15491}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"key"}],"position":{"start":{"line":295,"column":200,"offset":15491},"end":{"line":295,"column":205,"offset":15496}}},{"type":"text","value":" prop. In fact, React will give you a warning in your DevTools console — \"Warning: Encountered two children with the same key...\"","position":{"start":{"line":295,"column":205,"offset":15496},"end":{"line":295,"column":334,"offset":15625}}}],"position":{"start":{"line":295,"column":1,"offset":15292},"end":{"line":295,"column":334,"offset":15625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We need to fix this. Making unique identifiers is a hard problem – one for which the JavaScript community has written some helpful libraries. We'll use ","position":{"start":{"line":297,"column":1,"offset":15627},"end":{"line":297,"column":153,"offset":15779}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/ai/nanoid"},"children":[{"type":"text","value":"nanoid","position":{"start":{"line":297,"column":154,"offset":15780},"end":{"line":297,"column":160,"offset":15786}}}],"position":{"start":{"line":297,"column":153,"offset":15779},"end":{"line":297,"column":191,"offset":15817}}},{"type":"text","value":" because it's tiny, and it works.","position":{"start":{"line":297,"column":191,"offset":15817},"end":{"line":297,"column":224,"offset":15850}}}],"position":{"start":{"line":297,"column":1,"offset":15627},"end":{"line":297,"column":224,"offset":15850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Make sure you're in the root directory of your application and run the following terminal command:","position":{"start":{"line":299,"column":1,"offset":15852},"end":{"line":299,"column":99,"offset":15950}}}],"position":{"start":{"line":299,"column":1,"offset":15852},"end":{"line":299,"column":99,"offset":15950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":301,"column":3,"offset":15954},"end":{"line":301,"column":8,"offset":15959}}}],"position":{"start":{"line":301,"column":1,"offset":15952},"end":{"line":301,"column":10,"offset":15961}}},{"type":"text","value":" If you're using yarn, you'll need the following instead: ","position":{"start":{"line":301,"column":10,"offset":15961},"end":{"line":301,"column":68,"offset":16019}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"yarn add nanoid"}],"position":{"start":{"line":301,"column":68,"offset":16019},"end":{"line":301,"column":85,"offset":16036}}}],"position":{"start":{"line":301,"column":1,"offset":15952},"end":{"line":301,"column":85,"offset":16036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can import ","position":{"start":{"line":303,"column":1,"offset":16038},"end":{"line":303,"column":19,"offset":16056}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nanoid"}],"position":{"start":{"line":303,"column":19,"offset":16056},"end":{"line":303,"column":27,"offset":16064}}},{"type":"text","value":" into the top of ","position":{"start":{"line":303,"column":27,"offset":16064},"end":{"line":303,"column":44,"offset":16081}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":303,"column":44,"offset":16081},"end":{"line":303,"column":52,"offset":16089}}},{"type":"text","value":" so we can use it to create unique IDs for our new tasks. First of all, include the following import line at the top of ","position":{"start":{"line":303,"column":52,"offset":16089},"end":{"line":303,"column":172,"offset":16209}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":303,"column":172,"offset":16209},"end":{"line":303,"column":180,"offset":16217}}},{"type":"text","value":":","position":{"start":{"line":303,"column":180,"offset":16217},"end":{"line":303,"column":181,"offset":16218}}}],"position":{"start":{"line":303,"column":1,"offset":16038},"end":{"line":303,"column":181,"offset":16218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import { nanoid } from \"nanoid\";\n"}],"position":{"start":{"line":305,"column":1,"offset":16220},"end":{"line":307,"column":4,"offset":16260}}}],"position":{"start":{"line":305,"column":1,"offset":16220},"end":{"line":307,"column":4,"offset":16260}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's update ","position":{"start":{"line":309,"column":1,"offset":16262},"end":{"line":309,"column":18,"offset":16279}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"addTask()"}],"position":{"start":{"line":309,"column":18,"offset":16279},"end":{"line":309,"column":29,"offset":16290}}},{"type":"text","value":" so that each task ID becomes a prefix todo- plus a unique string generated by nanoid. Update your ","position":{"start":{"line":309,"column":29,"offset":16290},"end":{"line":309,"column":128,"offset":16389}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"newTask"}],"position":{"start":{"line":309,"column":128,"offset":16389},"end":{"line":309,"column":137,"offset":16398}}},{"type":"text","value":" constant declaration to this:","position":{"start":{"line":309,"column":137,"offset":16398},"end":{"line":309,"column":167,"offset":16428}}}],"position":{"start":{"line":309,"column":1,"offset":16262},"end":{"line":309,"column":167,"offset":16428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n"}],"position":{"start":{"line":311,"column":1,"offset":16430},"end":{"line":313,"column":4,"offset":16511}}}],"position":{"start":{"line":311,"column":1,"offset":16430},"end":{"line":313,"column":4,"offset":16511}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Save everything, and try your app again — now you can add tasks without getting that warning about duplicate IDs.","position":{"start":{"line":315,"column":1,"offset":16513},"end":{"line":315,"column":114,"offset":16626}}}],"position":{"start":{"line":315,"column":1,"offset":16513},"end":{"line":315,"column":114,"offset":16626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#detour_counting_tasks","title":"Permalink to Detour: counting tasks"},"children":[{"type":"text","value":"Detour: counting tasks","position":{"start":{"line":317,"column":5,"offset":16632},"end":{"line":317,"column":27,"offset":16654}}}],"position":{"start":{"line":317,"column":4,"offset":16631},"end":{"line":317,"column":221,"offset":16848}}}],"position":{"start":{"line":317,"column":1,"offset":16628},"end":{"line":317,"column":221,"offset":16848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we can add new tasks, you may notice a problem: our heading reads 3 tasks remaining, no matter how many tasks we have! We can fix this by counting the length of ","position":{"start":{"line":319,"column":1,"offset":16850},"end":{"line":319,"column":171,"offset":17020}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":319,"column":171,"offset":17020},"end":{"line":319,"column":181,"offset":17030}}},{"type":"text","value":" and changing the text of our heading accordingly.","position":{"start":{"line":319,"column":181,"offset":17030},"end":{"line":319,"column":231,"offset":17080}}}],"position":{"start":{"line":319,"column":1,"offset":16850},"end":{"line":319,"column":231,"offset":17080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add this inside your ","position":{"start":{"line":321,"column":1,"offset":17082},"end":{"line":321,"column":22,"offset":17103}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":321,"column":22,"offset":17103},"end":{"line":321,"column":29,"offset":17110}}},{"type":"text","value":" definition, before the return statement:","position":{"start":{"line":321,"column":29,"offset":17110},"end":{"line":321,"column":70,"offset":17151}}}],"position":{"start":{"line":321,"column":1,"offset":17082},"end":{"line":321,"column":70,"offset":17151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const headingText = `${taskList.length} tasks remaining`;\n"}],"position":{"start":{"line":323,"column":1,"offset":17153},"end":{"line":325,"column":4,"offset":17218}}}],"position":{"start":{"line":323,"column":1,"offset":17153},"end":{"line":325,"column":4,"offset":17218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hrm. This is almost right, except that if our list ever contains a single task, the heading will still use the word \"tasks\". We can make this a variable, too. Update the code you just added as follows:","position":{"start":{"line":327,"column":1,"offset":17220},"end":{"line":327,"column":202,"offset":17421}}}],"position":{"start":{"line":327,"column":1,"offset":17220},"end":{"line":327,"column":202,"offset":17421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\n"}],"position":{"start":{"line":329,"column":1,"offset":17423},"end":{"line":332,"column":4,"offset":17555}}}],"position":{"start":{"line":329,"column":1,"offset":17423},"end":{"line":332,"column":4,"offset":17555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can replace the list heading's text content with the ","position":{"start":{"line":334,"column":1,"offset":17557},"end":{"line":334,"column":62,"offset":17618}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"headingText"}],"position":{"start":{"line":334,"column":62,"offset":17618},"end":{"line":334,"column":75,"offset":17631}}},{"type":"text","value":" variable. Update your ","position":{"start":{"line":334,"column":75,"offset":17631},"end":{"line":334,"column":98,"offset":17654}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<h2>"}],"position":{"start":{"line":334,"column":98,"offset":17654},"end":{"line":334,"column":104,"offset":17660}}},{"type":"text","value":" like so:","position":{"start":{"line":334,"column":104,"offset":17660},"end":{"line":334,"column":113,"offset":17669}}}],"position":{"start":{"line":334,"column":1,"offset":17557},"end":{"line":334,"column":113,"offset":17669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<h2 id=\"list-heading\">{headingText}</h2>\n"}],"position":{"start":{"line":336,"column":1,"offset":17671},"end":{"line":338,"column":4,"offset":17719}}}],"position":{"start":{"line":336,"column":1,"offset":17671},"end":{"line":338,"column":4,"offset":17719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#completing_a_task","title":"Permalink to Completing a task"},"children":[{"type":"text","value":"Completing a task","position":{"start":{"line":340,"column":5,"offset":17725},"end":{"line":340,"column":22,"offset":17742}}}],"position":{"start":{"line":340,"column":4,"offset":17724},"end":{"line":340,"column":207,"offset":17927}}}],"position":{"start":{"line":340,"column":1,"offset":17721},"end":{"line":340,"column":207,"offset":17927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You might notice that, when you click on a checkbox, it checks and unchecks appropriately. As a feature of HTML, the browser knows how to remember which checkbox inputs are checked or unchecked without our help. This feature hides a problem, however: toggling a checkbox doesn't change the state in our React application. This means that the browser and our app are now out-of-sync. We have to write our own code to put the browser back in sync with our app.","position":{"start":{"line":342,"column":1,"offset":17929},"end":{"line":342,"column":459,"offset":18387}}}],"position":{"start":{"line":342,"column":1,"offset":17929},"end":{"line":342,"column":459,"offset":18387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#proving_the_bug","title":"Permalink to Proving the bug"},"children":[{"type":"text","value":"Proving the bug","position":{"start":{"line":344,"column":6,"offset":18394},"end":{"line":344,"column":21,"offset":18409}}}],"position":{"start":{"line":344,"column":5,"offset":18393},"end":{"line":344,"column":202,"offset":18590}}}],"position":{"start":{"line":344,"column":1,"offset":18389},"end":{"line":344,"column":202,"offset":18590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before we fix the problem, let's observe it happening.","position":{"start":{"line":346,"column":1,"offset":18592},"end":{"line":346,"column":55,"offset":18646}}}],"position":{"start":{"line":346,"column":1,"offset":18592},"end":{"line":346,"column":55,"offset":18646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We'll start by writing a ","position":{"start":{"line":348,"column":1,"offset":18648},"end":{"line":348,"column":26,"offset":18673}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":348,"column":26,"offset":18673},"end":{"line":348,"column":49,"offset":18696}}},{"type":"text","value":" function in our ","position":{"start":{"line":348,"column":49,"offset":18696},"end":{"line":348,"column":66,"offset":18713}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App()"}],"position":{"start":{"line":348,"column":66,"offset":18713},"end":{"line":348,"column":73,"offset":18720}}},{"type":"text","value":" component. This function will have an ","position":{"start":{"line":348,"column":73,"offset":18720},"end":{"line":348,"column":112,"offset":18759}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":348,"column":112,"offset":18759},"end":{"line":348,"column":116,"offset":18763}}},{"type":"text","value":" parameter, but we're not going to use it yet. For now, we'll log the first task in the array to the console – we're going to inspect what happens when we check or uncheck it in our browser:","position":{"start":{"line":348,"column":116,"offset":18763},"end":{"line":348,"column":306,"offset":18953}}}],"position":{"start":{"line":348,"column":1,"offset":18648},"end":{"line":348,"column":306,"offset":18953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add this just above your ","position":{"start":{"line":350,"column":1,"offset":18955},"end":{"line":350,"column":26,"offset":18980}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":350,"column":26,"offset":18980},"end":{"line":350,"column":36,"offset":18990}}},{"type":"text","value":" constant declaration:","position":{"start":{"line":350,"column":36,"offset":18990},"end":{"line":350,"column":58,"offset":19012}}}],"position":{"start":{"line":350,"column":1,"offset":18955},"end":{"line":350,"column":58,"offset":19012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function toggleTaskCompleted(id) {\n  console.log(tasks[0])\n}\n"}],"position":{"start":{"line":352,"column":1,"offset":19014},"end":{"line":356,"column":4,"offset":19082}}}],"position":{"start":{"line":352,"column":1,"offset":19014},"end":{"line":356,"column":4,"offset":19082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we'll add ","position":{"start":{"line":358,"column":1,"offset":19084},"end":{"line":358,"column":17,"offset":19100}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted"}],"position":{"start":{"line":358,"column":17,"offset":19100},"end":{"line":358,"column":38,"offset":19121}}},{"type":"text","value":" to the props of each ","position":{"start":{"line":358,"column":38,"offset":19121},"end":{"line":358,"column":60,"offset":19143}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":358,"column":60,"offset":19143},"end":{"line":358,"column":70,"offset":19153}}},{"type":"text","value":" component rendered inside our ","position":{"start":{"line":358,"column":70,"offset":19153},"end":{"line":358,"column":101,"offset":19184}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"taskList"}],"position":{"start":{"line":358,"column":101,"offset":19184},"end":{"line":358,"column":111,"offset":19194}}},{"type":"text","value":"; update it like so:","position":{"start":{"line":358,"column":111,"offset":19194},"end":{"line":358,"column":131,"offset":19214}}}],"position":{"start":{"line":358,"column":1,"offset":19084},"end":{"line":358,"column":131,"offset":19214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n  <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n  />\n));\n"}],"position":{"start":{"line":360,"column":1,"offset":19216},"end":{"line":370,"column":4,"offset":19420}}}],"position":{"start":{"line":360,"column":1,"offset":19216},"end":{"line":370,"column":4,"offset":19420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, go over to your ","position":{"start":{"line":372,"column":1,"offset":19422},"end":{"line":372,"column":23,"offset":19444}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Todo.js"}],"position":{"start":{"line":372,"column":23,"offset":19444},"end":{"line":372,"column":32,"offset":19453}}},{"type":"text","value":" component and add an ","position":{"start":{"line":372,"column":32,"offset":19453},"end":{"line":372,"column":54,"offset":19475}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onChange"}],"position":{"start":{"line":372,"column":54,"offset":19475},"end":{"line":372,"column":64,"offset":19485}}},{"type":"text","value":" handler to your ","position":{"start":{"line":372,"column":64,"offset":19485},"end":{"line":372,"column":81,"offset":19502}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":372,"column":81,"offset":19502},"end":{"line":372,"column":92,"offset":19513}}},{"type":"text","value":" element, which should use an anonymous function to call ","position":{"start":{"line":372,"column":92,"offset":19513},"end":{"line":372,"column":149,"offset":19570}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.toggleTaskCompleted()"}],"position":{"start":{"line":372,"column":149,"offset":19570},"end":{"line":372,"column":178,"offset":19599}}},{"type":"text","value":" with a parameter of ","position":{"start":{"line":372,"column":178,"offset":19599},"end":{"line":372,"column":199,"offset":19620}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.id"}],"position":{"start":{"line":372,"column":199,"offset":19620},"end":{"line":372,"column":209,"offset":19630}}},{"type":"text","value":". The ","position":{"start":{"line":372,"column":209,"offset":19630},"end":{"line":372,"column":215,"offset":19636}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input />"}],"position":{"start":{"line":372,"column":215,"offset":19636},"end":{"line":372,"column":226,"offset":19647}}},{"type":"text","value":" should now look like this:","position":{"start":{"line":372,"column":226,"offset":19647},"end":{"line":372,"column":253,"offset":19674}}}],"position":{"start":{"line":372,"column":1,"offset":19422},"end":{"line":372,"column":253,"offset":19674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input\n  id={props.id}\n  type=\"checkbox\"\n  defaultChecked={props.completed}\n  onChange={() => props.toggleTaskCompleted(props.id)}\n/>\n"}],"position":{"start":{"line":374,"column":1,"offset":19676},"end":{"line":381,"column":4,"offset":19817}}}],"position":{"start":{"line":374,"column":1,"offset":19676},"end":{"line":381,"column":4,"offset":19817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Save everything and return to your browser and notice that our first task, Eat, is checked. Open your JavaScript console, then click on the checkbox next to Eat. It unchecks, as we expect. Your JavaScript console, however, will log something like this:","position":{"start":{"line":383,"column":1,"offset":19819},"end":{"line":383,"column":253,"offset":20071}}}],"position":{"start":{"line":383,"column":1,"offset":19819},"end":{"line":383,"column":253,"offset":20071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object { id: \"task-0\", name: \"Eat\", completed: true }\n"}],"position":{"start":{"line":385,"column":1,"offset":20073},"end":{"line":387,"column":4,"offset":20134}}}],"position":{"start":{"line":385,"column":1,"offset":20073},"end":{"line":387,"column":4,"offset":20134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The checkbox unchecks in the browser, but our console tells us that Eat is still completed. We will fix that next!","position":{"start":{"line":389,"column":1,"offset":20136},"end":{"line":389,"column":115,"offset":20250}}}],"position":{"start":{"line":389,"column":1,"offset":20136},"end":{"line":389,"column":115,"offset":20250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#synchronizing_the_browser_with_our_data","title":"Permalink to Synchronizing the browser with our data"},"children":[{"type":"text","value":"Synchronizing the browser with our data","position":{"start":{"line":391,"column":6,"offset":20257},"end":{"line":391,"column":45,"offset":20296}}}],"position":{"start":{"line":391,"column":5,"offset":20256},"end":{"line":391,"column":274,"offset":20525}}}],"position":{"start":{"line":391,"column":1,"offset":20252},"end":{"line":391,"column":274,"offset":20525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's revisit our ","position":{"start":{"line":393,"column":1,"offset":20527},"end":{"line":393,"column":19,"offset":20545}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":393,"column":19,"offset":20545},"end":{"line":393,"column":42,"offset":20568}}},{"type":"text","value":" function in ","position":{"start":{"line":393,"column":42,"offset":20568},"end":{"line":393,"column":55,"offset":20581}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":393,"column":55,"offset":20581},"end":{"line":393,"column":63,"offset":20589}}},{"type":"text","value":". We want it to change the ","position":{"start":{"line":393,"column":63,"offset":20589},"end":{"line":393,"column":90,"offset":20616}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"completed"}],"position":{"start":{"line":393,"column":90,"offset":20616},"end":{"line":393,"column":101,"offset":20627}}},{"type":"text","value":" property of only the task that was toggled, and leave all the others alone. To do this, we'll ","position":{"start":{"line":393,"column":101,"offset":20627},"end":{"line":393,"column":196,"offset":20722}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"map()"}],"position":{"start":{"line":393,"column":196,"offset":20722},"end":{"line":393,"column":203,"offset":20729}}},{"type":"text","value":" over the task list and just change the one we completed.","position":{"start":{"line":393,"column":203,"offset":20729},"end":{"line":393,"column":260,"offset":20786}}}],"position":{"start":{"line":393,"column":1,"offset":20527},"end":{"line":393,"column":260,"offset":20786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update your ","position":{"start":{"line":395,"column":1,"offset":20788},"end":{"line":395,"column":13,"offset":20800}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":395,"column":13,"offset":20800},"end":{"line":395,"column":36,"offset":20823}}},{"type":"text","value":" function to the following:","position":{"start":{"line":395,"column":36,"offset":20823},"end":{"line":395,"column":63,"offset":20850}}}],"position":{"start":{"line":395,"column":1,"offset":20788},"end":{"line":395,"column":63,"offset":20850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map(task => {\n    // if this task has the same ID as the edited task\n    if (id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted\n      return {...task, completed: !task.completed}\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n"}],"position":{"start":{"line":397,"column":1,"offset":20852},"end":{"line":410,"column":4,"offset":21224}}}],"position":{"start":{"line":397,"column":1,"offset":20852},"end":{"line":410,"column":4,"offset":21224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, we define an ","position":{"start":{"line":412,"column":1,"offset":21226},"end":{"line":412,"column":20,"offset":21245}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"updatedTasks"}],"position":{"start":{"line":412,"column":20,"offset":21245},"end":{"line":412,"column":34,"offset":21259}}},{"type":"text","value":" constant that maps over the original ","position":{"start":{"line":412,"column":34,"offset":21259},"end":{"line":412,"column":72,"offset":21297}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tasks"}],"position":{"start":{"line":412,"column":72,"offset":21297},"end":{"line":412,"column":79,"offset":21304}}},{"type":"text","value":" array. If the task's ","position":{"start":{"line":412,"column":79,"offset":21304},"end":{"line":412,"column":101,"offset":21326}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":412,"column":101,"offset":21326},"end":{"line":412,"column":105,"offset":21330}}},{"type":"text","value":" property matches the ","position":{"start":{"line":412,"column":105,"offset":21330},"end":{"line":412,"column":127,"offset":21352}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":412,"column":127,"offset":21352},"end":{"line":412,"column":131,"offset":21356}}},{"type":"text","value":" provided to the function, we use ","position":{"start":{"line":412,"column":131,"offset":21356},"end":{"line":412,"column":165,"offset":21390}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"},"children":[{"type":"text","value":"object spread syntax","position":{"start":{"line":412,"column":166,"offset":21391},"end":{"line":412,"column":186,"offset":21411}}}],"position":{"start":{"line":412,"column":165,"offset":21390},"end":{"line":412,"column":278,"offset":21503}}},{"type":"text","value":" to create a new object, and toggle the ","position":{"start":{"line":412,"column":278,"offset":21503},"end":{"line":412,"column":318,"offset":21543}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"checked"}],"position":{"start":{"line":412,"column":318,"offset":21543},"end":{"line":412,"column":327,"offset":21552}}},{"type":"text","value":" property of that object before returning it. If it doesn't match, we return the original object.","position":{"start":{"line":412,"column":327,"offset":21552},"end":{"line":412,"column":424,"offset":21649}}}],"position":{"start":{"line":412,"column":1,"offset":21226},"end":{"line":412,"column":424,"offset":21649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then we call ","position":{"start":{"line":414,"column":1,"offset":21651},"end":{"line":414,"column":14,"offset":21664}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":414,"column":14,"offset":21664},"end":{"line":414,"column":26,"offset":21676}}},{"type":"text","value":" with this new array in order to update our state.","position":{"start":{"line":414,"column":26,"offset":21676},"end":{"line":414,"column":76,"offset":21726}}}],"position":{"start":{"line":414,"column":1,"offset":21651},"end":{"line":414,"column":76,"offset":21726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_a_task","title":"Permalink to Deleting a task"},"children":[{"type":"text","value":"Deleting a task","position":{"start":{"line":416,"column":5,"offset":21732},"end":{"line":416,"column":20,"offset":21747}}}],"position":{"start":{"line":416,"column":4,"offset":21731},"end":{"line":416,"column":201,"offset":21928}}}],"position":{"start":{"line":416,"column":1,"offset":21728},"end":{"line":416,"column":201,"offset":21928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Deleting a task will follow a similar pattern to toggling its completed state: We need to define a function for updating our state, then pass that function into ","position":{"start":{"line":418,"column":1,"offset":21930},"end":{"line":418,"column":162,"offset":22091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":418,"column":162,"offset":22091},"end":{"line":418,"column":172,"offset":22101}}},{"type":"text","value":" as a prop and call it when the right event happens.","position":{"start":{"line":418,"column":172,"offset":22101},"end":{"line":418,"column":224,"offset":22153}}}],"position":{"start":{"line":418,"column":1,"offset":21930},"end":{"line":418,"column":224,"offset":22153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#the_deletetask_callback_prop","title":"Permalink to The deleteTask callback prop"},"children":[{"type":"text","value":"The ","position":{"start":{"line":420,"column":6,"offset":22160},"end":{"line":420,"column":10,"offset":22164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask"}],"position":{"start":{"line":420,"column":10,"offset":22164},"end":{"line":420,"column":22,"offset":22176}}},{"type":"text","value":" callback prop","position":{"start":{"line":420,"column":22,"offset":22176},"end":{"line":420,"column":36,"offset":22190}}}],"position":{"start":{"line":420,"column":5,"offset":22159},"end":{"line":420,"column":243,"offset":22397}}}],"position":{"start":{"line":420,"column":1,"offset":22155},"end":{"line":420,"column":243,"offset":22397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we'll start by writing a ","position":{"start":{"line":422,"column":1,"offset":22399},"end":{"line":422,"column":31,"offset":22429}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":422,"column":31,"offset":22429},"end":{"line":422,"column":45,"offset":22443}}},{"type":"text","value":" function in your ","position":{"start":{"line":422,"column":45,"offset":22443},"end":{"line":422,"column":63,"offset":22461}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App"}],"position":{"start":{"line":422,"column":63,"offset":22461},"end":{"line":422,"column":68,"offset":22466}}},{"type":"text","value":" component. Like ","position":{"start":{"line":422,"column":68,"offset":22466},"end":{"line":422,"column":85,"offset":22483}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":422,"column":85,"offset":22483},"end":{"line":422,"column":108,"offset":22506}}},{"type":"text","value":", this function will take an ","position":{"start":{"line":422,"column":108,"offset":22506},"end":{"line":422,"column":137,"offset":22535}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":422,"column":137,"offset":22535},"end":{"line":422,"column":141,"offset":22539}}},{"type":"text","value":" parameter, and we will log that ","position":{"start":{"line":422,"column":141,"offset":22539},"end":{"line":422,"column":174,"offset":22572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":422,"column":174,"offset":22572},"end":{"line":422,"column":178,"offset":22576}}},{"type":"text","value":" to the console to start with. Add the following below ","position":{"start":{"line":422,"column":178,"offset":22576},"end":{"line":422,"column":233,"offset":22631}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toggleTaskCompleted()"}],"position":{"start":{"line":422,"column":233,"offset":22631},"end":{"line":422,"column":256,"offset":22654}}},{"type":"text","value":":","position":{"start":{"line":422,"column":256,"offset":22654},"end":{"line":422,"column":257,"offset":22655}}}],"position":{"start":{"line":422,"column":1,"offset":22399},"end":{"line":422,"column":257,"offset":22655}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function deleteTask(id) {\n  console.log(id)\n}\n"}],"position":{"start":{"line":424,"column":1,"offset":22657},"end":{"line":428,"column":4,"offset":22710}}}],"position":{"start":{"line":424,"column":1,"offset":22657},"end":{"line":428,"column":4,"offset":22710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, add another callback prop to our array of ","position":{"start":{"line":430,"column":1,"offset":22712},"end":{"line":430,"column":49,"offset":22760}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<Todo />"}],"position":{"start":{"line":430,"column":49,"offset":22760},"end":{"line":430,"column":59,"offset":22770}}},{"type":"text","value":" components:","position":{"start":{"line":430,"column":59,"offset":22770},"end":{"line":430,"column":71,"offset":22782}}}],"position":{"start":{"line":430,"column":1,"offset":22712},"end":{"line":430,"column":71,"offset":22782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const taskList = tasks.map(task => (\n  <Todo\n    id={task.id}\n    name={task.name}\n    completed={task.completed}\n    key={task.id}\n    toggleTaskCompleted={toggleTaskCompleted}\n    deleteTask={deleteTask}\n  />\n));\n"}],"position":{"start":{"line":432,"column":1,"offset":22784},"end":{"line":443,"column":4,"offset":23006}}}],"position":{"start":{"line":432,"column":1,"offset":22784},"end":{"line":443,"column":4,"offset":23006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ","position":{"start":{"line":445,"column":1,"offset":23008},"end":{"line":445,"column":4,"offset":23011}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Todo.js"}],"position":{"start":{"line":445,"column":4,"offset":23011},"end":{"line":445,"column":13,"offset":23020}}},{"type":"text","value":", we want to call ","position":{"start":{"line":445,"column":13,"offset":23020},"end":{"line":445,"column":31,"offset":23038}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"props.deleteTask()"}],"position":{"start":{"line":445,"column":31,"offset":23038},"end":{"line":445,"column":51,"offset":23058}}},{"type":"text","value":" when the \"Delete\" button is pressed. ","position":{"start":{"line":445,"column":51,"offset":23058},"end":{"line":445,"column":89,"offset":23096}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":445,"column":89,"offset":23096},"end":{"line":445,"column":103,"offset":23110}}},{"type":"text","value":" needs to know the ID of the task that called it, so it can delete the correct task from the state.","position":{"start":{"line":445,"column":103,"offset":23110},"end":{"line":445,"column":202,"offset":23209}}}],"position":{"start":{"line":445,"column":1,"offset":23008},"end":{"line":445,"column":202,"offset":23209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update the \"Delete\" button inside Todo.js, like so:","position":{"start":{"line":447,"column":1,"offset":23211},"end":{"line":447,"column":52,"offset":23262}}}],"position":{"start":{"line":447,"column":1,"offset":23211},"end":{"line":447,"column":52,"offset":23262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<button\n  type=\"button\"\n  className=\"btn btn__danger\"\n  onClick={() => props.deleteTask(props.id)}\n>\n  Delete <span className=\"visually-hidden\">{props.name}</span>\n</button>\n"}],"position":{"start":{"line":449,"column":1,"offset":23264},"end":{"line":457,"column":4,"offset":23445}}}],"position":{"start":{"line":449,"column":1,"offset":23264},"end":{"line":457,"column":4,"offset":23445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now when you click on any of the \"Delete\" buttons in the app, your browser console should log the ID of the related task.","position":{"start":{"line":459,"column":1,"offset":23447},"end":{"line":459,"column":122,"offset":23568}}}],"position":{"start":{"line":459,"column":1,"offset":23447},"end":{"line":459,"column":122,"offset":23568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state#deleting_tasks_from_state_and_ui","title":"Permalink to Deleting tasks from state and UI"},"children":[{"type":"text","value":"Deleting tasks from state and UI","position":{"start":{"line":461,"column":5,"offset":23574},"end":{"line":461,"column":37,"offset":23606}}}],"position":{"start":{"line":461,"column":4,"offset":23573},"end":{"line":461,"column":252,"offset":23821}}}],"position":{"start":{"line":461,"column":1,"offset":23570},"end":{"line":461,"column":252,"offset":23821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we know ","position":{"start":{"line":463,"column":1,"offset":23823},"end":{"line":463,"column":18,"offset":23840}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":463,"column":18,"offset":23840},"end":{"line":463,"column":32,"offset":23854}}},{"type":"text","value":" is invoked correctly, we can call our ","position":{"start":{"line":463,"column":32,"offset":23854},"end":{"line":463,"column":71,"offset":23893}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":463,"column":71,"offset":23893},"end":{"line":463,"column":83,"offset":23905}}},{"type":"text","value":" hook in ","position":{"start":{"line":463,"column":83,"offset":23905},"end":{"line":463,"column":92,"offset":23914}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":463,"column":92,"offset":23914},"end":{"line":463,"column":106,"offset":23928}}},{"type":"text","value":" to actually delete that task from the app's state as well as visually in the app UI. Since ","position":{"start":{"line":463,"column":106,"offset":23928},"end":{"line":463,"column":198,"offset":24020}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"setTasks()"}],"position":{"start":{"line":463,"column":198,"offset":24020},"end":{"line":463,"column":210,"offset":24032}}},{"type":"text","value":" expects an array as an argument, we should provide it with a new array that copies the existing tasks, ","position":{"start":{"line":463,"column":210,"offset":24032},"end":{"line":463,"column":314,"offset":24136}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"excluding","position":{"start":{"line":463,"column":315,"offset":24137},"end":{"line":463,"column":324,"offset":24146}}}],"position":{"start":{"line":463,"column":314,"offset":24136},"end":{"line":463,"column":325,"offset":24147}}},{"type":"text","value":" the task whose ID matches the one passed into ","position":{"start":{"line":463,"column":325,"offset":24147},"end":{"line":463,"column":372,"offset":24194}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":463,"column":372,"offset":24194},"end":{"line":463,"column":386,"offset":24208}}},{"type":"text","value":".","position":{"start":{"line":463,"column":386,"offset":24208},"end":{"line":463,"column":387,"offset":24209}}}],"position":{"start":{"line":463,"column":1,"offset":23823},"end":{"line":463,"column":387,"offset":24209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a perfect opportunity to use ","position":{"start":{"line":465,"column":1,"offset":24211},"end":{"line":465,"column":38,"offset":24248}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array.prototype.filter()"}],"position":{"start":{"line":465,"column":39,"offset":24249},"end":{"line":465,"column":65,"offset":24275}}}],"position":{"start":{"line":465,"column":38,"offset":24248},"end":{"line":465,"column":161,"offset":24371}}},{"type":"text","value":". We can test each task, and exclude a task from the new array if its ","position":{"start":{"line":465,"column":161,"offset":24371},"end":{"line":465,"column":231,"offset":24441}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":465,"column":231,"offset":24441},"end":{"line":465,"column":235,"offset":24445}}},{"type":"text","value":" prop matches the ","position":{"start":{"line":465,"column":235,"offset":24445},"end":{"line":465,"column":253,"offset":24463}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"id"}],"position":{"start":{"line":465,"column":253,"offset":24463},"end":{"line":465,"column":257,"offset":24467}}},{"type":"text","value":" parameter passed into ","position":{"start":{"line":465,"column":257,"offset":24467},"end":{"line":465,"column":280,"offset":24490}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":465,"column":280,"offset":24490},"end":{"line":465,"column":294,"offset":24504}}},{"type":"text","value":".","position":{"start":{"line":465,"column":294,"offset":24504},"end":{"line":465,"column":295,"offset":24505}}}],"position":{"start":{"line":465,"column":1,"offset":24211},"end":{"line":465,"column":295,"offset":24505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Update the ","position":{"start":{"line":467,"column":1,"offset":24507},"end":{"line":467,"column":12,"offset":24518}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"deleteTask()"}],"position":{"start":{"line":467,"column":12,"offset":24518},"end":{"line":467,"column":26,"offset":24532}}},{"type":"text","value":" function inside your ","position":{"start":{"line":467,"column":26,"offset":24532},"end":{"line":467,"column":48,"offset":24554}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"App.js"}],"position":{"start":{"line":467,"column":48,"offset":24554},"end":{"line":467,"column":56,"offset":24562}}},{"type":"text","value":" file as follows:","position":{"start":{"line":467,"column":56,"offset":24562},"end":{"line":467,"column":73,"offset":24579}}}],"position":{"start":{"line":467,"column":1,"offset":24507},"end":{"line":467,"column":73,"offset":24579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function deleteTask(id) {\n  const remainingTasks = tasks.filter(task => id !== task.id);\n  setTasks(remainingTasks);\n}\n"}],"position":{"start":{"line":469,"column":1,"offset":24581},"end":{"line":474,"column":4,"offset":24707}}}],"position":{"start":{"line":469,"column":1,"offset":24581},"end":{"line":474,"column":4,"offset":24707}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":475,"column":1,"offset":24708}}}}