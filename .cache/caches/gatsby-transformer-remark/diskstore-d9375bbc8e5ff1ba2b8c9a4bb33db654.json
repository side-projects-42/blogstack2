{"expireTime":9007200914465210000,"key":"transformer-remark-markdown-html-ast-d71c2f1fd978fb9a8249eed110c3e7e6--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Python Notes","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":16,"offset":17}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":16,"offset":17}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[{"type":"element","tagName":"a","properties":{"href":"https://lambda-6.gitbook.io/python/"},"children":[{"type":"text","value":"https://lambda-6.gitbook.io/python/","position":{"start":{"line":5,"column":4,"offset":22},"end":{"line":5,"column":39,"offset":57}}}],"position":{"start":{"line":5,"column":3,"offset":21},"end":{"line":5,"column":40,"offset":58}}}],"position":{"start":{"line":5,"column":3,"offset":21},"end":{"line":5,"column":40,"offset":58}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[{"type":"text","value":"This Gitbook As A Website","position":{"start":{"line":5,"column":43,"offset":61},"end":{"line":5,"column":68,"offset":86}}}],"position":{"start":{"line":5,"column":43,"offset":61},"end":{"line":5,"column":68,"offset":86}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":5,"column":70,"offset":88}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":5,"column":70,"offset":88}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}],"position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":6,"column":70,"offset":158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":8,"column":3,"offset":162},"end":{"line":8,"column":6,"offset":165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://ds-unit-5-lambda.netlify.app/"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"https://ds-unit-5-lambda.netlify.app","position":{"start":{"line":10,"column":7,"offset":174},"end":{"line":10,"column":43,"offset":210}}}],"position":{"start":{"line":10,"column":6,"offset":173},"end":{"line":10,"column":44,"offset":211}}}],"position":{"start":{"line":10,"column":4,"offset":171},"end":{"line":10,"column":46,"offset":213}}}],"position":{"start":{"line":10,"column":3,"offset":170},"end":{"line":10,"column":86,"offset":253}}}],"position":{"start":{"line":10,"column":3,"offset":170},"end":{"line":10,"column":86,"offset":253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"/","position":{"start":{"line":12,"column":6,"offset":261},"end":{"line":12,"column":7,"offset":262}}}],"position":{"start":{"line":12,"column":5,"offset":260},"end":{"line":12,"column":8,"offset":263}}}],"position":{"start":{"line":12,"column":3,"offset":258},"end":{"line":12,"column":10,"offset":265}}}],"position":{"start":{"line":12,"column":3,"offset":258},"end":{"line":12,"column":10,"offset":265}}},{"type":"text","value":"\n"}],"position":{"start":{"line":8,"column":1,"offset":160},"end":{"line":12,"column":10,"offset":265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":14,"column":3,"offset":269},"end":{"line":14,"column":6,"offset":272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://bryan-guner.gitbook.io/datastructures-in-pytho/"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"https://bryan-guner.gitbook.io/datastructures-in-pytho/","position":{"start":{"line":16,"column":7,"offset":281},"end":{"line":16,"column":62,"offset":336}}}],"position":{"start":{"line":16,"column":6,"offset":280},"end":{"line":16,"column":63,"offset":337}}}],"position":{"start":{"line":16,"column":4,"offset":278},"end":{"line":16,"column":65,"offset":339}}}],"position":{"start":{"line":16,"column":3,"offset":277},"end":{"line":16,"column":123,"offset":397}}}],"position":{"start":{"line":16,"column":3,"offset":277},"end":{"line":16,"column":123,"offset":397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":18,"column":3,"offset":402},"end":{"line":18,"column":6,"offset":405}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":267},"end":{"line":18,"column":6,"offset":405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":20,"column":3,"offset":409},"end":{"line":20,"column":6,"offset":412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":22,"column":3,"offset":417},"end":{"line":22,"column":6,"offset":420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://replit.com/@bgoonz/DATASTRUCPYTHONNOTES-2"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"https://replit.com/@bgoonz/DATASTRUCPYTHONNOTES-2","position":{"start":{"line":24,"column":7,"offset":429},"end":{"line":24,"column":56,"offset":478}}}],"position":{"start":{"line":24,"column":6,"offset":428},"end":{"line":24,"column":57,"offset":479}}}],"position":{"start":{"line":24,"column":4,"offset":426},"end":{"line":24,"column":59,"offset":481}}}],"position":{"start":{"line":24,"column":3,"offset":425},"end":{"line":24,"column":111,"offset":533}}}],"position":{"start":{"line":24,"column":3,"offset":425},"end":{"line":24,"column":111,"offset":533}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":407},"end":{"line":24,"column":111,"offset":533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Keywords","position":{"start":{"line":26,"column":3,"offset":537},"end":{"line":26,"column":11,"offset":545}}}],"position":{"start":{"line":26,"column":1,"offset":535},"end":{"line":26,"column":13,"offset":547}}},{"type":"text","value":":","position":{"start":{"line":26,"column":13,"offset":547},"end":{"line":26,"column":14,"offset":548}}}],"position":{"start":{"line":26,"column":1,"offset":535},"end":{"line":26,"column":14,"offset":548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"***and       del       for       is        raise\nassert    elif      from      lambda    return\nbreak     else      global    not       try\nclass     except    if        or        while\ncontinue  exec      import    pass\ndef       finally   in        print***\n"}],"position":{"start":{"line":28,"column":1,"offset":550},"end":{"line":36,"column":4,"offset":824}}}],"position":{"start":{"line":28,"column":1,"offset":550},"end":{"line":36,"column":4,"offset":824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1c25bca5-0198-42ad-aa8b-7668cb904571/py-notes.pdf"},"children":[{"type":"text","value":"py-notes.pdf","position":{"start":{"line":38,"column":2,"offset":827},"end":{"line":38,"column":14,"offset":839}}}],"position":{"start":{"line":38,"column":1,"offset":826},"end":{"line":38,"column":126,"offset":951}}}],"position":{"start":{"line":38,"column":1,"offset":826},"end":{"line":38,"column":126,"offset":951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://bryan-guner.gitbook.io/notesarchive/"},"children":[{"type":"text","value":"https://bryan-guner.gitbook.io/notesarchive/","position":{"start":{"line":40,"column":2,"offset":954},"end":{"line":40,"column":46,"offset":998}}}],"position":{"start":{"line":40,"column":1,"offset":953},"end":{"line":40,"column":47,"offset":999}}}],"position":{"start":{"line":40,"column":1,"offset":953},"end":{"line":40,"column":47,"offset":999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"DOCS:","position":{"start":{"line":42,"column":4,"offset":1004},"end":{"line":42,"column":9,"offset":1009}}}],"position":{"start":{"line":42,"column":1,"offset":1001},"end":{"line":42,"column":9,"offset":1009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://docs.python.org/3/"},"children":[{"type":"text","value":"https://docs.python.org/3/","position":{"start":{"line":44,"column":2,"offset":1012},"end":{"line":44,"column":28,"offset":1038}}}],"position":{"start":{"line":44,"column":1,"offset":1011},"end":{"line":44,"column":29,"offset":1039}}}],"position":{"start":{"line":44,"column":1,"offset":1011},"end":{"line":44,"column":29,"offset":1039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"import math\n\ndef say_hi(name):\n    \"\"\"<---- Multi-Line Comments and Docstrings\n    This is where you put your content for help() to inform the user\n    about what your function does and how to use it\n    \"\"\"\n    print(f\"Hello {name}!\")\n\nprint(say_hi(\"Bryan\"))  # Should get the print inside the function, then None\n# Boolean Values\n# Work the same as in JS, except they are title case: True and False\na = True\nb = False\n# Logical Operators\n# ! = not, || = or, && = and\nprint(True and True)\nprint(True and not True)\nprint(True or True)\n# Truthiness - Everything is True except...\n# False - None, False, '', [], (), set(), range(0)\n# Number Values\n# Integers are numbers without a floating decimal point\nprint(type(3))  # type returns the type of whatever argument you pass in\n# Floating Point values are numbers with a floating decimal point\nprint(type(3.5))\n# Type Casting\n# You can convert between ints and floats (along with other types...)\nprint(float(3))  # If you convert a float to an int, it will truncate the decimal\nprint(int(4.5))\nprint(type(str(3)))\n# Python does not automatically convert types like JS\n# print(17.0 + ' heyooo ' + 17)  # TypeError\n# Arithmetic Operators\n# ** - exponent (comparable to Math.pow(num, pow))\n# // - integer division\n# There is no ++ or -- in Python\n# String Values\n# We can use single quotes, double quotes, or f'' for string formats\n# We can use triple single quotes for multiline strings\nprint(\n    \"\"\"This here's a story\nAll about how\nMy life got twist\nTurned upside down\n\"\"\"\n)\n# Three double quotes can also be used, but we typically reserve these for\n# multi-line comments and function docstrings (refer to lines 6-9)(Nice :D)\n# We use len() to get the length of something\nprint(len(\"Bryan G\"))  # 7 characters\nprint(len([\"hey\", \"ho\", \"hey\", \"hey\", \"ho\"]))  # 5 list items\nprint(len({1, 2, 3, 4, 5, 6, 7, 9}))  # 8 set items\n# We can index into strings, list, etc..self.\nname = \"Bryan\"\nfor i in range(len(name)):\n    print(name[i])  # B, r, y, a, n\n# We can index starting from the end as well, with negatives\noccupation = \"Full Stack Software Engineer\"\nprint(occupation[-3])  # e\n# We can also get ranges in the index with the [start:stop:step] syntax\nprint(occupation[0:4:1])  # step and stop are optional, stop is exclusive\nprint(occupation[::4])  # beginning to end, every 4th letter\nprint(occupation[4:14:2])  # Let's get weird with it!\n# NOTE: Indexing out of range will give you an IndexError\n# We can also get the index og things with the .index() method, similar to indexOf()\nprint(occupation.index(\"Stack\"))\nprint([\"Mike\", \"Barry\", \"Cole\", \"James\", \"Mark\"].index(\"Cole\"))\n# We can count how many times a substring/item appears in something as well\nprint(occupation.count(\"S\"))\nprint(\n    \"\"\"Now this here's a story all about how\nMy life got twist turned upside down\nI forget the rest but the the the potato\nsmells like the potato\"\"\".count(\n        \"the\"\n    )\n)\n# We concatenate the same as Javascript, but we can also multiply strings\nprint(\"dog \" + \"show\")\nprint(\"ha\" * 10)\n# We can use format for a multitude of things, from spaces to decimal places\nfirst_name = \"Bryan\"\nlast_name = \"Guner\"\nprint(\"Your name is {0} {1}\".format(first_name, last_name))\n# Useful String Methods\nprint(\"Hello\".upper())  # HELLO\nprint(\"Hello\".lower())  # hello\nprint(\"HELLO\".islower())  # False\nprint(\"HELLO\".isupper())  # True\nprint(\"Hello\".startswith(\"he\"))  # False\nprint(\"Hello\".endswith(\"lo\"))  # True\nprint(\"Hello There\".split())  # [Hello, There]\nprint(\"hello1\".isalpha())  # False,  must consist only of letters\nprint(\"hello1\".isalnum())  # True, must consist of only letters and numbers\nprint(\"3215235123\".isdecimal())  # True, must be all numbers\n# True, must consist of only spaces/tabs/newlines\nprint(\"       \\\\n     \".isspace())\n# False, index 0 must be upper case and the rest lower\nprint(\"Bryan Guner\".istitle())\nprint(\"Michael Lee\".istitle())  # True!\n# Duck Typing - If it walks like a duck, and talks like a duck, it must be a duck\n# Assignment - All like JS, but there are no special keywords like let or const\na = 3\nb = a\nc = \"heyoo\"\nb = [\"reassignment\", \"is\", \"fine\", \"G!\"]\n# Comparison Operators - Python uses the same equality operators as JS, but no ===\n# < - Less than\n# > - Greater than\n# <= - Less than or Equal\n# >= - Greater than or Equal\n# == - Equal to\n# != - Not equal to\n# is - Refers to exact same memory location\n# not - !\n# Precedence - Negative Signs(not) are applied first(part of each number)\n#            - Multiplication and Division(and) happen next\n#            - Addition and Subtraction(or) are the last step\n#  NOTE: Be careful when using not along with ==\nprint(not a == b)  # True\n# print(a == not b) # Syntax Error\nprint(a == (not b))  # This fixes it. Answer: False\n# Python does short-circuit evaluation\n# Assignment Operators - Mostly the same as JS except Python has **= and //= (int division)\n# Flow Control Statements - if, while, for\n# Note: Python smushes 'else if' into 'elif'!\nif 10 < 1:\n    print(\"We don't get here\")\nelif 10 < 5:\n    print(\"Nor here...\")\nelse:\n    print(\"Hey there!\")\n# Looping over a string\nfor c in \"abcdefgh\":\n    print(c)\n# Looping over a range\nfor i in range(5):\n    print(i + 1)\n# Looping over a list\nlst = [1, 2, 3, 4]\nfor i in lst:\n    print(i)\n# Looping over a dictionary\nspam = {\"color\": \"red\", \"age\": 42, \"items\": [(1, \"hey\"), (2, \"hooo!\")]}\nfor v in spam.values():\n    print(v)\n# Loop over a list of tuples and destructuring the values\n# Assuming spam.items returns a list of tuples each containing two items (k, v)\nfor k, v in spam.items():\n    print(f\"{k}: {v}\")\n# While loops as long as the condition is True\n#  - Exit loop early with break\n#  - Exit iteration early with continue\nspam = 0\nwhile True:\n    print(\"Sike That's the wrong Numba\")\n    spam += 1\n    if spam < 5:\n        continue\n    break\n\n# Functions - use def keyword to define a function in Python\n\ndef printCopyright():\n    print(\"Copyright 2021, Bgoonz\")\n\n# Lambdas are one liners! (Should be at least, you can use parenthesis to disobey)\ndef avg(num1, num2):\n    return print(num1 + num2)\n\navg(1, 2)\n# Calling it with keyword arguments, order does not matter\navg(num2=20, num1=1252)\nprintCopyright()\n# We can give parameters default arguments like JS\n\ndef greeting(name, saying=\"Hello\"):\n    print(saying, name)\n\ngreeting(\"Mike\")  # Hello Mike\ngreeting(\"Bryan\", saying=\"Hello there...\")\n# A common gotcha is using a mutable object for a default parameter\n# All invocations of the function reference the same mutable object\n\ndef append_item(item_name, item_list=[]):  # Will it obey and give us a new list?\n    item_list.append(item_name)\n    return item_list\n\n# Uses same item list unless otherwise stated which is counterintuitive\nprint(append_item(\"notebook\"))\nprint(append_item(\"notebook\"))\nprint(append_item(\"notebook\", []))\n# Errors - Unlike JS, if we pass the incorrect amount of arguments to a function,\n#          it will throw an error\n# avg(1)  # TypeError\n# avg(1, 2, 2) # TypeError\n# ----------------------------------- DAY 2 ----------------------------------------\n# Functions - * to get rest of position arguments as tuple\n#           - ** to get rest of keyword arguments as a dictionary\n# Variable Length positional arguments\n\ndef add(a, b, *args):\n    # args is a tuple of the rest of the arguments\n    total = a + b\n    for n in args:\n        total += n\n    return total\n\nprint(add(1, 2))  # args is None, returns 3\nprint(add(1, 2, 3, 4, 5, 6))  # args is (3, 4, 5, 6), returns 21\n# Variable Length Keyword Arguments\n\ndef print_names_and_countries(greeting, **kwargs):\n    # kwargs is a dictionary of the rest of the keyword arguments\n    for k, v in kwargs.items():\n        print(greeting, k, \"from\", v)\n\nprint_names_and_countries(\n    \"Hey there\", Monica=\"Sweden\", Mike=\"The United States\", Mark=\"China\"\n)\n# We can combine all of these together\n\ndef example2(arg1, arg2, *args, kw_1=\"cheese\", kw_2=\"horse\", **kwargs):\n    pass\n\n# Lists are mutable arrays\nempty_list = []\nroomates = [\"Beau\", \"Delynn\"]\n# List built-in function makes a list too\nspecials = list()\n# We can use 'in' to test if something is in the list, like 'includes' in JS\nprint(1 in [1, 2, 4])  # True\nprint(2 in [1, 3, 5])  # False\n# Dictionaries - Similar to JS POJO's or Map, containing key value pairs\na = {\"one\": 1, \"two\": 2, \"three\": 3}\nb = dict(one=1, two=2, three=3)\n# Can use 'in' on dictionaries too (for keys)\nprint(\"one\" in a)  # True\nprint(3 in b)  # False\n# Sets - Just like JS, unordered collection of distinct objects\nbedroom = {\"bed\", \"tv\", \"computer\", \"clothes\", \"playstation 4\"}\n# bedroom = set(\"bed\", \"tv\", \"computer\", \"clothes\", \"playstation 5\")\nschool_bag = set(\n    [\"book\", \"paper\", \"pencil\", \"pencil\", \"book\", \"book\", \"book\", \"eraser\"]\n)\nprint(school_bag)\nprint(bedroom)\n# We can use 'in' on sets as wel\nprint(1 in {1, 2, 3})  # True\nprint(4 in {1, 3, 5})  # False\n# Tuples are immutable lists of items\ntime_blocks = (\"AM\", \"PM\")\ncolors = \"red\", \"green\", \"blue\"  # Parenthesis not needed but encouraged\n# The tuple built-in function can be used to convert things to tuples\nprint(tuple(\"abc\"))\nprint(tuple([1, 2, 3]))\n# 'in' may be used on tuples as well\nprint(1 in (1, 2, 3))  # True\nprint(5 in (1, 4, 3))  # False\n# Ranges are immutable lists of numbers, often used with for loops\n#   - start - default: 0, first number in sequence\n#   - stop - required, next number past last number in sequence\n#   - step - default: 1, difference between each number in sequence\nrange1 = range(5)  # [0,1,2,3,4]\nrange2 = range(1, 5)  # [1,2,3,4]\nrange3 = range(0, 25, 5)  # [0,5,10,15,20]\nrange4 = range(0)  # []\nfor i in range1:\n    print(i)\n# Built-in functions:\n# Filter\n\ndef isOdd(num):\n    return num % 2 == 1\n\nfiltered = filter(isOdd, [1, 2, 3, 4])\nprint(list(filtered))\nfor num in filtered:\n    print(f\"first way: {num}\")\nprint(\"--\" * 20)\n[print(f\"list comprehension: {i}\")\n for i in [1, 2, 3, 4, 5, 6, 7, 8] if i % 2 == 1]\n# Map\n\ndef toUpper(str):\n    return str.upper()\n\nupperCased = map(toUpper, [\"a\", \"b\", \"c\", \"d\"])\nprint(list(upperCased))\n# Sorted\nsorted_items = sorted([\"john\", \"tom\", \"sonny\", \"Mike\"])\nprint(list(sorted_items))  # Notice uppercase comes before lowercase\n# Using a key function to control the sorting and make it case insensitive\nsorted_items = sorted([\"john\", \"tom\", \"sonny\", \"Mike\"], key=str.lower)\nprint(sorted_items)\n# You can also reverse the sort\nsorted_items = sorted([\"john\", \"tom\", \"sonny\", \"Mike\"],\n                      key=str.lower, reverse=True)\nprint(sorted_items)\n# Enumerate creates a tuple with an index for what you're enumerating\nquarters = [\"First\", \"Second\", \"Third\", \"Fourth\"]\nprint(list(enumerate(quarters)))\nprint(list(enumerate(quarters, start=1)))\n# Zip takes list and combines them as key value pairs, or really however you need\nkeys = (\"Name\", \"Email\")\nvalues = (\"Buster\", \"cheetoh@johhnydepp.com\")\nzipped = zip(keys, values)\nprint(list(zipped))\n# You can zip more than 2\nx_coords = [0, 1, 2, 3, 4]\ny_coords = [4, 6, 10, 9, 10]\nz_coords = [20, 10, 5, 9, 1]\ncoords = zip(x_coords, y_coords, z_coords)\nprint(list(coords))\n# Len reports the length of strings along with list and any other object data type\n# doing this to save myself some typing\n\ndef print_len(item):\n    return print(len(item))\n\nprint_len(\"Mike\")\nprint_len([1, 5, 2, 10, 3, 10])\nprint_len({1, 5, 10, 9, 10})  # 4 because there is a duplicate here (10)\nprint_len((1, 4, 10, 9, 20))\n# Max will return the max number in a given scenario\nprint(max(1, 2, 35, 1012, 1))\n# Min\nprint(min(1, 5, 2, 10))\nprint(min([1, 4, 7, 10]))\n# Sum\nprint(sum([1, 2, 4]))\n# Any\nprint(any([True, False, False]))\nprint(any([False, False, False]))\n# All\nprint(all([True, True, False]))\nprint(all([True, True, True]))\n# Dir returns all the attributes of an object including it's methods and dunder methods\nuser = {\"Name\": \"Bob\", \"Email\": \"bob@bob.com\"}\nprint(dir(user))\n# Importing packages and modules\n#  - Module - A Python code in a file or directory\n#  - Package - A module which is a directory containing an __init__.py file\n#  - Submodule - A module which is contained within a package\n#  - Name - An exported function, class, or variable in a module\n# Unlike JS, modules export ALL names contained within them without any special export key\n# Assuming we have the following package with four submodules\n#  math\n#  |  __init__.py\n#  | addition.py\n#  | subtraction.py\n#  | multiplication.py\n#  | division.py\n# If we peek into the addition.py file we see there's an add function\n# addition.py\n# We can import 'add' from other places because it's a 'name' and is automatically exported\n\n# def add(num1, num2):\n#     return num1 + num2\n\n# Notice the . syntax because this package can import it's own submodules.\n# Our __init__.py has the following files\n# This imports the 'add' function\n# And now it's also re-exported in here as well\n# from .addition import add\n# These import and re-export the rest of the functions from the submodule\n# from .subtraction import subtract\n# from .division import divide\n# from .multiplication import multiply\n# So if we have a script.py and want to import add, we could do it many ways\n# This will load and execute the 'math/__init__.py' file and give\n# us an object with the exported names in 'math/__init__.py'\n# print(math.add(1,2))\n# This imports JUST the add from 'math/__init__.py'\n# from math import add\n# print(add(1, 2))\n# This skips importing from 'math/__init__.py' (although it still runs)\n# and imports directly from the addition.py file\n# from math.addition import add\n# This imports all the functions individually from 'math/__init__.py'\n# from math import add, subtract, multiply, divide\n# print(add(1, 2))\n# print(subtract(2, 1))\n# This imports 'add' renames it to 'add_some_numbers'\n# from math import add as add_some_numbers\n# --------------------------------------- DAY 3 ---------------------------------------\n# Classes, Methods, and Properties\n\nclass AngryBird:\n    # Slots optimize property access and memory usage and prevent you\n    # from arbitrarily assigning new properties the instance\n    __slots__ = [\"_x\", \"_y\"]\n    # Constructor\n\n    def __init__(self, x=0, y=0):\n        # Doc String\n        \"\"\"\n        Construct a new AngryBird by setting it's position to (0, 0)\n        \"\"\"\n        # Instance Variables\n        self._x = x\n        self._y = y\n\n    # Instance Method\n\n    def move_up_by(self, delta):\n        self._y += delta\n\n    # Getter\n\n    @property\n    def x(self):\n        return self._x\n\n    # Setter\n\n    @x.setter\n    def x(self, value):\n        if value < 0:\n            value = 0\n        self._x = value\n\n    @property\n    def y(self):\n        return self._y\n\n    @y.setter\n    def y(self, value):\n        self._y = value\n\n    # Dunder Repr... called by 'print'\n\n    def __repr__(self):\n        return f\"<AngryBird ({self._x}, {self._y})>\"\n\n# JS to Python Classes cheat table\n#        JS                    Python\n#   constructor()         def __init__(self):\n#      super()            super().__init__()\n#   this.property           self.property\n#    this.method            self.method()\n# method(arg1, arg2){}    def method(self, arg1, ...)\n# get someProperty(){}    @property\n# set someProperty(){}    @someProperty.setter\n# List Comprehensions are a way to transform a list from one format to another\n#  - Pythonic Alternative to using map or filter\n#  - Syntax of a list comprehension\n#     - new_list = [value loop condition]\n# Using a for loop\nsquares = []\nfor i in range(10):\n    squares.append(i ** 2)\nprint(squares)\n# value = i ** 2\n# loop = for i in range(10)\nsquares = [i ** 2 for i in range(10)]\nprint(list(squares))\nsentence = \"the rocket came back from mars\"\nvowels = [character for character in sentence if character in \"aeiou\"]\nprint(vowels)\n# You can also use them on dictionaries. We can use the items() method\n# for the dictionary to loop through it getting the keys and values out at once\nperson = {\"name\": \"Corina\", \"age\": 32, \"height\": 1.4}\n# This loops through and capitalizes the first letter of all keys\nnewPerson = {key.title(): value for key, value in person.items()}\nprint(list(newPerson.items()))\n"}],"position":{"start":{"line":46,"column":1,"offset":1041},"end":{"line":514,"column":4,"offset":17161}}}],"position":{"start":{"line":46,"column":1,"offset":1041},"end":{"line":514,"column":4,"offset":17161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2.1.7 Indentation","position":{"start":{"line":516,"column":6,"offset":17168},"end":{"line":516,"column":23,"offset":17185}}}],"position":{"start":{"line":516,"column":4,"offset":17166},"end":{"line":516,"column":25,"offset":17187}}}],"position":{"start":{"line":516,"column":1,"offset":17163},"end":{"line":516,"column":25,"offset":17187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Leading whitespace (spaces and tabs) at the beginning of a logical line is used to compute the indentation level of the line, which in turn is used to determine the grouping of statements.","position":{"start":{"line":518,"column":1,"offset":17189},"end":{"line":518,"column":189,"offset":17377}}}],"position":{"start":{"line":518,"column":1,"offset":17189},"end":{"line":518,"column":189,"offset":17377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, tabs are replaced (from left to right) by one to eight spaces such that the total number of characters up to and including the replacement is a multiple of eight (this is intended to be the same rule as used by Unix). The total number of spaces preceding the first non-blank character then determines the line's indentation. Indentation cannot be split over multiple physical lines using backslashes; the whitespace up to the first backslash determines the indentation.","position":{"start":{"line":520,"column":1,"offset":17379},"end":{"line":520,"column":477,"offset":17855}}}],"position":{"start":{"line":520,"column":1,"offset":17379},"end":{"line":520,"column":477,"offset":17855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Cross-platform compatibility note:","position":{"start":{"line":522,"column":3,"offset":17859},"end":{"line":522,"column":37,"offset":17893}}}],"position":{"start":{"line":522,"column":1,"offset":17857},"end":{"line":522,"column":39,"offset":17895}}},{"type":"text","value":" because of the nature of text editors on non-UNIX platforms, it is unwise to use a mixture of spaces and tabs for the indentation in a single source file.","position":{"start":{"line":522,"column":39,"offset":17895},"end":{"line":522,"column":194,"offset":18050}}}],"position":{"start":{"line":522,"column":1,"offset":17857},"end":{"line":522,"column":194,"offset":18050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A formfeed character may be present at the start of the line; it will be ignored for the indentation calculations above. Formfeed characters occurring elsewhere in the leading whitespace have an undefined effect (for instance, they may reset the space count to zero).","position":{"start":{"line":524,"column":1,"offset":18052},"end":{"line":524,"column":268,"offset":18319}}}],"position":{"start":{"line":524,"column":1,"offset":18052},"end":{"line":524,"column":268,"offset":18319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The indentation levels of consecutive lines are used to generate INDENT and DEDENT tokens, using a stack, as follows.","position":{"start":{"line":526,"column":1,"offset":18321},"end":{"line":526,"column":118,"offset":18438}}}],"position":{"start":{"line":526,"column":1,"offset":18321},"end":{"line":526,"column":118,"offset":18438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before the first line of the file is read, a single zero is pushed on the stack; this will never be popped off again. The numbers pushed on the stack will always be strictly increasing from bottom to top. At the beginning of each logical line, the line's indentation level is compared to the top of the stack. If it is equal, nothing happens. If it is larger, it is pushed on the stack, and one INDENT token is generated. If it is smaller, it must be one of the numbers occurring on the stack; all numbers on the stack that are larger are popped off, and for each number popped off a DEDENT token is generated. At the end of the file, a DEDENT token is generated for each number remaining on the stack that is larger than zero.","position":{"start":{"line":528,"column":1,"offset":18440},"end":{"line":528,"column":728,"offset":19167}}}],"position":{"start":{"line":528,"column":1,"offset":18440},"end":{"line":528,"column":728,"offset":19167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is an example of a correctly (though confusingly) indented piece of Python code:","position":{"start":{"line":530,"column":1,"offset":19169},"end":{"line":530,"column":86,"offset":19254}}}],"position":{"start":{"line":530,"column":1,"offset":19169},"end":{"line":530,"column":86,"offset":19254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"def perm(l): # Compute the list of all permutations of l if len(l) <= 1: return [l] r = [] for i in range(len(l)): s = l[:i] + l[i+1:] p = perm(s) for x in p: r.append(l[i:i+1] + x) return r"}],"position":{"start":{"line":532,"column":1,"offset":19256},"end":{"line":532,"column":193,"offset":19448}}}],"position":{"start":{"line":532,"column":1,"offset":19256},"end":{"line":532,"column":193,"offset":19448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following example shows various indentation errors:","position":{"start":{"line":534,"column":1,"offset":19450},"end":{"line":534,"column":56,"offset":19505}}}],"position":{"start":{"line":534,"column":1,"offset":19450},"end":{"line":534,"column":56,"offset":19505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":" `def perm(l):                       # error: first line indented\nfor i in range(len(l)):             # error: not indented\n    s = l[:i] + l[i+1:]\n        p = perm(l[:i] + l[i+1:])   # error: unexpected indent\n        for x in p:\n                r.append(l[i:i+1] + x)\n            return r                # error: inconsistent dedent`\n"}],"position":{"start":{"line":536,"column":1,"offset":19507},"end":{"line":544,"column":4,"offset":19854}}}],"position":{"start":{"line":536,"column":1,"offset":19507},"end":{"line":544,"column":4,"offset":19854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"(Actually, the first three errors are detected by the parser; only the last error is found by the lexical analyzer -- the indentation of ","position":{"start":{"line":546,"column":1,"offset":19856},"end":{"line":546,"column":138,"offset":19993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return r"}],"position":{"start":{"line":546,"column":138,"offset":19993},"end":{"line":546,"column":148,"offset":20003}}},{"type":"text","value":" does not match a level popped off the stack.)","position":{"start":{"line":546,"column":148,"offset":20003},"end":{"line":546,"column":194,"offset":20049}}}],"position":{"start":{"line":546,"column":1,"offset":19856},"end":{"line":546,"column":194,"offset":20049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://ds-unit-5-lambda.netlify.app/"},"children":[{"type":"text","value":"https://ds-unit-5-lambda.netlify.app/","position":{"start":{"line":548,"column":2,"offset":20052},"end":{"line":548,"column":39,"offset":20089}}}],"position":{"start":{"line":548,"column":1,"offset":20051},"end":{"line":548,"column":40,"offset":20090}}}],"position":{"start":{"line":548,"column":1,"offset":20051},"end":{"line":548,"column":40,"offset":20090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Python Study Guide for a JavaScript Programmer","position":{"start":{"line":550,"column":4,"offset":20095},"end":{"line":550,"column":50,"offset":20141}}}],"position":{"start":{"line":550,"column":1,"offset":20092},"end":{"line":550,"column":50,"offset":20141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://bryanguner.medium.com/?source=post_page-----5cfdf3d2bdfb--------------------------------"},"children":[{"type":"text","value":"Bryan Guner","position":{"start":{"line":552,"column":2,"offset":20144},"end":{"line":552,"column":13,"offset":20155}}}],"position":{"start":{"line":552,"column":1,"offset":20143},"end":{"line":552,"column":112,"offset":20254}}}],"position":{"start":{"line":552,"column":1,"offset":20143},"end":{"line":552,"column":112,"offset":20254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb?source=post_page-----5cfdf3d2bdfb--------------------------------"},"children":[{"type":"text","value":"Mar 5","position":{"start":{"line":554,"column":2,"offset":20257},"end":{"line":554,"column":7,"offset":20262}}}],"position":{"start":{"line":554,"column":1,"offset":20256},"end":{"line":554,"column":174,"offset":20429}}},{"type":"text","value":" · 15 min read","position":{"start":{"line":554,"column":174,"offset":20429},"end":{"line":554,"column":188,"offset":20443}}}],"position":{"start":{"line":554,"column":1,"offset":20256},"end":{"line":554,"column":188,"offset":20443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://miro.medium.com/max/1400/1*3V9VOfPk_hrFdbEAd3j-QQ.png","alt":"https://miro.medium.com/max/1400/1*3V9VOfPk_hrFdbEAd3j-QQ.png"},"children":[],"position":{"start":{"line":556,"column":1,"offset":20445},"end":{"line":556,"column":128,"offset":20572}}}],"position":{"start":{"line":556,"column":1,"offset":20445},"end":{"line":556,"column":128,"offset":20572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Applications of Tutorial & Cheat Sheet Respectivley (At Bottom Of Tutorial):","position":{"start":{"line":558,"column":6,"offset":20579},"end":{"line":558,"column":82,"offset":20655}}}],"position":{"start":{"line":558,"column":4,"offset":20577},"end":{"line":558,"column":84,"offset":20657}}}],"position":{"start":{"line":558,"column":1,"offset":20574},"end":{"line":558,"column":84,"offset":20657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Basics","position":{"start":{"line":560,"column":6,"offset":20664},"end":{"line":560,"column":12,"offset":20670}}}],"position":{"start":{"line":560,"column":4,"offset":20662},"end":{"line":560,"column":14,"offset":20672}}}],"position":{"start":{"line":560,"column":1,"offset":20659},"end":{"line":560,"column":14,"offset":20672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"PEP8","position":{"start":{"line":562,"column":7,"offset":20680},"end":{"line":562,"column":11,"offset":20684}}}],"position":{"start":{"line":562,"column":5,"offset":20678},"end":{"line":562,"column":13,"offset":20686}}},{"type":"text","value":" : Python Enhancement Proposals, style-guide for Python.","position":{"start":{"line":562,"column":13,"offset":20686},"end":{"line":562,"column":69,"offset":20742}}}],"position":{"start":{"line":562,"column":1,"offset":20674},"end":{"line":562,"column":69,"offset":20742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"print"}],"position":{"start":{"line":563,"column":5,"offset":20747},"end":{"line":563,"column":12,"offset":20754}}},{"type":"text","value":" is the equivalent of ","position":{"start":{"line":563,"column":12,"offset":20754},"end":{"line":563,"column":34,"offset":20776}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log"}],"position":{"start":{"line":563,"column":34,"offset":20776},"end":{"line":563,"column":47,"offset":20789}}},{"type":"text","value":".","position":{"start":{"line":563,"column":47,"offset":20789},"end":{"line":563,"column":48,"offset":20790}}}],"position":{"start":{"line":563,"column":1,"offset":20743},"end":{"line":563,"column":48,"offset":20790}}},{"type":"text","value":"\n"}],"position":{"start":{"line":562,"column":1,"offset":20674},"end":{"line":563,"column":48,"offset":20790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"'print() == console.log()'","position":{"start":{"line":565,"column":3,"offset":20794},"end":{"line":565,"column":29,"offset":20820}}}],"position":{"start":{"line":565,"column":3,"offset":20794},"end":{"line":565,"column":29,"offset":20820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":565,"column":1,"offset":20792},"end":{"line":565,"column":29,"offset":20820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":""}],"position":{"start":{"line":567,"column":4,"offset":20825},"end":{"line":567,"column":6,"offset":20827}}},{"type":"text","value":"** is used to make comments in your code.**","position":{"start":{"line":567,"column":6,"offset":20827},"end":{"line":567,"column":49,"offset":20870}}}],"position":{"start":{"line":567,"column":1,"offset":20822},"end":{"line":567,"column":49,"offset":20870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"def foo():\n    \"\"\"\n    The foo function does many amazing things that you\n    should not question. Just accept that it exists and\n    use it with caution.\n    \"\"\"\n    secretThing()\n"}],"position":{"start":{"line":569,"column":1,"offset":20872},"end":{"line":577,"column":4,"offset":21064}}}],"position":{"start":{"line":569,"column":1,"offset":20872},"end":{"line":577,"column":4,"offset":21064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python has a built in help function that let's you see a description of the source code without having to navigate to it… \"-SickNasty … Autor Unknown\"","position":{"start":{"line":579,"column":3,"offset":21068},"end":{"line":579,"column":153,"offset":21218}}}],"position":{"start":{"line":579,"column":3,"offset":21068},"end":{"line":579,"column":153,"offset":21218}}},{"type":"text","value":"\n"}],"position":{"start":{"line":579,"column":1,"offset":21066},"end":{"line":579,"column":153,"offset":21218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Numbers","position":{"start":{"line":581,"column":6,"offset":21225},"end":{"line":581,"column":13,"offset":21232}}}],"position":{"start":{"line":581,"column":4,"offset":21223},"end":{"line":581,"column":15,"offset":21234}}}],"position":{"start":{"line":581,"column":1,"offset":21220},"end":{"line":581,"column":15,"offset":21234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python has three types of numbers:","position":{"start":{"line":583,"column":5,"offset":21240},"end":{"line":583,"column":39,"offset":21274}}}],"position":{"start":{"line":583,"column":1,"offset":21236},"end":{"line":584,"column":1,"offset":21275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Integer","position":{"start":{"line":585,"column":7,"offset":21282},"end":{"line":585,"column":14,"offset":21289}}}],"position":{"start":{"line":585,"column":5,"offset":21280},"end":{"line":585,"column":16,"offset":21291}}}],"position":{"start":{"line":585,"column":1,"offset":21276},"end":{"line":585,"column":16,"offset":21291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Positive and Negative Counting Numbers.","position":{"start":{"line":586,"column":7,"offset":21298},"end":{"line":586,"column":46,"offset":21337}}}],"position":{"start":{"line":586,"column":5,"offset":21296},"end":{"line":586,"column":48,"offset":21339}}}],"position":{"start":{"line":586,"column":1,"offset":21292},"end":{"line":586,"column":48,"offset":21339}}},{"type":"text","value":"\n"}],"position":{"start":{"line":583,"column":1,"offset":21236},"end":{"line":586,"column":48,"offset":21339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"No Decimal Point","position":{"start":{"line":588,"column":1,"offset":21341},"end":{"line":588,"column":17,"offset":21357}}}],"position":{"start":{"line":588,"column":1,"offset":21341},"end":{"line":588,"column":17,"offset":21357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Created by a literal non-decimal point number … or … with the int() constructor.","position":{"start":{"line":590,"column":3,"offset":21361},"end":{"line":590,"column":83,"offset":21441}}}],"position":{"start":{"line":590,"column":3,"offset":21361},"end":{"line":590,"column":83,"offset":21441}}},{"type":"text","value":"\n"}],"position":{"start":{"line":590,"column":1,"offset":21359},"end":{"line":590,"column":83,"offset":21441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(3) # => 3\nprint(int(19)) # => 19\nprint(int()) # => 0\n"}],"position":{"start":{"line":592,"column":1,"offset":21443},"end":{"line":596,"column":4,"offset":21513}}}],"position":{"start":{"line":592,"column":1,"offset":21443},"end":{"line":596,"column":4,"offset":21513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3. Complex Numbers","position":{"start":{"line":598,"column":3,"offset":21517},"end":{"line":598,"column":21,"offset":21535}}}],"position":{"start":{"line":598,"column":1,"offset":21515},"end":{"line":598,"column":23,"offset":21537}}}],"position":{"start":{"line":598,"column":1,"offset":21515},"end":{"line":598,"column":23,"offset":21537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consist of a real part and imaginary part.","position":{"start":{"line":600,"column":3,"offset":21541},"end":{"line":600,"column":45,"offset":21583}}}],"position":{"start":{"line":600,"column":3,"offset":21541},"end":{"line":600,"column":45,"offset":21583}}},{"type":"text","value":"\n"}],"position":{"start":{"line":600,"column":1,"offset":21539},"end":{"line":600,"column":45,"offset":21583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boolean is a subtype of integer in Python.🤷‍♂️","position":{"start":{"line":602,"column":7,"offset":21591},"end":{"line":602,"column":54,"offset":21638}}}],"position":{"start":{"line":602,"column":5,"offset":21589},"end":{"line":602,"column":56,"offset":21640}}}],"position":{"start":{"line":602,"column":1,"offset":21585},"end":{"line":602,"column":56,"offset":21640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you came from a background in JavaScript and learned to accept the premise(s) of the following meme…","position":{"start":{"line":604,"column":3,"offset":21644},"end":{"line":604,"column":106,"offset":21747}}}],"position":{"start":{"line":604,"column":3,"offset":21644},"end":{"line":604,"column":106,"offset":21747}}},{"type":"text","value":"\n"}],"position":{"start":{"line":604,"column":1,"offset":21642},"end":{"line":604,"column":106,"offset":21747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Than I am sure you will find the means to suspend your disbelief.","position":{"start":{"line":606,"column":3,"offset":21751},"end":{"line":606,"column":68,"offset":21816}}}],"position":{"start":{"line":606,"column":3,"offset":21751},"end":{"line":606,"column":68,"offset":21816}}},{"type":"text","value":"\n"}],"position":{"start":{"line":606,"column":1,"offset":21749},"end":{"line":606,"column":68,"offset":21816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(2.24) # => 2.24\nprint(2.) # => 2.0\nprint(float()) # => 0.0\nprint(27e-5) # => 0.00027\n"}],"position":{"start":{"line":608,"column":1,"offset":21818},"end":{"line":613,"column":4,"offset":21920}}}],"position":{"start":{"line":608,"column":1,"offset":21818},"end":{"line":613,"column":4,"offset":21920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"KEEP IN MIND:","position":{"start":{"line":615,"column":6,"offset":21927},"end":{"line":615,"column":19,"offset":21940}}}],"position":{"start":{"line":615,"column":4,"offset":21925},"end":{"line":615,"column":21,"offset":21942}}}],"position":{"start":{"line":615,"column":1,"offset":21922},"end":{"line":615,"column":21,"offset":21942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The i is switched to a j in programming.","position":{"start":{"line":617,"column":3,"offset":21946},"end":{"line":617,"column":43,"offset":21986}}}],"position":{"start":{"line":617,"column":3,"offset":21946},"end":{"line":617,"column":43,"offset":21986}}},{"type":"text","value":"\n"}],"position":{"start":{"line":617,"column":1,"offset":21944},"end":{"line":617,"column":43,"offset":21986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":619,"column":3,"offset":21990},"end":{"line":619,"column":4,"offset":21991}}},{"type":"text","value":"*","position":{"start":{"line":619,"column":4,"offset":21991},"end":{"line":619,"column":6,"offset":21993}}}],"position":{"start":{"line":619,"column":1,"offset":21988},"end":{"line":619,"column":8,"offset":21995}}},{"type":"text","value":"his is because the letter i is common place as the de facto index for any and all enumerable entities so it just makes sense not to compete for name-","position":{"start":{"line":619,"column":8,"offset":21995},"end":{"line":619,"column":157,"offset":22144}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"space","position":{"start":{"line":619,"column":159,"offset":22146},"end":{"line":619,"column":164,"offset":22151}}}],"position":{"start":{"line":619,"column":157,"offset":22144},"end":{"line":619,"column":166,"offset":22153}}},{"type":"text","value":" when there's another 25 letters that don't get used for every loop under the sun. My most medium apologies to Leonhard Euler.","position":{"start":{"line":619,"column":166,"offset":22153},"end":{"line":619,"column":292,"offset":22279}}},{"type":"text","value":"*","position":{"start":{"line":619,"column":292,"offset":22279},"end":{"line":619,"column":294,"offset":22281}}}],"position":{"start":{"line":619,"column":1,"offset":21988},"end":{"line":619,"column":294,"offset":22281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(7j) # => 7j\nprint(5.1+7.7j)) # => 5.1+7.7j\nprint(complex(3, 5)) # => 3+5j\nprint(complex(17)) # => 17+0j\nprint(complex()) # => 0j\n"}],"position":{"start":{"line":621,"column":1,"offset":22283},"end":{"line":627,"column":4,"offset":22429}}}],"position":{"start":{"line":621,"column":1,"offset":22283},"end":{"line":627,"column":4,"offset":22429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Type Casting","position":{"start":{"line":629,"column":7,"offset":22437},"end":{"line":629,"column":19,"offset":22449}}}],"position":{"start":{"line":629,"column":5,"offset":22435},"end":{"line":629,"column":21,"offset":22451}}},{"type":"text","value":" : The process of converting one number to another.","position":{"start":{"line":629,"column":21,"offset":22451},"end":{"line":629,"column":72,"offset":22502}}}],"position":{"start":{"line":629,"column":1,"offset":22431},"end":{"line":629,"column":72,"offset":22502}}},{"type":"text","value":"\n"}],"position":{"start":{"line":629,"column":1,"offset":22431},"end":{"line":629,"column":72,"offset":22502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# Using Float\nprint(17)               # => 17\nprint(float(17))        # => 17.0# Using Int\nprint(17.0)             # => 17.0\nprint(int(17.0))        # => 17# Using Str\nprint(str(17.0) + ' and ' + str(17))        # => 17.0 and 17\n"}],"position":{"start":{"line":631,"column":1,"offset":22504},"end":{"line":638,"column":4,"offset":22744}}}],"position":{"start":{"line":631,"column":1,"offset":22504},"end":{"line":638,"column":4,"offset":22744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The arithmetic operators are the same between JS and Python, with two additions:","position":{"start":{"line":640,"column":3,"offset":22748},"end":{"line":640,"column":83,"offset":22828}}}],"position":{"start":{"line":640,"column":1,"offset":22746},"end":{"line":640,"column":85,"offset":22830}}}],"position":{"start":{"line":640,"column":1,"offset":22746},"end":{"line":640,"column":85,"offset":22830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"\"","position":{"start":{"line":642,"column":6,"offset":22837},"end":{"line":642,"column":7,"offset":22838}}},{"type":"text","value":"*","position":{"start":{"line":642,"column":7,"offset":22838},"end":{"line":642,"column":9,"offset":22840}}},{"type":"text","value":"*","position":{"start":{"line":642,"column":9,"offset":22840},"end":{"line":642,"column":11,"offset":22842}}},{"type":"text","value":"\" : Double asterisk for exponent.","position":{"start":{"line":642,"column":11,"offset":22842},"end":{"line":642,"column":44,"offset":22875}}}],"position":{"start":{"line":642,"column":5,"offset":22836},"end":{"line":642,"column":45,"offset":22876}}}],"position":{"start":{"line":642,"column":1,"offset":22832},"end":{"line":642,"column":45,"offset":22876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"\"//\" : Integer Division.","position":{"start":{"line":643,"column":6,"offset":22882},"end":{"line":643,"column":30,"offset":22906}}}],"position":{"start":{"line":643,"column":5,"offset":22881},"end":{"line":643,"column":31,"offset":22907}}}],"position":{"start":{"line":643,"column":1,"offset":22877},"end":{"line":643,"column":31,"offset":22907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"There are no spaces between math operations in Python.","position":{"start":{"line":644,"column":7,"offset":22914},"end":{"line":644,"column":61,"offset":22968}}}],"position":{"start":{"line":644,"column":5,"offset":22912},"end":{"line":644,"column":63,"offset":22970}}}],"position":{"start":{"line":644,"column":1,"offset":22908},"end":{"line":644,"column":63,"offset":22970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Integer Division gives the other part of the number from Module; it is a way to do round down numbers replacing ","position":{"start":{"line":645,"column":7,"offset":22977},"end":{"line":645,"column":119,"offset":23089}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Math.floor()"}],"position":{"start":{"line":645,"column":119,"offset":23089},"end":{"line":645,"column":133,"offset":23103}}},{"type":"text","value":" in JS.","position":{"start":{"line":645,"column":133,"offset":23103},"end":{"line":645,"column":140,"offset":23110}}}],"position":{"start":{"line":645,"column":5,"offset":22975},"end":{"line":645,"column":142,"offset":23112}}}],"position":{"start":{"line":645,"column":1,"offset":22971},"end":{"line":645,"column":142,"offset":23112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"There are no ","position":{"start":{"line":646,"column":7,"offset":23119},"end":{"line":646,"column":20,"offset":23132}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"++"}],"position":{"start":{"line":646,"column":20,"offset":23132},"end":{"line":646,"column":24,"offset":23136}}},{"type":"text","value":" and ","position":{"start":{"line":646,"column":24,"offset":23136},"end":{"line":646,"column":29,"offset":23141}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-"}],"position":{"start":{"line":646,"column":29,"offset":23141},"end":{"line":646,"column":32,"offset":23144}}},{"type":"text","value":" in Python, the only shorthand operators are:","position":{"start":{"line":646,"column":32,"offset":23144},"end":{"line":646,"column":77,"offset":23189}}}],"position":{"start":{"line":646,"column":5,"offset":23117},"end":{"line":646,"column":79,"offset":23191}}}],"position":{"start":{"line":646,"column":1,"offset":23113},"end":{"line":646,"column":79,"offset":23191}}},{"type":"text","value":"\n"}],"position":{"start":{"line":642,"column":1,"offset":22832},"end":{"line":646,"column":79,"offset":23191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Strings","position":{"start":{"line":648,"column":6,"offset":23198},"end":{"line":648,"column":13,"offset":23205}}}],"position":{"start":{"line":648,"column":4,"offset":23196},"end":{"line":648,"column":15,"offset":23207}}}],"position":{"start":{"line":648,"column":1,"offset":23193},"end":{"line":648,"column":15,"offset":23207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python uses both single and double quotes.","position":{"start":{"line":650,"column":5,"offset":23213},"end":{"line":650,"column":47,"offset":23255}}}],"position":{"start":{"line":650,"column":1,"offset":23209},"end":{"line":650,"column":47,"offset":23255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can escape strings like so ","position":{"start":{"line":651,"column":5,"offset":23260},"end":{"line":651,"column":36,"offset":23291}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'Jodi asked, \"What\\\\'s up, Sam?\"'"}],"position":{"start":{"line":651,"column":36,"offset":23291},"end":{"line":651,"column":71,"offset":23326}}}],"position":{"start":{"line":651,"column":1,"offset":23256},"end":{"line":651,"column":71,"offset":23326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Multiline strings use triple quotes.","position":{"start":{"line":652,"column":5,"offset":23331},"end":{"line":652,"column":41,"offset":23367}}}],"position":{"start":{"line":652,"column":1,"offset":23327},"end":{"line":652,"column":41,"offset":23367}}},{"type":"text","value":"\n"}],"position":{"start":{"line":650,"column":1,"offset":23209},"end":{"line":652,"column":41,"offset":23367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print('''My instructions are very long so to make them\nmore readable in the code I am putting them on\nmore than one line. I can even include \"quotes\"\nof any kind because they won't get confused with\nthe end of the string!''')\n"}],"position":{"start":{"line":654,"column":1,"offset":23369},"end":{"line":660,"column":4,"offset":23606}}}],"position":{"start":{"line":654,"column":1,"offset":23369},"end":{"line":660,"column":4,"offset":23606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":662,"column":3,"offset":23610},"end":{"line":662,"column":11,"offset":23618}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"len()"}],"position":{"start":{"line":662,"column":11,"offset":23618},"end":{"line":662,"column":18,"offset":23625}}},{"type":"text","value":" function to get the length of a string.","position":{"start":{"line":662,"column":18,"offset":23625},"end":{"line":662,"column":58,"offset":23665}}}],"position":{"start":{"line":662,"column":1,"offset":23608},"end":{"line":662,"column":60,"offset":23667}}}],"position":{"start":{"line":662,"column":1,"offset":23608},"end":{"line":662,"column":60,"offset":23667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(len(\"Spaghetti\")) # => 9\n"}],"position":{"start":{"line":664,"column":1,"offset":23669},"end":{"line":666,"column":4,"offset":23711}}}],"position":{"start":{"line":664,"column":1,"offset":23669},"end":{"line":666,"column":4,"offset":23711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python uses ","position":{"start":{"line":668,"column":6,"offset":23718},"end":{"line":668,"column":18,"offset":23730}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"zero-based indexing"}],"position":{"start":{"line":668,"column":18,"offset":23730},"end":{"line":668,"column":39,"offset":23751}}}],"position":{"start":{"line":668,"column":4,"offset":23716},"end":{"line":668,"column":41,"offset":23753}}}],"position":{"start":{"line":668,"column":1,"offset":23713},"end":{"line":668,"column":41,"offset":23753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python allows negative indexing (thank god!)","position":{"start":{"line":670,"column":7,"offset":23761},"end":{"line":670,"column":51,"offset":23805}}}],"position":{"start":{"line":670,"column":5,"offset":23759},"end":{"line":670,"column":53,"offset":23807}}}],"position":{"start":{"line":670,"column":1,"offset":23755},"end":{"line":670,"column":53,"offset":23807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(\"Spaghetti\"[-1]) # => i print(\"Spaghetti\"[-4]) # => e\n"}],"position":{"start":{"line":672,"column":1,"offset":23809},"end":{"line":674,"column":4,"offset":23880}}}],"position":{"start":{"line":672,"column":1,"offset":23809},"end":{"line":674,"column":4,"offset":23880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python let's you use ranges","position":{"start":{"line":676,"column":5,"offset":23886},"end":{"line":676,"column":32,"offset":23913}}}],"position":{"start":{"line":676,"column":1,"offset":23882},"end":{"line":676,"column":32,"offset":23913}}},{"type":"text","value":"\n"}],"position":{"start":{"line":676,"column":1,"offset":23882},"end":{"line":676,"column":32,"offset":23913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can think of this as roughly equivalent to the slice method called on a JavaScript object or string… ","position":{"start":{"line":678,"column":1,"offset":23915},"end":{"line":678,"column":106,"offset":24020}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"(mind you that in JS … strings are wrapped in an object (under the hood)… upon which the string methods are actually called. As a immutable privative type ","position":{"start":{"line":678,"column":107,"offset":24021},"end":{"line":678,"column":262,"offset":24176}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"by textbook definition","position":{"start":{"line":678,"column":264,"offset":24178},"end":{"line":678,"column":286,"offset":24200}}}],"position":{"start":{"line":678,"column":262,"offset":24176},"end":{"line":678,"column":288,"offset":24202}}},{"type":"text","value":", a string literal could not hope to invoke most of it's methods without violating the state it was bound to on initialization if it were not for this bit of syntactic sugar.)","position":{"start":{"line":678,"column":288,"offset":24202},"end":{"line":678,"column":463,"offset":24377}}}],"position":{"start":{"line":678,"column":106,"offset":24020},"end":{"line":678,"column":464,"offset":24378}}}],"position":{"start":{"line":678,"column":1,"offset":23915},"end":{"line":678,"column":464,"offset":24378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(\"Spaghetti\"[1:4]) # => pag\nprint(\"Spaghetti\"[4:-1]) # => hett\nprint(\"Spaghetti\"[4:4]) # => (empty string)\n"}],"position":{"start":{"line":680,"column":1,"offset":24380},"end":{"line":684,"column":4,"offset":24503}}}],"position":{"start":{"line":680,"column":1,"offset":24380},"end":{"line":684,"column":4,"offset":24503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The end range is exclusive just like ","position":{"start":{"line":686,"column":5,"offset":24509},"end":{"line":686,"column":42,"offset":24546}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"slice"}],"position":{"start":{"line":686,"column":42,"offset":24546},"end":{"line":686,"column":49,"offset":24553}}},{"type":"text","value":" in JS.","position":{"start":{"line":686,"column":49,"offset":24553},"end":{"line":686,"column":56,"offset":24560}}}],"position":{"start":{"line":686,"column":1,"offset":24505},"end":{"line":686,"column":56,"offset":24560}}},{"type":"text","value":"\n"}],"position":{"start":{"line":686,"column":1,"offset":24505},"end":{"line":686,"column":56,"offset":24560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# Shortcut to get from the beginning of a string to a certain index.\nprint(\"Spaghetti\"[:4])  # => Spag\nprint(\"Spaghetti\"[:-1])    # => Spaghett# Shortcut to get from a certain index to the end of a string.\nprint(\"Spaghetti\"[1:])  # => paghetti\nprint(\"Spaghetti\"[-4:])    # => etti\n"}],"position":{"start":{"line":688,"column":1,"offset":24562},"end":{"line":694,"column":4,"offset":24854}}}],"position":{"start":{"line":688,"column":1,"offset":24562},"end":{"line":694,"column":4,"offset":24854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":696,"column":5,"offset":24860},"end":{"line":696,"column":9,"offset":24864}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"index"}],"position":{"start":{"line":696,"column":9,"offset":24864},"end":{"line":696,"column":16,"offset":24871}}},{"type":"text","value":" string function is the equiv. of ","position":{"start":{"line":696,"column":16,"offset":24871},"end":{"line":696,"column":50,"offset":24905}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"indexOf()"}],"position":{"start":{"line":696,"column":50,"offset":24905},"end":{"line":696,"column":61,"offset":24916}}},{"type":"text","value":" in JS","position":{"start":{"line":696,"column":61,"offset":24916},"end":{"line":696,"column":67,"offset":24922}}}],"position":{"start":{"line":696,"column":1,"offset":24856},"end":{"line":696,"column":67,"offset":24922}}},{"type":"text","value":"\n"}],"position":{"start":{"line":696,"column":1,"offset":24856},"end":{"line":696,"column":67,"offset":24922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(\"Spaghetti\".index(\"h\"))    # => 4\nprint(\"Spaghetti\".index(\"t\"))    # => 6\n"}],"position":{"start":{"line":698,"column":1,"offset":24924},"end":{"line":701,"column":4,"offset":25015}}}],"position":{"start":{"line":698,"column":1,"offset":24924},"end":{"line":701,"column":4,"offset":25015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":703,"column":5,"offset":25021},"end":{"line":703,"column":9,"offset":25025}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"count"}],"position":{"start":{"line":703,"column":9,"offset":25025},"end":{"line":703,"column":16,"offset":25032}}},{"type":"text","value":" function finds out how many times a substring appears in a string… pretty nifty for a hard coded feature of the language.","position":{"start":{"line":703,"column":16,"offset":25032},"end":{"line":703,"column":138,"offset":25154}}}],"position":{"start":{"line":703,"column":1,"offset":25017},"end":{"line":703,"column":138,"offset":25154}}},{"type":"text","value":"\n"}],"position":{"start":{"line":703,"column":1,"offset":25017},"end":{"line":703,"column":138,"offset":25154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(\"Spaghetti\".count(\"h\"))    # => 1\nprint(\"Spaghetti\".count(\"t\"))    # => 2\nprint(\"Spaghetti\".count(\"s\"))    # => 0\nprint('''We choose to go to the moon in this decade and do the other things,\nnot because they are easy, but because they are hard, because that goal will\nserve to organize and measure the best of our energies and skills, because that\nchallenge is one that we are willing to accept, one we are unwilling to\npostpone, and one which we intend to win, and the others, too.\n'''.count('the '))                # => 4\n"}],"position":{"start":{"line":705,"column":1,"offset":25156},"end":{"line":715,"column":4,"offset":25697}}}],"position":{"start":{"line":705,"column":1,"offset":25156},"end":{"line":715,"column":4,"offset":25697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can use ","position":{"start":{"line":717,"column":7,"offset":25705},"end":{"line":717,"column":19,"offset":25717}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"+"}],"position":{"start":{"line":717,"column":19,"offset":25717},"end":{"line":717,"column":22,"offset":25720}}},{"type":"text","value":" to concatenate strings, just like in JS.","position":{"start":{"line":717,"column":22,"offset":25720},"end":{"line":717,"column":63,"offset":25761}}}],"position":{"start":{"line":717,"column":5,"offset":25703},"end":{"line":717,"column":65,"offset":25763}}}],"position":{"start":{"line":717,"column":1,"offset":25699},"end":{"line":717,"column":65,"offset":25763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can also use \"","position":{"start":{"line":718,"column":7,"offset":25770},"end":{"line":718,"column":25,"offset":25788}}},{"type":"text","value":"*","position":{"start":{"line":718,"column":25,"offset":25788},"end":{"line":718,"column":27,"offset":25790}}},{"type":"text","value":"\" to repeat strings or multiply strings.","position":{"start":{"line":718,"column":27,"offset":25790},"end":{"line":718,"column":67,"offset":25830}}}],"position":{"start":{"line":718,"column":5,"offset":25768},"end":{"line":718,"column":69,"offset":25832}}}],"position":{"start":{"line":718,"column":1,"offset":25764},"end":{"line":718,"column":69,"offset":25832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":719,"column":7,"offset":25839},"end":{"line":719,"column":15,"offset":25847}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"format()"}],"position":{"start":{"line":719,"column":15,"offset":25847},"end":{"line":719,"column":25,"offset":25857}}},{"type":"text","value":" function to use placeholders in a string to input values later on.","position":{"start":{"line":719,"column":25,"offset":25857},"end":{"line":719,"column":92,"offset":25924}}}],"position":{"start":{"line":719,"column":5,"offset":25837},"end":{"line":719,"column":94,"offset":25926}}}],"position":{"start":{"line":719,"column":1,"offset":25833},"end":{"line":719,"column":94,"offset":25926}}},{"type":"text","value":"\n"}],"position":{"start":{"line":717,"column":1,"offset":25699},"end":{"line":719,"column":94,"offset":25926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"first_name = \"Billy\"\nlast_name = \"Bob\"\nprint('Your name is {0} {1}'.format(first_name, last_name))  # => Your name is Billy Bob\n"}],"position":{"start":{"line":721,"column":1,"offset":25928},"end":{"line":725,"column":4,"offset":26067}}}],"position":{"start":{"line":721,"column":1,"offset":25928},"end":{"line":725,"column":4,"offset":26067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Shorthand way to use format function is:","position":{"start":{"line":727,"column":6,"offset":26074},"end":{"line":727,"column":46,"offset":26114}}}],"position":{"start":{"line":727,"column":5,"offset":26073},"end":{"line":727,"column":47,"offset":26115}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"print(f'Your name is {first_name} {last_name}')"}],"position":{"start":{"line":727,"column":47,"offset":26115},"end":{"line":727,"column":96,"offset":26164}}}],"position":{"start":{"line":727,"column":1,"offset":26069},"end":{"line":727,"column":96,"offset":26164}}},{"type":"text","value":"\n"}],"position":{"start":{"line":727,"column":1,"offset":26069},"end":{"line":727,"column":96,"offset":26164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Some useful string methods.","position":{"start":{"line":729,"column":7,"offset":26172},"end":{"line":729,"column":34,"offset":26199}}}],"position":{"start":{"line":729,"column":5,"offset":26170},"end":{"line":729,"column":36,"offset":26201}}}],"position":{"start":{"line":729,"column":1,"offset":26166},"end":{"line":729,"column":36,"offset":26201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note that in JS ","position":{"start":{"line":731,"column":7,"offset":26209},"end":{"line":731,"column":23,"offset":26225}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"join"}],"position":{"start":{"line":731,"column":23,"offset":26225},"end":{"line":731,"column":29,"offset":26231}}},{"type":"text","value":" is used on an Array, in Python it is used on String.","position":{"start":{"line":731,"column":29,"offset":26231},"end":{"line":731,"column":82,"offset":26284}}}],"position":{"start":{"line":731,"column":5,"offset":26207},"end":{"line":731,"column":84,"offset":26286}}}],"position":{"start":{"line":731,"column":1,"offset":26203},"end":{"line":731,"column":84,"offset":26286}}},{"type":"text","value":"\n"}],"position":{"start":{"line":731,"column":1,"offset":26203},"end":{"line":731,"column":84,"offset":26286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://miro.medium.com/max/630/0*eE3E5H0AoqkhqK1z.png","alt":"https://miro.medium.com/max/630/0*eE3E5H0AoqkhqK1z.png"},"children":[],"position":{"start":{"line":733,"column":1,"offset":26288},"end":{"line":733,"column":114,"offset":26401}}}],"position":{"start":{"line":733,"column":1,"offset":26288},"end":{"line":733,"column":114,"offset":26401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"There are also many handy testing methods.","position":{"start":{"line":735,"column":5,"offset":26407},"end":{"line":735,"column":47,"offset":26449}}}],"position":{"start":{"line":735,"column":1,"offset":26403},"end":{"line":735,"column":47,"offset":26449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":735,"column":1,"offset":26403},"end":{"line":735,"column":47,"offset":26449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://miro.medium.com/max/630/0*Q0CMqFd4PozLDFPB.png","alt":"https://miro.medium.com/max/630/0*Q0CMqFd4PozLDFPB.png"},"children":[],"position":{"start":{"line":737,"column":1,"offset":26451},"end":{"line":737,"column":114,"offset":26564}}}],"position":{"start":{"line":737,"column":1,"offset":26451},"end":{"line":737,"column":114,"offset":26564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Variables and Expressions","position":{"start":{"line":739,"column":6,"offset":26571},"end":{"line":739,"column":31,"offset":26596}}}],"position":{"start":{"line":739,"column":4,"offset":26569},"end":{"line":739,"column":33,"offset":26598}}}],"position":{"start":{"line":739,"column":1,"offset":26566},"end":{"line":739,"column":33,"offset":26598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Duck-Typing","position":{"start":{"line":741,"column":7,"offset":26606},"end":{"line":741,"column":18,"offset":26617}}}],"position":{"start":{"line":741,"column":5,"offset":26604},"end":{"line":741,"column":20,"offset":26619}}},{"type":"text","value":" : Programming Style which avoids checking an object's type to figure out what it can do.","position":{"start":{"line":741,"column":20,"offset":26619},"end":{"line":741,"column":109,"offset":26708}}}],"position":{"start":{"line":741,"column":1,"offset":26600},"end":{"line":741,"column":109,"offset":26708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Duck Typing is the fundamental approach of Python.","position":{"start":{"line":742,"column":5,"offset":26713},"end":{"line":742,"column":55,"offset":26763}}}],"position":{"start":{"line":742,"column":1,"offset":26709},"end":{"line":742,"column":55,"offset":26763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Assignment of a value automatically declares a variable.","position":{"start":{"line":743,"column":5,"offset":26768},"end":{"line":743,"column":61,"offset":26824}}}],"position":{"start":{"line":743,"column":1,"offset":26764},"end":{"line":743,"column":61,"offset":26824}}},{"type":"text","value":"\n"}],"position":{"start":{"line":741,"column":1,"offset":26600},"end":{"line":743,"column":61,"offset":26824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 7\nb = 'Marbles'\nprint(a)         # => 7\nprint(b)         # => Marbles\n"}],"position":{"start":{"line":745,"column":1,"offset":26826},"end":{"line":750,"column":4,"offset":26911}}}],"position":{"start":{"line":745,"column":1,"offset":26826},"end":{"line":750,"column":4,"offset":26911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"You can chain variable assignments to give multiple var names the same value.","position":{"start":{"line":752,"column":8,"offset":26920},"end":{"line":752,"column":85,"offset":26997}}}],"position":{"start":{"line":752,"column":7,"offset":26919},"end":{"line":752,"column":86,"offset":26998}}}],"position":{"start":{"line":752,"column":5,"offset":26917},"end":{"line":752,"column":88,"offset":27000}}}],"position":{"start":{"line":752,"column":1,"offset":26913},"end":{"line":752,"column":88,"offset":27000}}},{"type":"text","value":"\n"}],"position":{"start":{"line":752,"column":1,"offset":26913},"end":{"line":752,"column":88,"offset":27000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Use with caution as this is highly unreadable","position":{"start":{"line":754,"column":7,"offset":27008},"end":{"line":754,"column":52,"offset":27053}}}],"position":{"start":{"line":754,"column":5,"offset":27006},"end":{"line":754,"column":54,"offset":27055}}}],"position":{"start":{"line":754,"column":1,"offset":27002},"end":{"line":754,"column":54,"offset":27055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"count = max = min = 0\nprint(count)           # => 0\nprint(max)             # => 0\nprint(min)             # => 0\n"}],"position":{"start":{"line":756,"column":1,"offset":27057},"end":{"line":761,"column":4,"offset":27180}}}],"position":{"start":{"line":756,"column":1,"offset":27057},"end":{"line":761,"column":4,"offset":27180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The value and type of a variable can be re-assigned at any time.","position":{"start":{"line":763,"column":7,"offset":27188},"end":{"line":763,"column":71,"offset":27252}}}],"position":{"start":{"line":763,"column":5,"offset":27186},"end":{"line":763,"column":73,"offset":27254}}}],"position":{"start":{"line":763,"column":1,"offset":27182},"end":{"line":763,"column":73,"offset":27254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 17\nprint(a)         # => 17\na = 'seventeen'\nprint(a)         # => seventeen\n"}],"position":{"start":{"line":765,"column":1,"offset":27256},"end":{"line":770,"column":4,"offset":27347}}}],"position":{"start":{"line":765,"column":1,"offset":27256},"end":{"line":770,"column":4,"offset":27347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"* does not exist in Python, but you can 'create' it like so:"}],"position":{"start":{"line":772,"column":5,"offset":27353},"end":{"line":772,"column":67,"offset":27415}}},{"type":"text","value":"*","position":{"start":{"line":772,"column":67,"offset":27415},"end":{"line":772,"column":69,"offset":27417}}}],"position":{"start":{"line":772,"column":1,"offset":27349},"end":{"line":772,"column":69,"offset":27417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Python replaces ","position":{"start":{"line":773,"column":6,"offset":27423},"end":{"line":773,"column":22,"offset":27439}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":773,"column":22,"offset":27439},"end":{"line":773,"column":28,"offset":27445}}},{"type":"text","value":" with ","position":{"start":{"line":773,"column":28,"offset":27445},"end":{"line":773,"column":34,"offset":27451}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"none"}],"position":{"start":{"line":773,"column":34,"offset":27451},"end":{"line":773,"column":40,"offset":27457}}},{"type":"text","value":".","position":{"start":{"line":773,"column":40,"offset":27457},"end":{"line":773,"column":41,"offset":27458}}}],"position":{"start":{"line":773,"column":5,"offset":27422},"end":{"line":773,"column":42,"offset":27459}}}],"position":{"start":{"line":773,"column":1,"offset":27418},"end":{"line":773,"column":42,"offset":27459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":""}],"position":{"start":{"line":774,"column":5,"offset":27464},"end":{"line":774,"column":7,"offset":27466}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":774,"column":9,"offset":27468},"end":{"line":774,"column":11,"offset":27470}}},{"type":"text","value":" is an object","position":{"start":{"line":774,"column":11,"offset":27470},"end":{"line":774,"column":24,"offset":27483}}}],"position":{"start":{"line":774,"column":7,"offset":27466},"end":{"line":774,"column":26,"offset":27485}}},{"type":"text","value":" and can be directly assigned to a variable.","position":{"start":{"line":774,"column":26,"offset":27485},"end":{"line":774,"column":70,"offset":27529}}},{"type":"text","value":"*","position":{"start":{"line":774,"column":70,"offset":27529},"end":{"line":774,"column":72,"offset":27531}}}],"position":{"start":{"line":774,"column":1,"offset":27460},"end":{"line":774,"column":72,"offset":27531}}},{"type":"text","value":"\n"}],"position":{"start":{"line":772,"column":1,"offset":27349},"end":{"line":774,"column":72,"offset":27531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using none is a convenient way to check to see why an action may not be operating correctly in your program.","position":{"start":{"line":776,"column":3,"offset":27535},"end":{"line":776,"column":111,"offset":27643}}}],"position":{"start":{"line":776,"column":3,"offset":27535},"end":{"line":776,"column":111,"offset":27643}}},{"type":"text","value":"\n"}],"position":{"start":{"line":776,"column":1,"offset":27533},"end":{"line":776,"column":111,"offset":27643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boolean Data Type","position":{"start":{"line":778,"column":6,"offset":27650},"end":{"line":778,"column":23,"offset":27667}}}],"position":{"start":{"line":778,"column":4,"offset":27648},"end":{"line":778,"column":25,"offset":27669}}}],"position":{"start":{"line":778,"column":1,"offset":27645},"end":{"line":778,"column":25,"offset":27669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"One of the biggest benefits of Python is that it reads more like English than JS does.","position":{"start":{"line":780,"column":5,"offset":27675},"end":{"line":780,"column":91,"offset":27761}}}],"position":{"start":{"line":780,"column":1,"offset":27671},"end":{"line":780,"column":91,"offset":27761}}},{"type":"text","value":"\n"}],"position":{"start":{"line":780,"column":1,"offset":27671},"end":{"line":780,"column":91,"offset":27761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://miro.medium.com/max/1400/0*HQpndNhm1Z_xSoHb.png","alt":"https://miro.medium.com/max/1400/0*HQpndNhm1Z_xSoHb.png"},"children":[],"position":{"start":{"line":782,"column":1,"offset":27763},"end":{"line":782,"column":116,"offset":27878}}}],"position":{"start":{"line":782,"column":1,"offset":27763},"end":{"line":782,"column":116,"offset":27878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# Logical AND\nprint(True and True)    # => True\nprint(True and False)   # => False\nprint(False and False)  # => False# Logical OR\nprint(True or True)     # => True\nprint(True or False)    # => True\nprint(False or False)   # => False# Logical NOT\nprint(not True)             # => False\nprint(not False and True)   # => True\nprint(not True or False)    # => False\n"}],"position":{"start":{"line":784,"column":1,"offset":27880},"end":{"line":795,"column":4,"offset":28253}}}],"position":{"start":{"line":784,"column":1,"offset":27880},"end":{"line":795,"column":4,"offset":28253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"By default, Python considers an object to be true UNLESS it is one of the following:","position":{"start":{"line":797,"column":5,"offset":28259},"end":{"line":797,"column":89,"offset":28343}}}],"position":{"start":{"line":797,"column":1,"offset":28255},"end":{"line":797,"column":89,"offset":28343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Constant ","position":{"start":{"line":798,"column":5,"offset":28348},"end":{"line":798,"column":14,"offset":28357}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"None"}],"position":{"start":{"line":798,"column":14,"offset":28357},"end":{"line":798,"column":20,"offset":28363}}},{"type":"text","value":" or ","position":{"start":{"line":798,"column":20,"offset":28363},"end":{"line":798,"column":24,"offset":28367}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"False"}],"position":{"start":{"line":798,"column":24,"offset":28367},"end":{"line":798,"column":31,"offset":28374}}}],"position":{"start":{"line":798,"column":1,"offset":28344},"end":{"line":798,"column":31,"offset":28374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Zero of any numeric type.","position":{"start":{"line":799,"column":5,"offset":28379},"end":{"line":799,"column":30,"offset":28404}}}],"position":{"start":{"line":799,"column":1,"offset":28375},"end":{"line":799,"column":30,"offset":28404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Empty Sequence or Collection.","position":{"start":{"line":800,"column":5,"offset":28409},"end":{"line":800,"column":34,"offset":28438}}}],"position":{"start":{"line":800,"column":1,"offset":28405},"end":{"line":800,"column":34,"offset":28438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"True"}],"position":{"start":{"line":801,"column":5,"offset":28443},"end":{"line":801,"column":11,"offset":28449}}},{"type":"text","value":" and ","position":{"start":{"line":801,"column":11,"offset":28449},"end":{"line":801,"column":16,"offset":28454}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"False"}],"position":{"start":{"line":801,"column":16,"offset":28454},"end":{"line":801,"column":23,"offset":28461}}},{"type":"text","value":" must be capitalized","position":{"start":{"line":801,"column":23,"offset":28461},"end":{"line":801,"column":43,"offset":28481}}}],"position":{"start":{"line":801,"column":1,"offset":28439},"end":{"line":801,"column":43,"offset":28481}}},{"type":"text","value":"\n"}],"position":{"start":{"line":797,"column":1,"offset":28255},"end":{"line":801,"column":43,"offset":28481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":803,"column":6,"offset":28488},"end":{"line":803,"column":26,"offset":28508}}}],"position":{"start":{"line":803,"column":4,"offset":28486},"end":{"line":803,"column":28,"offset":28510}}}],"position":{"start":{"line":803,"column":1,"offset":28483},"end":{"line":803,"column":28,"offset":28510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python uses all the same equality operators as JS.","position":{"start":{"line":805,"column":5,"offset":28516},"end":{"line":805,"column":55,"offset":28566}}}],"position":{"start":{"line":805,"column":1,"offset":28512},"end":{"line":805,"column":55,"offset":28566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In Python, equality operators are processed from left to right.","position":{"start":{"line":806,"column":5,"offset":28571},"end":{"line":806,"column":68,"offset":28634}}}],"position":{"start":{"line":806,"column":1,"offset":28567},"end":{"line":806,"column":68,"offset":28634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Logical operators are processed in this order:","position":{"start":{"line":807,"column":5,"offset":28639},"end":{"line":807,"column":51,"offset":28685}}}],"position":{"start":{"line":807,"column":1,"offset":28635},"end":{"line":808,"column":1,"offset":28686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"NOT","position":{"start":{"line":809,"column":7,"offset":28693},"end":{"line":809,"column":10,"offset":28696}}}],"position":{"start":{"line":809,"column":5,"offset":28691},"end":{"line":809,"column":12,"offset":28698}}}],"position":{"start":{"line":809,"column":1,"offset":28687},"end":{"line":809,"column":12,"offset":28698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"AND","position":{"start":{"line":810,"column":7,"offset":28705},"end":{"line":810,"column":10,"offset":28708}}}],"position":{"start":{"line":810,"column":5,"offset":28703},"end":{"line":810,"column":12,"offset":28710}}}],"position":{"start":{"line":810,"column":1,"offset":28699},"end":{"line":810,"column":12,"offset":28710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"OR","position":{"start":{"line":811,"column":7,"offset":28717},"end":{"line":811,"column":9,"offset":28719}}}],"position":{"start":{"line":811,"column":5,"offset":28715},"end":{"line":811,"column":11,"offset":28721}}}],"position":{"start":{"line":811,"column":1,"offset":28711},"end":{"line":811,"column":11,"offset":28721}}},{"type":"text","value":"\n"}],"position":{"start":{"line":805,"column":1,"offset":28512},"end":{"line":811,"column":11,"offset":28721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like in JS, you can use parentheses to change the inherent order of operations.Short Circuit : Stopping a program when a true or false has been reached.","position":{"start":{"line":813,"column":3,"offset":28725},"end":{"line":813,"column":160,"offset":28882}}}],"position":{"start":{"line":813,"column":3,"offset":28725},"end":{"line":813,"column":160,"offset":28882}}},{"type":"text","value":"\n"}],"position":{"start":{"line":813,"column":1,"offset":28723},"end":{"line":813,"column":160,"offset":28882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://miro.medium.com/max/630/0*qHzGRLTOMTf30miT.png","alt":"https://miro.medium.com/max/630/0*qHzGRLTOMTf30miT.png"},"children":[],"position":{"start":{"line":815,"column":1,"offset":28884},"end":{"line":815,"column":114,"offset":28997}}}],"position":{"start":{"line":815,"column":1,"offset":28884},"end":{"line":815,"column":114,"offset":28997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Identity vs Equality","position":{"start":{"line":817,"column":6,"offset":29004},"end":{"line":817,"column":26,"offset":29024}}}],"position":{"start":{"line":817,"column":4,"offset":29002},"end":{"line":817,"column":28,"offset":29026}}}],"position":{"start":{"line":817,"column":1,"offset":28999},"end":{"line":817,"column":28,"offset":29026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":819,"column":1,"offset":29028},"end":{"line":819,"column":3,"offset":29030}}},{"type":"text","value":"*","position":{"start":{"line":819,"column":3,"offset":29030},"end":{"line":819,"column":5,"offset":29032}}},{"type":"text","value":"*","position":{"start":{"line":819,"column":5,"offset":29032},"end":{"line":819,"column":7,"offset":29034}}},{"type":"text","value":"*","position":{"start":{"line":819,"column":7,"offset":29034},"end":{"line":819,"column":9,"offset":29036}}}],"position":{"start":{"line":819,"column":1,"offset":29028},"end":{"line":819,"column":9,"offset":29036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"center"},"children":[],"position":{"start":{"line":821,"column":7,"offset":29044},"end":{"line":821,"column":7,"offset":29044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":"left"},"children":[],"position":{"start":{"line":821,"column":13,"offset":29050},"end":{"line":821,"column":13,"offset":29050}}},{"type":"text","value":"\n"}],"position":{"start":{"line":821,"column":1,"offset":29038},"end":{"line":821,"column":14,"offset":29051}}},{"type":"text","value":"\n"}],"position":{"start":{"line":821,"column":1,"offset":29038},"end":{"line":821,"column":14,"offset":29051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}],"position":{"start":{"line":821,"column":1,"offset":29038},"end":{"line":822,"column":14,"offset":29065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print (2 == '2')    # => False\nprint (2 is '2')    # => Falseprint (\"2\" == '2')    # => True\nprint (\"2\" is '2')    # => True# There is a distinction between the number types.\nprint (2 == 2.0)    # => True\nprint (2 is 2.0)    # => False\n"}],"position":{"start":{"line":824,"column":1,"offset":29067},"end":{"line":830,"column":4,"offset":29314}}}],"position":{"start":{"line":824,"column":1,"offset":29067},"end":{"line":830,"column":4,"offset":29314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In the Python community it is better to use ","position":{"start":{"line":832,"column":5,"offset":29320},"end":{"line":832,"column":49,"offset":29364}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"is"}],"position":{"start":{"line":832,"column":49,"offset":29364},"end":{"line":832,"column":53,"offset":29368}}},{"type":"text","value":" and ","position":{"start":{"line":832,"column":53,"offset":29368},"end":{"line":832,"column":58,"offset":29373}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"is not"}],"position":{"start":{"line":832,"column":58,"offset":29373},"end":{"line":832,"column":66,"offset":29381}}},{"type":"text","value":" over ","position":{"start":{"line":832,"column":66,"offset":29381},"end":{"line":832,"column":72,"offset":29387}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"=="}],"position":{"start":{"line":832,"column":72,"offset":29387},"end":{"line":832,"column":76,"offset":29391}}},{"type":"text","value":" or ","position":{"start":{"line":832,"column":76,"offset":29391},"end":{"line":832,"column":80,"offset":29395}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"!="}],"position":{"start":{"line":832,"column":80,"offset":29395},"end":{"line":832,"column":84,"offset":29399}}}],"position":{"start":{"line":832,"column":1,"offset":29316},"end":{"line":832,"column":84,"offset":29399}}},{"type":"text","value":"\n"}],"position":{"start":{"line":832,"column":1,"offset":29316},"end":{"line":832,"column":84,"offset":29399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"If Statements","position":{"start":{"line":834,"column":3,"offset":29403},"end":{"line":834,"column":16,"offset":29416}}}],"position":{"start":{"line":834,"column":1,"offset":29401},"end":{"line":834,"column":18,"offset":29418}}}],"position":{"start":{"line":834,"column":1,"offset":29401},"end":{"line":834,"column":18,"offset":29418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"if name == 'Monica': print('Hi, Monica.')if name == 'Monica': print('Hi, Monica.')else: print('Hello, stranger.')if name == 'Monica': print('Hi, Monica.')elif age < 12: print('You are not Monica, kiddo.')elif age > 2000: print('Unlike you, Monica is not an undead, immortal vampire.')elif age > 100: print('You are not Monica, grannie.')"}],"position":{"start":{"line":836,"column":1,"offset":29420},"end":{"line":836,"column":340,"offset":29759}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Remember the order of ","position":{"start":{"line":836,"column":341,"offset":29760},"end":{"line":836,"column":363,"offset":29782}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"elif"}],"position":{"start":{"line":836,"column":363,"offset":29782},"end":{"line":836,"column":369,"offset":29788}}},{"type":"text","value":" statements matter.","position":{"start":{"line":836,"column":369,"offset":29788},"end":{"line":836,"column":388,"offset":29807}}}],"position":{"start":{"line":836,"column":340,"offset":29759},"end":{"line":836,"column":389,"offset":29808}}}],"position":{"start":{"line":836,"column":1,"offset":29420},"end":{"line":836,"column":389,"offset":29808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"While Statements","position":{"start":{"line":838,"column":6,"offset":29815},"end":{"line":838,"column":22,"offset":29831}}}],"position":{"start":{"line":838,"column":4,"offset":29813},"end":{"line":838,"column":24,"offset":29833}}}],"position":{"start":{"line":838,"column":1,"offset":29810},"end":{"line":838,"column":24,"offset":29833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"spam = 0\nwhile spam < 5:\n  print('Hello, world.')\n  spam = spam + 1\n"}],"position":{"start":{"line":840,"column":1,"offset":29835},"end":{"line":845,"column":4,"offset":29914}}}],"position":{"start":{"line":840,"column":1,"offset":29835},"end":{"line":845,"column":4,"offset":29914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Break"}],"position":{"start":{"line":847,"column":5,"offset":29920},"end":{"line":847,"column":12,"offset":29927}}},{"type":"text","value":" statement also exists in Python.","position":{"start":{"line":847,"column":12,"offset":29927},"end":{"line":847,"column":45,"offset":29960}}}],"position":{"start":{"line":847,"column":1,"offset":29916},"end":{"line":847,"column":45,"offset":29960}}},{"type":"text","value":"\n"}],"position":{"start":{"line":847,"column":1,"offset":29916},"end":{"line":847,"column":45,"offset":29960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"spam = 0\nwhile True:\n  print('Hello, world.')\n  spam = spam + 1\n  if spam >= 5:\n    break\n"}],"position":{"start":{"line":849,"column":1,"offset":29962},"end":{"line":856,"column":4,"offset":30063}}}],"position":{"start":{"line":849,"column":1,"offset":29962},"end":{"line":856,"column":4,"offset":30063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"As are ","position":{"start":{"line":858,"column":5,"offset":30069},"end":{"line":858,"column":12,"offset":30076}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"continue"}],"position":{"start":{"line":858,"column":12,"offset":30076},"end":{"line":858,"column":22,"offset":30086}}},{"type":"text","value":" statements","position":{"start":{"line":858,"column":22,"offset":30086},"end":{"line":858,"column":33,"offset":30097}}}],"position":{"start":{"line":858,"column":1,"offset":30065},"end":{"line":858,"column":33,"offset":30097}}},{"type":"text","value":"\n"}],"position":{"start":{"line":858,"column":1,"offset":30065},"end":{"line":858,"column":33,"offset":30097}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"spam = 0\nwhile True:\n  print('Hello, world.')\n  spam = spam + 1\n  if spam < 5:\n    continue\n  break\n"}],"position":{"start":{"line":860,"column":1,"offset":30099},"end":{"line":868,"column":4,"offset":30210}}}],"position":{"start":{"line":860,"column":1,"offset":30099},"end":{"line":868,"column":4,"offset":30210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Try/Except Statements","position":{"start":{"line":870,"column":6,"offset":30217},"end":{"line":870,"column":27,"offset":30238}}}],"position":{"start":{"line":870,"column":4,"offset":30215},"end":{"line":870,"column":29,"offset":30240}}}],"position":{"start":{"line":870,"column":1,"offset":30212},"end":{"line":870,"column":29,"offset":30240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Python equivalent to ","position":{"start":{"line":872,"column":5,"offset":30246},"end":{"line":872,"column":26,"offset":30267}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"try/catch"}],"position":{"start":{"line":872,"column":26,"offset":30267},"end":{"line":872,"column":37,"offset":30278}}}],"position":{"start":{"line":872,"column":1,"offset":30242},"end":{"line":872,"column":37,"offset":30278}}},{"type":"text","value":"\n"}],"position":{"start":{"line":872,"column":1,"offset":30242},"end":{"line":872,"column":37,"offset":30278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 321\ntry:\n    print(len(a))\nexcept:\n    print('Silently handle error here')    # Optionally include a correction to the issue\n    a = str(a)\n    print(len(a)a = '321'\ntry:\n    print(len(a))\nexcept:\n    print('Silently handle error here')    # Optionally include a correction to the issue\n    a = str(a)\n    print(len(a))\n"}],"position":{"start":{"line":874,"column":1,"offset":30280},"end":{"line":888,"column":4,"offset":30615}}}],"position":{"start":{"line":874,"column":1,"offset":30280},"end":{"line":888,"column":4,"offset":30615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can name an error to give the output more specificity.","position":{"start":{"line":890,"column":5,"offset":30621},"end":{"line":890,"column":63,"offset":30679}}}],"position":{"start":{"line":890,"column":1,"offset":30617},"end":{"line":890,"column":63,"offset":30679}}},{"type":"text","value":"\n"}],"position":{"start":{"line":890,"column":1,"offset":30617},"end":{"line":890,"column":63,"offset":30679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 100\nb = 0\ntry:\n    c = a / b\nexcept ZeroDivisionError:\n    c = None\nprint(c)\n"}],"position":{"start":{"line":892,"column":1,"offset":30681},"end":{"line":900,"column":4,"offset":30773}}}],"position":{"start":{"line":892,"column":1,"offset":30681},"end":{"line":900,"column":4,"offset":30773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can also use the ","position":{"start":{"line":902,"column":5,"offset":30779},"end":{"line":902,"column":26,"offset":30800}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pass"}],"position":{"start":{"line":902,"column":26,"offset":30800},"end":{"line":902,"column":32,"offset":30806}}},{"type":"text","value":" commmand to by pass a certain error.","position":{"start":{"line":902,"column":32,"offset":30806},"end":{"line":902,"column":69,"offset":30843}}}],"position":{"start":{"line":902,"column":1,"offset":30775},"end":{"line":902,"column":69,"offset":30843}}},{"type":"text","value":"\n"}],"position":{"start":{"line":902,"column":1,"offset":30775},"end":{"line":902,"column":69,"offset":30843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 100\nb = 0\ntry:\n    print(a / b)\nexcept ZeroDivisionError:\n    pass\n"}],"position":{"start":{"line":904,"column":1,"offset":30845},"end":{"line":911,"column":4,"offset":30927}}}],"position":{"start":{"line":904,"column":1,"offset":30845},"end":{"line":911,"column":4,"offset":30927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":913,"column":5,"offset":30933},"end":{"line":913,"column":9,"offset":30937}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pass"}],"position":{"start":{"line":913,"column":9,"offset":30937},"end":{"line":913,"column":15,"offset":30943}}},{"type":"text","value":" method won't allow you to bypass every single error so you can chain an exception series like so:","position":{"start":{"line":913,"column":15,"offset":30943},"end":{"line":913,"column":113,"offset":31041}}}],"position":{"start":{"line":913,"column":1,"offset":30929},"end":{"line":913,"column":113,"offset":31041}}},{"type":"text","value":"\n"}],"position":{"start":{"line":913,"column":1,"offset":30929},"end":{"line":913,"column":113,"offset":31041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = 100\n# b = \"5\"\ntry:\n    print(a / b)\nexcept ZeroDivisionError:\n    pass\nexcept (TypeError, NameError):\n    print(\"ERROR!\")\n"}],"position":{"start":{"line":915,"column":1,"offset":31043},"end":{"line":924,"column":4,"offset":31180}}}],"position":{"start":{"line":915,"column":1,"offset":31043},"end":{"line":924,"column":4,"offset":31180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can use an ","position":{"start":{"line":926,"column":5,"offset":31186},"end":{"line":926,"column":20,"offset":31201}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"else"}],"position":{"start":{"line":926,"column":20,"offset":31201},"end":{"line":926,"column":26,"offset":31207}}},{"type":"text","value":" statement to end a chain of ","position":{"start":{"line":926,"column":26,"offset":31207},"end":{"line":926,"column":55,"offset":31236}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"except"}],"position":{"start":{"line":926,"column":55,"offset":31236},"end":{"line":926,"column":63,"offset":31244}}},{"type":"text","value":" statements.","position":{"start":{"line":926,"column":63,"offset":31244},"end":{"line":926,"column":75,"offset":31256}}}],"position":{"start":{"line":926,"column":1,"offset":31182},"end":{"line":926,"column":75,"offset":31256}}},{"type":"text","value":"\n"}],"position":{"start":{"line":926,"column":1,"offset":31182},"end":{"line":926,"column":75,"offset":31256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# tuple of file names\nfiles = ('one.txt', 'two.txt', 'three.txt')# simple loop\nfor filename in files:\n    try:\n        # open the file in read mode\n        f = open(filename, 'r')\n    except OSError:\n        # handle the case where file does not exist or permission is denied\n        print('cannot open file', filename)\n    else:\n        # do stuff with the file object (f)\n        print(filename, 'opened successfully')\n        print('found', len(f.readlines()), 'lines')\n        f.close()\n"}],"position":{"start":{"line":928,"column":1,"offset":31258},"end":{"line":943,"column":4,"offset":31760}}}],"position":{"start":{"line":928,"column":1,"offset":31258},"end":{"line":943,"column":4,"offset":31760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"finally"}],"position":{"start":{"line":945,"column":5,"offset":31766},"end":{"line":945,"column":14,"offset":31775}}},{"type":"text","value":" is used at the end to clean up all actions under any circumstance.","position":{"start":{"line":945,"column":14,"offset":31775},"end":{"line":945,"column":81,"offset":31842}}}],"position":{"start":{"line":945,"column":1,"offset":31762},"end":{"line":945,"column":81,"offset":31842}}},{"type":"text","value":"\n"}],"position":{"start":{"line":945,"column":1,"offset":31762},"end":{"line":945,"column":81,"offset":31842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"def divide(x, y):\n    try:\n        result = x / y\n    except ZeroDivisionError:\n        print(\"Cannot divide by zero\")\n    else:\n        print(\"Result is\", result)\n    finally:\n        print(\"Finally...\")\n"}],"position":{"start":{"line":947,"column":1,"offset":31844},"end":{"line":957,"column":4,"offset":32060}}}],"position":{"start":{"line":947,"column":1,"offset":31844},"end":{"line":957,"column":4,"offset":32060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using duck typing to check to see if some value is able to use a certain method.","position":{"start":{"line":959,"column":5,"offset":32066},"end":{"line":959,"column":85,"offset":32146}}}],"position":{"start":{"line":959,"column":1,"offset":32062},"end":{"line":959,"column":85,"offset":32146}}},{"type":"text","value":"\n"}],"position":{"start":{"line":959,"column":1,"offset":32062},"end":{"line":959,"column":85,"offset":32146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# Try a number - nothing will print out\na = 321\nif hasattr(a, '__len__'):\n    print(len(a))# Try a string - the length will print out (4 in this case)\nb = \"5555\"\nif hasattr(b, '__len__'):\n    print(len(b))\n"}],"position":{"start":{"line":961,"column":1,"offset":32148},"end":{"line":969,"column":4,"offset":32365}}}],"position":{"start":{"line":961,"column":1,"offset":32148},"end":{"line":969,"column":4,"offset":32365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Pass","position":{"start":{"line":971,"column":6,"offset":32372},"end":{"line":971,"column":10,"offset":32376}}}],"position":{"start":{"line":971,"column":4,"offset":32370},"end":{"line":971,"column":12,"offset":32378}}}],"position":{"start":{"line":971,"column":1,"offset":32367},"end":{"line":971,"column":12,"offset":32378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Pass Keyword is required to write the JS equivalent of :","position":{"start":{"line":973,"column":5,"offset":32384},"end":{"line":973,"column":61,"offset":32440}}}],"position":{"start":{"line":973,"column":1,"offset":32380},"end":{"line":973,"column":61,"offset":32440}}},{"type":"text","value":"\n"}],"position":{"start":{"line":973,"column":1,"offset":32380},"end":{"line":973,"column":61,"offset":32440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if (true) {\n}while (true) {}if True:\n  passwhile True:\n  pass\n"}],"position":{"start":{"line":975,"column":1,"offset":32442},"end":{"line":980,"column":4,"offset":32515}}}],"position":{"start":{"line":975,"column":1,"offset":32442},"end":{"line":980,"column":4,"offset":32515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Functions","position":{"start":{"line":982,"column":6,"offset":32522},"end":{"line":982,"column":15,"offset":32531}}}],"position":{"start":{"line":982,"column":4,"offset":32520},"end":{"line":982,"column":17,"offset":32533}}}],"position":{"start":{"line":982,"column":1,"offset":32517},"end":{"line":982,"column":17,"offset":32533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Function definition includes:","position":{"start":{"line":984,"column":7,"offset":32541},"end":{"line":984,"column":36,"offset":32570}}}],"position":{"start":{"line":984,"column":5,"offset":32539},"end":{"line":984,"column":38,"offset":32572}}}],"position":{"start":{"line":984,"column":1,"offset":32535},"end":{"line":984,"column":38,"offset":32572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":985,"column":7,"offset":32579},"end":{"line":985,"column":11,"offset":32583}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"def"}],"position":{"start":{"line":985,"column":11,"offset":32583},"end":{"line":985,"column":16,"offset":32588}}},{"type":"text","value":" keyword","position":{"start":{"line":985,"column":16,"offset":32588},"end":{"line":985,"column":24,"offset":32596}}}],"position":{"start":{"line":985,"column":5,"offset":32577},"end":{"line":985,"column":26,"offset":32598}}}],"position":{"start":{"line":985,"column":1,"offset":32573},"end":{"line":985,"column":26,"offset":32598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The name of the function","position":{"start":{"line":986,"column":7,"offset":32605},"end":{"line":986,"column":31,"offset":32629}}}],"position":{"start":{"line":986,"column":5,"offset":32603},"end":{"line":986,"column":33,"offset":32631}}}],"position":{"start":{"line":986,"column":1,"offset":32599},"end":{"line":986,"column":33,"offset":32631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"A list of parameters enclosed in parentheses.","position":{"start":{"line":987,"column":7,"offset":32638},"end":{"line":987,"column":52,"offset":32683}}}],"position":{"start":{"line":987,"column":5,"offset":32636},"end":{"line":987,"column":54,"offset":32685}}}],"position":{"start":{"line":987,"column":1,"offset":32632},"end":{"line":987,"column":54,"offset":32685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"A colon at the end of the line.","position":{"start":{"line":988,"column":7,"offset":32692},"end":{"line":988,"column":38,"offset":32723}}}],"position":{"start":{"line":988,"column":5,"offset":32690},"end":{"line":988,"column":40,"offset":32725}}}],"position":{"start":{"line":988,"column":1,"offset":32686},"end":{"line":988,"column":40,"offset":32725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"One tab indentation for the code to run.","position":{"start":{"line":989,"column":7,"offset":32732},"end":{"line":989,"column":47,"offset":32772}}}],"position":{"start":{"line":989,"column":5,"offset":32730},"end":{"line":989,"column":49,"offset":32774}}}],"position":{"start":{"line":989,"column":1,"offset":32726},"end":{"line":989,"column":49,"offset":32774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can use default parameters just like in JS","position":{"start":{"line":990,"column":7,"offset":32781},"end":{"line":990,"column":53,"offset":32827}}}],"position":{"start":{"line":990,"column":5,"offset":32779},"end":{"line":990,"column":55,"offset":32829}}}],"position":{"start":{"line":990,"column":1,"offset":32775},"end":{"line":990,"column":55,"offset":32829}}},{"type":"text","value":"\n"}],"position":{"start":{"line":984,"column":1,"offset":32535},"end":{"line":990,"column":55,"offset":32829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"def greeting(name, saying=\"Hello\"):\n    print(saying, name)greeting(\"Monica\")\n# Hello Monicagreeting(\"Barry\", \"Hey\")\n# Hey Barry\n"}],"position":{"start":{"line":992,"column":1,"offset":32831},"end":{"line":997,"column":4,"offset":32971}}}],"position":{"start":{"line":992,"column":1,"offset":32831},"end":{"line":997,"column":4,"offset":32971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Keep in mind, default parameters must always come after regular parameters.","position":{"start":{"line":999,"column":7,"offset":32979},"end":{"line":999,"column":82,"offset":33054}}}],"position":{"start":{"line":999,"column":5,"offset":32977},"end":{"line":999,"column":84,"offset":33056}}}],"position":{"start":{"line":999,"column":1,"offset":32973},"end":{"line":999,"column":84,"offset":33056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"# THIS IS BAD CODE AND WILL NOT RUN\ndef increment(delta=1, value):\n    return delta + value\n"}],"position":{"start":{"line":1001,"column":1,"offset":33058},"end":{"line":1005,"column":4,"offset":33161}}}],"position":{"start":{"line":1001,"column":1,"offset":33058},"end":{"line":1005,"column":4,"offset":33161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"You can specify arguments by name without destructuring in Python.","position":{"start":{"line":1007,"column":6,"offset":33168},"end":{"line":1007,"column":72,"offset":33234}}}],"position":{"start":{"line":1007,"column":5,"offset":33167},"end":{"line":1007,"column":73,"offset":33235}}}],"position":{"start":{"line":1007,"column":1,"offset":33163},"end":{"line":1007,"column":73,"offset":33235}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1007,"column":1,"offset":33163},"end":{"line":1007,"column":73,"offset":33235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"def greeting(name, saying=\"Hello\"):\n    print(saying, name)# name has no default value, so just provide the value\n# saying has a default value, so use a keyword argument\ngreeting(\"Monica\", saying=\"Hi\")\n"}],"position":{"start":{"line":1009,"column":1,"offset":33237},"end":{"line":1014,"column":4,"offset":33450}}}],"position":{"start":{"line":1009,"column":1,"offset":33237},"end":{"line":1014,"column":4,"offset":33450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1016,"column":5,"offset":33456},"end":{"line":1016,"column":9,"offset":33460}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lambda"}],"position":{"start":{"line":1016,"column":9,"offset":33460},"end":{"line":1016,"column":17,"offset":33468}}},{"type":"text","value":" keyword is used to create anonymous functions and are supposed to be ","position":{"start":{"line":1016,"column":17,"offset":33468},"end":{"line":1016,"column":87,"offset":33538}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"one-liners"}],"position":{"start":{"line":1016,"column":87,"offset":33538},"end":{"line":1016,"column":99,"offset":33550}}},{"type":"text","value":".","position":{"start":{"line":1016,"column":99,"offset":33550},"end":{"line":1016,"column":100,"offset":33551}}}],"position":{"start":{"line":1016,"column":1,"offset":33452},"end":{"line":1016,"column":100,"offset":33551}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1016,"column":1,"offset":33452},"end":{"line":1016,"column":100,"offset":33551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toUpper = lambda s: s.upper()"}],"position":{"start":{"line":1018,"column":1,"offset":33553},"end":{"line":1018,"column":32,"offset":33584}}}],"position":{"start":{"line":1018,"column":1,"offset":33553},"end":{"line":1018,"column":32,"offset":33584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Notes","position":{"start":{"line":1020,"column":6,"offset":33591},"end":{"line":1020,"column":11,"offset":33596}}}],"position":{"start":{"line":1020,"column":4,"offset":33589},"end":{"line":1020,"column":13,"offset":33598}}}],"position":{"start":{"line":1020,"column":1,"offset":33586},"end":{"line":1020,"column":13,"offset":33598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Formatted Strings","position":{"start":{"line":1022,"column":7,"offset":33606},"end":{"line":1022,"column":24,"offset":33623}}}],"position":{"start":{"line":1022,"column":5,"offset":33604},"end":{"line":1022,"column":26,"offset":33625}}}],"position":{"start":{"line":1022,"column":1,"offset":33600},"end":{"line":1022,"column":26,"offset":33625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remember that in Python join() is called on a string with an array/list passed in as the argument.Python has a very powerful formatting engine.format() is also applied directly to strings.","position":{"start":{"line":1024,"column":3,"offset":33629},"end":{"line":1024,"column":191,"offset":33817}}}],"position":{"start":{"line":1024,"column":3,"offset":33629},"end":{"line":1024,"column":191,"offset":33817}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1024,"column":1,"offset":33627},"end":{"line":1024,"column":191,"offset":33817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"shopping_list = ['bread','milk','eggs']\nprint(','.join(shopping_list))\n"}],"position":{"start":{"line":1026,"column":1,"offset":33819},"end":{"line":1029,"column":4,"offset":33901}}}],"position":{"start":{"line":1026,"column":1,"offset":33819},"end":{"line":1029,"column":4,"offset":33901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Comma Thousands Separator","position":{"start":{"line":1031,"column":6,"offset":33908},"end":{"line":1031,"column":31,"offset":33933}}}],"position":{"start":{"line":1031,"column":4,"offset":33906},"end":{"line":1031,"column":33,"offset":33935}}}],"position":{"start":{"line":1031,"column":1,"offset":33903},"end":{"line":1031,"column":33,"offset":33935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print('{:,}'.format(1234567890))\n'1,234,567,890'\n"}],"position":{"start":{"line":1033,"column":1,"offset":33937},"end":{"line":1036,"column":4,"offset":33997}}}],"position":{"start":{"line":1033,"column":1,"offset":33937},"end":{"line":1036,"column":4,"offset":33997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Date and Time","position":{"start":{"line":1038,"column":6,"offset":34004},"end":{"line":1038,"column":19,"offset":34017}}}],"position":{"start":{"line":1038,"column":4,"offset":34002},"end":{"line":1038,"column":21,"offset":34019}}}],"position":{"start":{"line":1038,"column":1,"offset":33999},"end":{"line":1038,"column":21,"offset":34019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"d = datetime.datetime(2020, 7, 4, 12, 15, 58)\nprint('{:%Y-%m-%d %H:%M:%S}'.format(d))\n'2020-07-04 12:15:58'\n"}],"position":{"start":{"line":1040,"column":1,"offset":34021},"end":{"line":1044,"column":4,"offset":34140}}}],"position":{"start":{"line":1040,"column":1,"offset":34021},"end":{"line":1044,"column":4,"offset":34140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Percentage","position":{"start":{"line":1046,"column":6,"offset":34147},"end":{"line":1046,"column":16,"offset":34157}}}],"position":{"start":{"line":1046,"column":4,"offset":34145},"end":{"line":1046,"column":18,"offset":34159}}}],"position":{"start":{"line":1046,"column":1,"offset":34142},"end":{"line":1046,"column":18,"offset":34159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"points = 190\ntotal = 220\nprint('Correct answers: {:.2%}'.format(points/total))\nCorrect answers: 86.36%\n"}],"position":{"start":{"line":1048,"column":1,"offset":34161},"end":{"line":1053,"column":4,"offset":34275}}}],"position":{"start":{"line":1048,"column":1,"offset":34161},"end":{"line":1053,"column":4,"offset":34275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Data Tables","position":{"start":{"line":1055,"column":6,"offset":34282},"end":{"line":1055,"column":17,"offset":34293}}}],"position":{"start":{"line":1055,"column":4,"offset":34280},"end":{"line":1055,"column":19,"offset":34295}}}],"position":{"start":{"line":1055,"column":1,"offset":34277},"end":{"line":1055,"column":19,"offset":34295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"width=8\nprint(' decimal hex binary')\nprint('-'*27)\nfor num in range(1,16):\nfor base in 'dXb':\nprint('{0:{width}{base}}'.format(num, base=base, width=width), end=' ')\nprint()\nGetting Input from the Command Line\nPython runs synchronously, all programs and processes will stop when listening for a user input.\nThe input function shows a prompt to a user and waits for them to type 'ENTER'.\nScripts vs Programs\nProgramming Script : A set of code that runs in a linear fashion.\nThe largest difference between scripts and programs is the level of complexity and purpose. Programs typically have many UI's.\n"}],"position":{"start":{"line":1057,"column":1,"offset":34297},"end":{"line":1071,"column":4,"offset":34908}}}],"position":{"start":{"line":1057,"column":1,"offset":34297},"end":{"line":1071,"column":4,"offset":34908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1073,"column":1,"offset":34910},"end":{"line":1073,"column":3,"offset":34912}}},{"type":"text","value":"*","position":{"start":{"line":1073,"column":3,"offset":34912},"end":{"line":1073,"column":5,"offset":34914}}},{"type":"text","value":"Python can be used to display html, css, and JS.","position":{"start":{"line":1073,"column":5,"offset":34914},"end":{"line":1073,"column":53,"offset":34962}}},{"type":"text","value":"*","position":{"start":{"line":1073,"column":53,"offset":34962},"end":{"line":1073,"column":55,"offset":34964}}},{"type":"text","value":"*","position":{"start":{"line":1073,"column":55,"offset":34964},"end":{"line":1073,"column":57,"offset":34966}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"It is common to use Python as an API (Application Programming Interface)","position":{"start":{"line":1073,"column":58,"offset":34967},"end":{"line":1073,"column":130,"offset":35039}}}],"position":{"start":{"line":1073,"column":57,"offset":34966},"end":{"line":1073,"column":131,"offset":35040}}}],"position":{"start":{"line":1073,"column":1,"offset":34910},"end":{"line":1073,"column":131,"offset":35040}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Structured Data","position":{"start":{"line":1075,"column":7,"offset":35048},"end":{"line":1075,"column":22,"offset":35063}}}],"position":{"start":{"line":1075,"column":5,"offset":35046},"end":{"line":1075,"column":24,"offset":35065}}}],"position":{"start":{"line":1075,"column":1,"offset":35042},"end":{"line":1075,"column":24,"offset":35065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sequence : The most basic data structure in Python where the index determines the order.","position":{"start":{"line":1077,"column":7,"offset":35073},"end":{"line":1077,"column":95,"offset":35161}}}],"position":{"start":{"line":1077,"column":5,"offset":35071},"end":{"line":1077,"column":97,"offset":35163}}}],"position":{"start":{"line":1077,"column":1,"offset":35067},"end":{"line":1077,"column":97,"offset":35163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"List-Tuple-Range-Collections : Unordered data structures, hashable values.","position":{"start":{"line":1079,"column":3,"offset":35167},"end":{"line":1079,"column":77,"offset":35241}}}],"position":{"start":{"line":1079,"column":3,"offset":35167},"end":{"line":1079,"column":77,"offset":35241}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1079,"column":1,"offset":35165},"end":{"line":1079,"column":77,"offset":35241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Dictionaries-Sets-Iterable : Generic name for a sequence or collection; any object that can be iterated through.Can be mutable or immutable.Built In Data Types","position":{"start":{"line":1081,"column":7,"offset":35249},"end":{"line":1081,"column":166,"offset":35408}}}],"position":{"start":{"line":1081,"column":5,"offset":35247},"end":{"line":1081,"column":168,"offset":35410}}}],"position":{"start":{"line":1081,"column":1,"offset":35243},"end":{"line":1081,"column":168,"offset":35410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Lists are the python equivalent of arrays.","position":{"start":{"line":1083,"column":6,"offset":35417},"end":{"line":1083,"column":48,"offset":35459}}}],"position":{"start":{"line":1083,"column":4,"offset":35415},"end":{"line":1083,"column":50,"offset":35461}}}],"position":{"start":{"line":1083,"column":1,"offset":35412},"end":{"line":1083,"column":50,"offset":35461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"empty_list = []\ndepartments = ['HR','Development','Sales','Finance','IT','Customer Support']\n"}],"position":{"start":{"line":1085,"column":1,"offset":35463},"end":{"line":1088,"column":4,"offset":35567}}}],"position":{"start":{"line":1085,"column":1,"offset":35463},"end":{"line":1088,"column":4,"offset":35567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can instantiate","position":{"start":{"line":1090,"column":6,"offset":35574},"end":{"line":1090,"column":25,"offset":35593}}}],"position":{"start":{"line":1090,"column":4,"offset":35572},"end":{"line":1090,"column":27,"offset":35595}}}],"position":{"start":{"line":1090,"column":1,"offset":35569},"end":{"line":1090,"column":27,"offset":35595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"specials = list()\n"}],"position":{"start":{"line":1092,"column":1,"offset":35597},"end":{"line":1094,"column":4,"offset":35626}}}],"position":{"start":{"line":1092,"column":1,"offset":35597},"end":{"line":1094,"column":4,"offset":35626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Test if a value is in a list.","position":{"start":{"line":1096,"column":7,"offset":35634},"end":{"line":1096,"column":36,"offset":35663}}}],"position":{"start":{"line":1096,"column":5,"offset":35632},"end":{"line":1096,"column":38,"offset":35665}}}],"position":{"start":{"line":1096,"column":1,"offset":35628},"end":{"line":1096,"column":38,"offset":35665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"print(1 in [1, 2, 3]) #> True\nprint(4 in [1, 2, 3]) #> False\n# Tuples : Very similar to lists, but they are immutable\n"}],"position":{"start":{"line":1098,"column":1,"offset":35667},"end":{"line":1102,"column":4,"offset":35796}}}],"position":{"start":{"line":1098,"column":1,"offset":35667},"end":{"line":1102,"column":4,"offset":35796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Instantiated with parentheses","position":{"start":{"line":1104,"column":7,"offset":35804},"end":{"line":1104,"column":36,"offset":35833}}}],"position":{"start":{"line":1104,"column":5,"offset":35802},"end":{"line":1104,"column":38,"offset":35835}}}],"position":{"start":{"line":1104,"column":1,"offset":35798},"end":{"line":1104,"column":38,"offset":35835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"time_blocks = ('AM','PM')\n"}],"position":{"start":{"line":1106,"column":1,"offset":35837},"end":{"line":1108,"column":4,"offset":35874}}}],"position":{"start":{"line":1106,"column":1,"offset":35837},"end":{"line":1108,"column":4,"offset":35874}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sometimes instantiated without","position":{"start":{"line":1110,"column":7,"offset":35882},"end":{"line":1110,"column":37,"offset":35912}}}],"position":{"start":{"line":1110,"column":5,"offset":35880},"end":{"line":1110,"column":39,"offset":35914}}}],"position":{"start":{"line":1110,"column":1,"offset":35876},"end":{"line":1110,"column":39,"offset":35914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"colors = 'red','blue','green'\nnumbers = 1, 2, 3\n"}],"position":{"start":{"line":1112,"column":1,"offset":35916},"end":{"line":1115,"column":4,"offset":35975}}}],"position":{"start":{"line":1112,"column":1,"offset":35916},"end":{"line":1115,"column":4,"offset":35975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Tuple() built in can be used to convert other data into a tuple","position":{"start":{"line":1117,"column":7,"offset":35983},"end":{"line":1117,"column":70,"offset":36046}}}],"position":{"start":{"line":1117,"column":5,"offset":35981},"end":{"line":1117,"column":72,"offset":36048}}}],"position":{"start":{"line":1117,"column":1,"offset":35977},"end":{"line":1117,"column":72,"offset":36048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"tuple('abc') # returns ('a', 'b', 'c')\ntuple([1,2,3]) # returns (1, 2, 3)\n# Think of tuples as constant variables.\n"}],"position":{"start":{"line":1119,"column":1,"offset":36050},"end":{"line":1123,"column":4,"offset":36176}}}],"position":{"start":{"line":1119,"column":1,"offset":36050},"end":{"line":1123,"column":4,"offset":36176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Ranges : A list of numbers which can't be changed; often used with for loops.","position":{"start":{"line":1125,"column":7,"offset":36184},"end":{"line":1125,"column":84,"offset":36261}}}],"position":{"start":{"line":1125,"column":5,"offset":36182},"end":{"line":1125,"column":86,"offset":36263}}}],"position":{"start":{"line":1125,"column":1,"offset":36178},"end":{"line":1125,"column":86,"offset":36263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Declared using one to three parameters","position":{"start":{"line":1127,"column":3,"offset":36267},"end":{"line":1127,"column":41,"offset":36305}}}],"position":{"start":{"line":1127,"column":1,"offset":36265},"end":{"line":1127,"column":43,"offset":36307}}},{"type":"text","value":".","position":{"start":{"line":1127,"column":43,"offset":36307},"end":{"line":1127,"column":44,"offset":36308}}}],"position":{"start":{"line":1127,"column":1,"offset":36265},"end":{"line":1127,"column":44,"offset":36308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Start : opt. default 0, first # in sequence.Stop : required next number past the last number in the sequence.Step : opt. default 1, difference between each number in the sequence.","position":{"start":{"line":1129,"column":3,"offset":36312},"end":{"line":1129,"column":182,"offset":36491}}}],"position":{"start":{"line":1129,"column":3,"offset":36312},"end":{"line":1129,"column":182,"offset":36491}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1129,"column":1,"offset":36310},"end":{"line":1129,"column":182,"offset":36491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"range(5) # [0, 1, 2, 3, 4]\nrange(1,5) # [1, 2, 3, 4]\nrange(0, 25, 5) # [0, 5, 10, 15, 20]\nrange(0) # [ ]\nfor let (i = 0; i < 5; i++)\nfor let (i = 1; i < 5; i++)\nfor let (i = 0; i < 25; i+=5)\nfor let(i = 0; i = 0; i++)\n# Keep in mind that stop is not included in the range.\n"}],"position":{"start":{"line":1131,"column":1,"offset":36493},"end":{"line":1141,"column":4,"offset":36779}}}],"position":{"start":{"line":1131,"column":1,"offset":36493},"end":{"line":1141,"column":4,"offset":36779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Dictionaries : Mappable collection where a hashable value is used as a key to ref. an object stored in the dictionary.","position":{"start":{"line":1143,"column":7,"offset":36787},"end":{"line":1143,"column":125,"offset":36905}}}],"position":{"start":{"line":1143,"column":5,"offset":36785},"end":{"line":1143,"column":127,"offset":36907}}}],"position":{"start":{"line":1143,"column":1,"offset":36781},"end":{"line":1143,"column":127,"offset":36907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mutable.","position":{"start":{"line":1145,"column":7,"offset":36915},"end":{"line":1145,"column":15,"offset":36923}}}],"position":{"start":{"line":1145,"column":5,"offset":36913},"end":{"line":1145,"column":17,"offset":36925}}}],"position":{"start":{"line":1145,"column":1,"offset":36909},"end":{"line":1145,"column":17,"offset":36925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = {'one':1, 'two':2, 'three':3}\nb = dict(one=1, two=2, three=3)\nc = dict([('two', 2), ('one', 1), ('three', 3)])\n# a, b, and c are all equal\n"}],"position":{"start":{"line":1147,"column":1,"offset":36927},"end":{"line":1152,"column":4,"offset":37081}}}],"position":{"start":{"line":1147,"column":1,"offset":36927},"end":{"line":1152,"column":4,"offset":37081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Declared with curly braces of the built in dict()","position":{"start":{"line":1154,"column":4,"offset":37086},"end":{"line":1154,"column":53,"offset":37135}}}],"position":{"start":{"line":1154,"column":3,"offset":37085},"end":{"line":1154,"column":54,"offset":37136}}}],"position":{"start":{"line":1154,"column":1,"offset":37083},"end":{"line":1154,"column":56,"offset":37138}}}],"position":{"start":{"line":1154,"column":1,"offset":37083},"end":{"line":1154,"column":56,"offset":37138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Benefit of dictionaries in Python is that it doesn't matter how it is defined, if the keys and values are the same the dictionaries are considered equal.","position":{"start":{"line":1156,"column":3,"offset":37142},"end":{"line":1156,"column":156,"offset":37295}}}],"position":{"start":{"line":1156,"column":3,"offset":37142},"end":{"line":1156,"column":156,"offset":37295}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1156,"column":1,"offset":37140},"end":{"line":1156,"column":156,"offset":37295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Use the in operator to see if a key exists in a dictionary.","position":{"start":{"line":1158,"column":3,"offset":37299},"end":{"line":1158,"column":62,"offset":37358}}}],"position":{"start":{"line":1158,"column":1,"offset":37297},"end":{"line":1158,"column":64,"offset":37360}}}],"position":{"start":{"line":1158,"column":1,"offset":37297},"end":{"line":1158,"column":64,"offset":37360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Sets : Unordered collection of distinct objects; objects that need to be hashable.","position":{"start":{"line":1160,"column":3,"offset":37364},"end":{"line":1160,"column":85,"offset":37446}}}],"position":{"start":{"line":1160,"column":1,"offset":37362},"end":{"line":1160,"column":87,"offset":37448}}}],"position":{"start":{"line":1160,"column":1,"offset":37362},"end":{"line":1160,"column":87,"offset":37448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Always be unique, duplicate items are auto dropped from the set.","position":{"start":{"line":1162,"column":3,"offset":37452},"end":{"line":1162,"column":67,"offset":37516}}}],"position":{"start":{"line":1162,"column":3,"offset":37452},"end":{"line":1162,"column":67,"offset":37516}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1162,"column":1,"offset":37450},"end":{"line":1162,"column":67,"offset":37516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Common Uses:","position":{"start":{"line":1164,"column":7,"offset":37524},"end":{"line":1164,"column":19,"offset":37536}}}],"position":{"start":{"line":1164,"column":5,"offset":37522},"end":{"line":1164,"column":21,"offset":37538}}}],"position":{"start":{"line":1164,"column":1,"offset":37518},"end":{"line":1164,"column":21,"offset":37538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Removing DuplicatesMembership TestingMathematical Operators: Intersection, Union, Difference, Symmetric Difference.","position":{"start":{"line":1166,"column":3,"offset":37542},"end":{"line":1166,"column":118,"offset":37657}}}],"position":{"start":{"line":1166,"column":3,"offset":37542},"end":{"line":1166,"column":118,"offset":37657}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1166,"column":1,"offset":37540},"end":{"line":1166,"column":118,"offset":37657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Standard Set is mutable, Python has a immutable version called frozenset.Sets created by putting comma seperated values inside braces:","position":{"start":{"line":1168,"column":3,"offset":37661},"end":{"line":1168,"column":137,"offset":37795}}}],"position":{"start":{"line":1168,"column":1,"offset":37659},"end":{"line":1168,"column":139,"offset":37797}}}],"position":{"start":{"line":1168,"column":1,"offset":37659},"end":{"line":1168,"column":139,"offset":37797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"school_bag = {'book','paper','pencil','pencil','book','book','book','eraser'}\nprint(school_bag)\n"}],"position":{"start":{"line":1170,"column":1,"offset":37799},"end":{"line":1173,"column":4,"offset":37906}}}],"position":{"start":{"line":1170,"column":1,"offset":37799},"end":{"line":1173,"column":4,"offset":37906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Also can use set constructor to automatically put it into a set.","position":{"start":{"line":1175,"column":7,"offset":37914},"end":{"line":1175,"column":71,"offset":37978}}}],"position":{"start":{"line":1175,"column":5,"offset":37912},"end":{"line":1175,"column":73,"offset":37980}}}],"position":{"start":{"line":1175,"column":1,"offset":37908},"end":{"line":1175,"column":73,"offset":37980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"letters = set('abracadabra')\nprint(letters)\n#Built-In Functions\n#Functions using iterables\n"}],"position":{"start":{"line":1177,"column":1,"offset":37982},"end":{"line":1182,"column":4,"offset":38084}}}],"position":{"start":{"line":1177,"column":1,"offset":37982},"end":{"line":1182,"column":4,"offset":38084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"filter(function, iterable) : creates new iterable of the same type which includes each item for which the function returns true.","position":{"start":{"line":1184,"column":3,"offset":38088},"end":{"line":1184,"column":131,"offset":38216}}}],"position":{"start":{"line":1184,"column":1,"offset":38086},"end":{"line":1184,"column":133,"offset":38218}}}],"position":{"start":{"line":1184,"column":1,"offset":38086},"end":{"line":1184,"column":133,"offset":38218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"map(function, iterable) : creates new iterable of the same type which includes the result of calling the function on every item of the iterable.","position":{"start":{"line":1186,"column":3,"offset":38222},"end":{"line":1186,"column":147,"offset":38366}}}],"position":{"start":{"line":1186,"column":1,"offset":38220},"end":{"line":1186,"column":149,"offset":38368}}}],"position":{"start":{"line":1186,"column":1,"offset":38220},"end":{"line":1186,"column":149,"offset":38368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"sorted(iterable, key=None, reverse=False) : creates a new sorted list from the items in the iterable.","position":{"start":{"line":1188,"column":3,"offset":38372},"end":{"line":1188,"column":104,"offset":38473}}}],"position":{"start":{"line":1188,"column":1,"offset":38370},"end":{"line":1188,"column":106,"offset":38475}}}],"position":{"start":{"line":1188,"column":1,"offset":38370},"end":{"line":1188,"column":106,"offset":38475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output is always a list","position":{"start":{"line":1190,"column":3,"offset":38479},"end":{"line":1190,"column":26,"offset":38502}}}],"position":{"start":{"line":1190,"column":1,"offset":38477},"end":{"line":1190,"column":28,"offset":38504}}}],"position":{"start":{"line":1190,"column":1,"offset":38477},"end":{"line":1190,"column":28,"offset":38504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"key: opt function which coverts and item to a value to be compared.","position":{"start":{"line":1192,"column":3,"offset":38508},"end":{"line":1192,"column":70,"offset":38575}}}],"position":{"start":{"line":1192,"column":1,"offset":38506},"end":{"line":1192,"column":72,"offset":38577}}}],"position":{"start":{"line":1192,"column":1,"offset":38506},"end":{"line":1192,"column":72,"offset":38577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"reverse: optional boolean.","position":{"start":{"line":1194,"column":3,"offset":38581},"end":{"line":1194,"column":29,"offset":38607}}}],"position":{"start":{"line":1194,"column":1,"offset":38579},"end":{"line":1194,"column":31,"offset":38609}}}],"position":{"start":{"line":1194,"column":1,"offset":38579},"end":{"line":1194,"column":31,"offset":38609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"enumerate(iterable, start=0) : starts with a sequence and converts it to a series of tuples","position":{"start":{"line":1196,"column":3,"offset":38613},"end":{"line":1196,"column":94,"offset":38704}}}],"position":{"start":{"line":1196,"column":1,"offset":38611},"end":{"line":1196,"column":96,"offset":38706}}}],"position":{"start":{"line":1196,"column":1,"offset":38611},"end":{"line":1196,"column":96,"offset":38706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"quarters = ['First', 'Second', 'Third', 'Fourth']\nprint(enumerate(quarters))\nprint(enumerate(quarters, start=1))\n"}],"position":{"start":{"line":1198,"column":1,"offset":38708},"end":{"line":1202,"column":4,"offset":38832}}}],"position":{"start":{"line":1198,"column":1,"offset":38708},"end":{"line":1202,"column":4,"offset":38832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"(0, 'First'), (1, 'Second'), (2, 'Third'), (3, 'Fourth')","position":{"start":{"line":1204,"column":7,"offset":38840},"end":{"line":1204,"column":63,"offset":38896}}}],"position":{"start":{"line":1204,"column":5,"offset":38838},"end":{"line":1204,"column":65,"offset":38898}}}],"position":{"start":{"line":1204,"column":1,"offset":38834},"end":{"line":1204,"column":65,"offset":38898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth')","position":{"start":{"line":1206,"column":7,"offset":38906},"end":{"line":1206,"column":63,"offset":38962}}}],"position":{"start":{"line":1206,"column":5,"offset":38904},"end":{"line":1206,"column":65,"offset":38964}}}],"position":{"start":{"line":1206,"column":1,"offset":38900},"end":{"line":1206,"column":65,"offset":38964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"zip(","position":{"start":{"line":1208,"column":3,"offset":38968},"end":{"line":1208,"column":7,"offset":38972}}},{"type":"text","value":"*","position":{"start":{"line":1208,"column":7,"offset":38972},"end":{"line":1208,"column":9,"offset":38974}}},{"type":"text","value":"iterables) : creates a zip object filled with tuples that combine 1 to 1 the items in each provided iterable.Functions that analyze iterable","position":{"start":{"line":1208,"column":9,"offset":38974},"end":{"line":1208,"column":149,"offset":39114}}}],"position":{"start":{"line":1208,"column":3,"offset":38968},"end":{"line":1208,"column":149,"offset":39114}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1208,"column":1,"offset":38966},"end":{"line":1208,"column":149,"offset":39114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"len(iterable) : returns the count of the number of items.","position":{"start":{"line":1210,"column":3,"offset":39118},"end":{"line":1210,"column":60,"offset":39175}}}],"position":{"start":{"line":1210,"column":1,"offset":39116},"end":{"line":1210,"column":62,"offset":39177}}}],"position":{"start":{"line":1210,"column":1,"offset":39116},"end":{"line":1210,"column":62,"offset":39177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1212,"column":1,"offset":39179},"end":{"line":1212,"column":3,"offset":39181}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"max(args, key=None) : returns the largest of two or more arguments.","position":{"start":{"line":1212,"column":4,"offset":39182},"end":{"line":1212,"column":71,"offset":39249}}}],"position":{"start":{"line":1212,"column":3,"offset":39181},"end":{"line":1212,"column":72,"offset":39250}}}],"position":{"start":{"line":1212,"column":1,"offset":39179},"end":{"line":1212,"column":72,"offset":39250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"max(iterable, key=None) : returns the largest item in the iterable.","position":{"start":{"line":1214,"column":3,"offset":39254},"end":{"line":1214,"column":70,"offset":39321}}}],"position":{"start":{"line":1214,"column":1,"offset":39252},"end":{"line":1214,"column":72,"offset":39323}}}],"position":{"start":{"line":1214,"column":1,"offset":39252},"end":{"line":1214,"column":72,"offset":39323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"key optional function which converts an item to a value to be compared.min works the same way as max","position":{"start":{"line":1216,"column":2,"offset":39326},"end":{"line":1216,"column":102,"offset":39426}}}],"position":{"start":{"line":1216,"column":1,"offset":39325},"end":{"line":1216,"column":103,"offset":39427}}}],"position":{"start":{"line":1216,"column":1,"offset":39325},"end":{"line":1216,"column":103,"offset":39427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"sum(iterable) : used with a list of numbers to generate the total.","position":{"start":{"line":1218,"column":3,"offset":39431},"end":{"line":1218,"column":69,"offset":39497}}}],"position":{"start":{"line":1218,"column":1,"offset":39429},"end":{"line":1218,"column":71,"offset":39499}}}],"position":{"start":{"line":1218,"column":1,"offset":39429},"end":{"line":1218,"column":71,"offset":39499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"There is a faster way to concatenate an array of strings into one string, so do not use sum for that.","position":{"start":{"line":1220,"column":2,"offset":39502},"end":{"line":1220,"column":103,"offset":39603}}}],"position":{"start":{"line":1220,"column":1,"offset":39501},"end":{"line":1220,"column":104,"offset":39604}}}],"position":{"start":{"line":1220,"column":1,"offset":39501},"end":{"line":1220,"column":104,"offset":39604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"any(iterable) : returns True if any items in the iterable are true.","position":{"start":{"line":1222,"column":3,"offset":39608},"end":{"line":1222,"column":70,"offset":39675}}}],"position":{"start":{"line":1222,"column":1,"offset":39606},"end":{"line":1222,"column":72,"offset":39677}}}],"position":{"start":{"line":1222,"column":1,"offset":39606},"end":{"line":1222,"column":72,"offset":39677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"all(iterable) : returns True is all items in the iterable are true.","position":{"start":{"line":1224,"column":3,"offset":39681},"end":{"line":1224,"column":70,"offset":39748}}}],"position":{"start":{"line":1224,"column":1,"offset":39679},"end":{"line":1224,"column":72,"offset":39750}}}],"position":{"start":{"line":1224,"column":1,"offset":39679},"end":{"line":1224,"column":72,"offset":39750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Working with dictionaries","position":{"start":{"line":1226,"column":6,"offset":39757},"end":{"line":1226,"column":31,"offset":39782}}}],"position":{"start":{"line":1226,"column":4,"offset":39755},"end":{"line":1226,"column":33,"offset":39784}}}],"position":{"start":{"line":1226,"column":1,"offset":39752},"end":{"line":1226,"column":33,"offset":39784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"dir(dictionary) : returns the list of keys in the dictionary.Working with sets","position":{"start":{"line":1228,"column":3,"offset":39788},"end":{"line":1228,"column":81,"offset":39866}}}],"position":{"start":{"line":1228,"column":1,"offset":39786},"end":{"line":1228,"column":83,"offset":39868}}}],"position":{"start":{"line":1228,"column":1,"offset":39786},"end":{"line":1228,"column":83,"offset":39868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1230,"column":1,"offset":39870},"end":{"line":1230,"column":3,"offset":39872}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Union : The pipe | operator or union(sets) function can be used to produce a new set which is a combination of all elements in the provided set.","position":{"start":{"line":1230,"column":4,"offset":39873},"end":{"line":1230,"column":148,"offset":40017}}}],"position":{"start":{"line":1230,"column":3,"offset":39872},"end":{"line":1230,"column":149,"offset":40018}}}],"position":{"start":{"line":1230,"column":1,"offset":39870},"end":{"line":1230,"column":149,"offset":40018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = {1, 2, 3}\nb = {2, 4, 6}\nprint(a | b) # => {1, 2, 3, 4, 6}\n"}],"position":{"start":{"line":1232,"column":1,"offset":40020},"end":{"line":1236,"column":4,"offset":40093}}}],"position":{"start":{"line":1232,"column":1,"offset":40020},"end":{"line":1236,"column":4,"offset":40093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Intersection : The & operator ca be used to produce a new set of only the elements that appear in all sets.","position":{"start":{"line":1238,"column":7,"offset":40101},"end":{"line":1238,"column":114,"offset":40208}}}],"position":{"start":{"line":1238,"column":5,"offset":40099},"end":{"line":1238,"column":116,"offset":40210}}}],"position":{"start":{"line":1238,"column":1,"offset":40095},"end":{"line":1238,"column":116,"offset":40210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"a = {1, 2, 3}\nb = {2, 4, 6}\nprint(a & b) # => {2}\nDifference : The — operator can be used to produce a new set of only the elements that appear in the first set and NOT the others.\n"}],"position":{"start":{"line":1240,"column":1,"offset":40212},"end":{"line":1246,"column":4,"offset":40405}}}],"position":{"start":{"line":1240,"column":1,"offset":40212},"end":{"line":1246,"column":4,"offset":40405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Symmetric Difference : The ^ operator can be used to produce a new set of only the elements that appear in exactly one set and not in both.","position":{"start":{"line":1248,"column":3,"offset":40409},"end":{"line":1248,"column":142,"offset":40548}}}],"position":{"start":{"line":1248,"column":1,"offset":40407},"end":{"line":1248,"column":144,"offset":40550}}}],"position":{"start":{"line":1248,"column":1,"offset":40407},"end":{"line":1248,"column":144,"offset":40550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"a = {1, 2, 3}\nb = {2, 4, 6}\nprint(a — b) # => {1, 3}\nprint(b — a) # => {4, 6}\nprint(a ^ b) # => {1, 3, 4, 6}\n"}],"position":{"start":{"line":1250,"column":1,"offset":40552},"end":{"line":1256,"column":4,"offset":40674}}}],"position":{"start":{"line":1250,"column":1,"offset":40552},"end":{"line":1256,"column":4,"offset":40674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"For StatementsIn python, there is only one for loop.","position":{"start":{"line":1258,"column":6,"offset":40681},"end":{"line":1258,"column":58,"offset":40733}}}],"position":{"start":{"line":1258,"column":4,"offset":40679},"end":{"line":1258,"column":60,"offset":40735}}}],"position":{"start":{"line":1258,"column":1,"offset":40676},"end":{"line":1258,"column":60,"offset":40735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Always Includes:","position":{"start":{"line":1260,"column":1,"offset":40737},"end":{"line":1260,"column":17,"offset":40753}}}],"position":{"start":{"line":1260,"column":1,"offset":40737},"end":{"line":1260,"column":17,"offset":40753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The for keyword2. A variable name3. The 'in' keyword4. An iterable of some kid5. A colon6. On the next line, an indented block of code called the for clause.","position":{"start":{"line":1262,"column":7,"offset":40761},"end":{"line":1262,"column":164,"offset":40918}}}],"position":{"start":{"line":1262,"column":3,"offset":40757},"end":{"line":1262,"column":164,"offset":40918}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1262,"column":3,"offset":40757},"end":{"line":1262,"column":164,"offset":40918}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1262,"column":1,"offset":40755},"end":{"line":1262,"column":164,"offset":40918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can use break and continue statements inside for loops as well.","position":{"start":{"line":1264,"column":3,"offset":40922},"end":{"line":1264,"column":70,"offset":40989}}}],"position":{"start":{"line":1264,"column":1,"offset":40920},"end":{"line":1264,"column":72,"offset":40991}}}],"position":{"start":{"line":1264,"column":1,"offset":40920},"end":{"line":1264,"column":72,"offset":40991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can use the range function as the iterable for the for loop.","position":{"start":{"line":1266,"column":3,"offset":40995},"end":{"line":1266,"column":67,"offset":41059}}}],"position":{"start":{"line":1266,"column":1,"offset":40993},"end":{"line":1266,"column":69,"offset":41061}}}],"position":{"start":{"line":1266,"column":1,"offset":40993},"end":{"line":1266,"column":69,"offset":41061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"print('My name is')\nfor i in range(5):\nprint('Carlita Cinco (' + str(i) + ')')total = 0\nfor num in range(101):\ntotal += num\nprint(total)\nLooping over a list in Python\nfor c in ['a', 'b', 'c']:\nprint(c)lst = [0, 1, 2, 3]\nfor i in lst:\nprint(i)\n"}],"position":{"start":{"line":1268,"column":1,"offset":41063},"end":{"line":1280,"column":4,"offset":41319}}}],"position":{"start":{"line":1268,"column":1,"offset":41063},"end":{"line":1280,"column":4,"offset":41319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Common technique is to use the len() on a pre-defined list with a for loop to iterate over the indices of the list.","position":{"start":{"line":1282,"column":4,"offset":41324},"end":{"line":1282,"column":119,"offset":41439}}}],"position":{"start":{"line":1282,"column":3,"offset":41323},"end":{"line":1282,"column":120,"offset":41440}}}],"position":{"start":{"line":1282,"column":1,"offset":41321},"end":{"line":1282,"column":122,"offset":41442}}}],"position":{"start":{"line":1282,"column":1,"offset":41321},"end":{"line":1282,"column":122,"offset":41442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"supplies = ['pens', 'staplers', 'flame-throwers', 'binders']\nfor i in range(len(supplies)):\nprint('Index ' + str(i) + ' in supplies is: ' + supplies[i])\n"}],"position":{"start":{"line":1284,"column":1,"offset":41444},"end":{"line":1289,"column":4,"offset":41611}}}],"position":{"start":{"line":1284,"column":1,"offset":41444},"end":{"line":1289,"column":4,"offset":41611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1291,"column":1,"offset":41613},"end":{"line":1291,"column":3,"offset":41615}}},{"type":"text","value":"*","position":{"start":{"line":1291,"column":3,"offset":41615},"end":{"line":1291,"column":5,"offset":41617}}},{"type":"text","value":"*","position":{"start":{"line":1291,"column":5,"offset":41617},"end":{"line":1291,"column":7,"offset":41619}}},{"type":"text","value":"*","position":{"start":{"line":1291,"column":7,"offset":41619},"end":{"line":1291,"column":9,"offset":41621}}}],"position":{"start":{"line":1291,"column":1,"offset":41613},"end":{"line":1291,"column":9,"offset":41621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can loop and destructure at the same time.","position":{"start":{"line":1293,"column":3,"offset":41625},"end":{"line":1293,"column":49,"offset":41671}}}],"position":{"start":{"line":1293,"column":1,"offset":41623},"end":{"line":1293,"column":51,"offset":41673}}}],"position":{"start":{"line":1293,"column":1,"offset":41623},"end":{"line":1293,"column":51,"offset":41673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"l = 1, 2], [3, 4], [5, 6\nfor a, b in l:\nprint(a, ', ', b)\n"}],"position":{"start":{"line":1295,"column":1,"offset":41675},"end":{"line":1299,"column":4,"offset":41744}}}],"position":{"start":{"line":1295,"column":1,"offset":41675},"end":{"line":1299,"column":4,"offset":41744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Prints 1, 2Prints 3, 4Prints 5, 6","position":{"start":{"line":1301,"column":3,"offset":41748},"end":{"line":1301,"column":36,"offset":41781}}}],"position":{"start":{"line":1301,"column":3,"offset":41748},"end":{"line":1301,"column":36,"offset":41781}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1301,"column":1,"offset":41746},"end":{"line":1301,"column":36,"offset":41781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"You can use values() and keys() to loop over dictionaries.","position":{"start":{"line":1303,"column":3,"offset":41785},"end":{"line":1303,"column":61,"offset":41843}}}],"position":{"start":{"line":1303,"column":1,"offset":41783},"end":{"line":1303,"column":63,"offset":41845}}}],"position":{"start":{"line":1303,"column":1,"offset":41783},"end":{"line":1303,"column":63,"offset":41845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"spam = {'color': 'red', 'age': 42}\nfor v in spam.values():\nprint(v)\n"}],"position":{"start":{"line":1305,"column":1,"offset":41847},"end":{"line":1309,"column":4,"offset":41926}}}],"position":{"start":{"line":1305,"column":1,"offset":41847},"end":{"line":1309,"column":4,"offset":41926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints red","position":{"start":{"line":1311,"column":2,"offset":41929},"end":{"line":1311,"column":12,"offset":41939}}}],"position":{"start":{"line":1311,"column":1,"offset":41928},"end":{"line":1311,"column":13,"offset":41940}}}],"position":{"start":{"line":1311,"column":1,"offset":41928},"end":{"line":1311,"column":13,"offset":41940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints 42","position":{"start":{"line":1313,"column":2,"offset":41943},"end":{"line":1313,"column":11,"offset":41952}}}],"position":{"start":{"line":1313,"column":1,"offset":41942},"end":{"line":1313,"column":12,"offset":41953}}}],"position":{"start":{"line":1313,"column":1,"offset":41942},"end":{"line":1313,"column":12,"offset":41953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"for k in spam.keys():\nprint(k)\n"}],"position":{"start":{"line":1315,"column":1,"offset":41955},"end":{"line":1318,"column":4,"offset":41997}}}],"position":{"start":{"line":1315,"column":1,"offset":41955},"end":{"line":1318,"column":4,"offset":41997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints color","position":{"start":{"line":1320,"column":2,"offset":42000},"end":{"line":1320,"column":14,"offset":42012}}}],"position":{"start":{"line":1320,"column":1,"offset":41999},"end":{"line":1320,"column":15,"offset":42013}}}],"position":{"start":{"line":1320,"column":1,"offset":41999},"end":{"line":1320,"column":15,"offset":42013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints age","position":{"start":{"line":1322,"column":2,"offset":42016},"end":{"line":1322,"column":12,"offset":42026}}}],"position":{"start":{"line":1322,"column":1,"offset":42015},"end":{"line":1322,"column":13,"offset":42027}}}],"position":{"start":{"line":1322,"column":1,"offset":42015},"end":{"line":1322,"column":13,"offset":42027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"For loops can also iterate over both keys and values.","position":{"start":{"line":1324,"column":3,"offset":42031},"end":{"line":1324,"column":56,"offset":42084}}}],"position":{"start":{"line":1324,"column":1,"offset":42029},"end":{"line":1324,"column":58,"offset":42086}}}],"position":{"start":{"line":1324,"column":1,"offset":42029},"end":{"line":1324,"column":58,"offset":42086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Getting tuples","position":{"start":{"line":1326,"column":3,"offset":42090},"end":{"line":1326,"column":17,"offset":42104}}}],"position":{"start":{"line":1326,"column":1,"offset":42088},"end":{"line":1326,"column":19,"offset":42106}}}],"position":{"start":{"line":1326,"column":1,"offset":42088},"end":{"line":1326,"column":19,"offset":42106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"for i in spam.items():\nprint(i)\n"}],"position":{"start":{"line":1328,"column":1,"offset":42108},"end":{"line":1331,"column":4,"offset":42151}}}],"position":{"start":{"line":1328,"column":1,"offset":42108},"end":{"line":1331,"column":4,"offset":42151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints ('color', 'red')","position":{"start":{"line":1333,"column":2,"offset":42154},"end":{"line":1333,"column":25,"offset":42177}}}],"position":{"start":{"line":1333,"column":1,"offset":42153},"end":{"line":1333,"column":26,"offset":42178}}}],"position":{"start":{"line":1333,"column":1,"offset":42153},"end":{"line":1333,"column":26,"offset":42178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints ('age', 42)","position":{"start":{"line":1335,"column":2,"offset":42181},"end":{"line":1335,"column":20,"offset":42199}}}],"position":{"start":{"line":1335,"column":1,"offset":42180},"end":{"line":1335,"column":21,"offset":42200}}}],"position":{"start":{"line":1335,"column":1,"offset":42180},"end":{"line":1335,"column":21,"offset":42200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Destructuring to values","position":{"start":{"line":1337,"column":2,"offset":42203},"end":{"line":1337,"column":25,"offset":42226}}}],"position":{"start":{"line":1337,"column":1,"offset":42202},"end":{"line":1337,"column":26,"offset":42227}}}],"position":{"start":{"line":1337,"column":1,"offset":42202},"end":{"line":1337,"column":26,"offset":42227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"for k, v in spam.items():\nprint('Key: ' + k + ' Value: ' + str(v))\n"}],"position":{"start":{"line":1339,"column":1,"offset":42229},"end":{"line":1342,"column":4,"offset":42307}}}],"position":{"start":{"line":1339,"column":1,"offset":42229},"end":{"line":1342,"column":4,"offset":42307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints Key: age Value: 42","position":{"start":{"line":1344,"column":2,"offset":42310},"end":{"line":1344,"column":27,"offset":42335}}}],"position":{"start":{"line":1344,"column":1,"offset":42309},"end":{"line":1344,"column":28,"offset":42336}}}],"position":{"start":{"line":1344,"column":1,"offset":42309},"end":{"line":1344,"column":28,"offset":42336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Prints Key: color Value: red","position":{"start":{"line":1346,"column":2,"offset":42339},"end":{"line":1346,"column":30,"offset":42367}}}],"position":{"start":{"line":1346,"column":1,"offset":42338},"end":{"line":1346,"column":31,"offset":42368}}}],"position":{"start":{"line":1346,"column":1,"offset":42338},"end":{"line":1346,"column":31,"offset":42368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Looping over string","position":{"start":{"line":1348,"column":3,"offset":42372},"end":{"line":1348,"column":22,"offset":42391}}}],"position":{"start":{"line":1348,"column":1,"offset":42370},"end":{"line":1348,"column":24,"offset":42393}}}],"position":{"start":{"line":1348,"column":1,"offset":42370},"end":{"line":1348,"column":24,"offset":42393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"for c in \"abcdefg\":\nprint(c)\n"}],"position":{"start":{"line":1350,"column":1,"offset":42395},"end":{"line":1353,"column":4,"offset":42435}}}],"position":{"start":{"line":1350,"column":1,"offset":42395},"end":{"line":1353,"column":4,"offset":42435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"When you order arguments within a function or function call, the args need to occur in a particular order:","position":{"start":{"line":1355,"column":3,"offset":42439},"end":{"line":1355,"column":109,"offset":42545}}}],"position":{"start":{"line":1355,"column":1,"offset":42437},"end":{"line":1355,"column":111,"offset":42547}}}],"position":{"start":{"line":1355,"column":1,"offset":42437},"end":{"line":1355,"column":111,"offset":42547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"formal positional args.","position":{"start":{"line":1357,"column":2,"offset":42550},"end":{"line":1357,"column":25,"offset":42573}}}],"position":{"start":{"line":1357,"column":1,"offset":42549},"end":{"line":1357,"column":26,"offset":42574}}}],"position":{"start":{"line":1357,"column":1,"offset":42549},"end":{"line":1357,"column":26,"offset":42574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"args","position":{"start":{"line":1359,"column":5,"offset":42580},"end":{"line":1359,"column":9,"offset":42584}}}],"position":{"start":{"line":1359,"column":1,"offset":42576},"end":{"line":1359,"column":9,"offset":42584}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1359,"column":1,"offset":42576},"end":{"line":1359,"column":9,"offset":42584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"keyword args with default values","position":{"start":{"line":1361,"column":2,"offset":42587},"end":{"line":1361,"column":34,"offset":42619}}}],"position":{"start":{"line":1361,"column":1,"offset":42586},"end":{"line":1361,"column":35,"offset":42620}}}],"position":{"start":{"line":1361,"column":1,"offset":42586},"end":{"line":1361,"column":35,"offset":42620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1363,"column":5,"offset":42626},"end":{"line":1363,"column":7,"offset":42628}}},{"type":"text","value":"kwargs","position":{"start":{"line":1363,"column":7,"offset":42628},"end":{"line":1363,"column":13,"offset":42634}}}],"position":{"start":{"line":1363,"column":1,"offset":42622},"end":{"line":1363,"column":13,"offset":42634}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1363,"column":1,"offset":42622},"end":{"line":1363,"column":13,"offset":42634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"def example(arg_1, arg_2, *args, **kwargs):\npassdef example2(arg_1, arg_2, *args, kw_1=\"shark\", kw_2=\"blowfish\", **kwargs):\npass\n"}],"position":{"start":{"line":1365,"column":1,"offset":42636},"end":{"line":1370,"column":4,"offset":42777}}}],"position":{"start":{"line":1365,"column":1,"offset":42636},"end":{"line":1370,"column":4,"offset":42777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Importing in Python","position":{"start":{"line":1372,"column":6,"offset":42784},"end":{"line":1372,"column":25,"offset":42803}}}],"position":{"start":{"line":1372,"column":4,"offset":42782},"end":{"line":1372,"column":27,"offset":42805}}}],"position":{"start":{"line":1372,"column":1,"offset":42779},"end":{"line":1372,"column":27,"offset":42805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Modules are similar to packages in Node.js","position":{"start":{"line":1374,"column":3,"offset":42809},"end":{"line":1374,"column":45,"offset":42851}}}],"position":{"start":{"line":1374,"column":1,"offset":42807},"end":{"line":1374,"column":47,"offset":42853}}},{"type":"text","value":"Come in different types:","position":{"start":{"line":1374,"column":47,"offset":42853},"end":{"line":1374,"column":71,"offset":42877}}}],"position":{"start":{"line":1374,"column":1,"offset":42807},"end":{"line":1374,"column":71,"offset":42877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Built-In,","position":{"start":{"line":1376,"column":1,"offset":42879},"end":{"line":1376,"column":10,"offset":42888}}}],"position":{"start":{"line":1376,"column":1,"offset":42879},"end":{"line":1376,"column":10,"offset":42888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Third-Party,","position":{"start":{"line":1378,"column":1,"offset":42890},"end":{"line":1378,"column":13,"offset":42902}}}],"position":{"start":{"line":1378,"column":1,"offset":42890},"end":{"line":1378,"column":13,"offset":42902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Custom.","position":{"start":{"line":1380,"column":1,"offset":42904},"end":{"line":1380,"column":8,"offset":42911}}}],"position":{"start":{"line":1380,"column":1,"offset":42904},"end":{"line":1380,"column":8,"offset":42911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"All loaded using import statements.","position":{"start":{"line":1382,"column":3,"offset":42915},"end":{"line":1382,"column":38,"offset":42950}}}],"position":{"start":{"line":1382,"column":1,"offset":42913},"end":{"line":1382,"column":40,"offset":42952}}}],"position":{"start":{"line":1382,"column":1,"offset":42913},"end":{"line":1382,"column":40,"offset":42952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Terms","position":{"start":{"line":1384,"column":6,"offset":42959},"end":{"line":1384,"column":11,"offset":42964}}}],"position":{"start":{"line":1384,"column":4,"offset":42957},"end":{"line":1384,"column":13,"offset":42966}}}],"position":{"start":{"line":1384,"column":1,"offset":42954},"end":{"line":1384,"column":13,"offset":42966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"module : Python code in a separate file.package : Path to a directory that contains ","position":{"start":{"line":1386,"column":3,"offset":42970},"end":{"line":1386,"column":87,"offset":43054}}},{"type":"element","tagName":"a","properties":{"href":"http://modules.init.py"},"children":[{"type":"text","value":"modules.init.py","position":{"start":{"line":1386,"column":88,"offset":43055},"end":{"line":1386,"column":103,"offset":43070}}}],"position":{"start":{"line":1386,"column":87,"offset":43054},"end":{"line":1386,"column":128,"offset":43095}}},{"type":"text","value":" : Default file for a package.submodule : Another file in a module's folder.function : Function in a module.","position":{"start":{"line":1386,"column":128,"offset":43095},"end":{"line":1386,"column":236,"offset":43203}}}],"position":{"start":{"line":1386,"column":3,"offset":42970},"end":{"line":1386,"column":236,"offset":43203}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1386,"column":1,"offset":42968},"end":{"line":1386,"column":236,"offset":43203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"A module can be any file but it is usually created by placing a special file","position":{"start":{"line":1388,"column":3,"offset":43207},"end":{"line":1388,"column":79,"offset":43283}}}],"position":{"start":{"line":1388,"column":1,"offset":43205},"end":{"line":1388,"column":81,"offset":43285}}},{"type":"text","value":" ","position":{"start":{"line":1388,"column":81,"offset":43285},"end":{"line":1388,"column":82,"offset":43286}}},{"type":"element","tagName":"a","properties":{"href":"http://init.py"},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"init.py","position":{"start":{"line":1388,"column":85,"offset":43289},"end":{"line":1388,"column":92,"offset":43296}}}],"position":{"start":{"line":1388,"column":83,"offset":43287},"end":{"line":1388,"column":94,"offset":43298}}}],"position":{"start":{"line":1388,"column":82,"offset":43286},"end":{"line":1388,"column":111,"offset":43315}}},{"type":"text","value":" ","position":{"start":{"line":1388,"column":111,"offset":43315},"end":{"line":1388,"column":112,"offset":43316}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"into a folder. pic","position":{"start":{"line":1388,"column":114,"offset":43318},"end":{"line":1388,"column":132,"offset":43336}}}],"position":{"start":{"line":1388,"column":112,"offset":43316},"end":{"line":1388,"column":134,"offset":43338}}}],"position":{"start":{"line":1388,"column":1,"offset":43205},"end":{"line":1388,"column":134,"offset":43338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Try to avoid importing with wildcards in Python.","position":{"start":{"line":1390,"column":2,"offset":43341},"end":{"line":1390,"column":50,"offset":43389}}}],"position":{"start":{"line":1390,"column":1,"offset":43340},"end":{"line":1390,"column":51,"offset":43390}}}],"position":{"start":{"line":1390,"column":1,"offset":43340},"end":{"line":1390,"column":51,"offset":43390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Use multiple lines for clarity when importing.","position":{"start":{"line":1392,"column":2,"offset":43393},"end":{"line":1392,"column":48,"offset":43439}}}],"position":{"start":{"line":1392,"column":1,"offset":43392},"end":{"line":1392,"column":49,"offset":43440}}}],"position":{"start":{"line":1392,"column":1,"offset":43392},"end":{"line":1392,"column":49,"offset":43440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"from urllib.request import (\nHTTPDefaultErrorHandler as ErrorHandler,\nHTTPRedirectHandler as RedirectHandler,\nRequest,\npathname2url,\nurl2pathname,\nurlopen,\n)\n"}],"position":{"start":{"line":1394,"column":1,"offset":43442},"end":{"line":1403,"column":4,"offset":43611}}}],"position":{"start":{"line":1394,"column":1,"offset":43442},"end":{"line":1403,"column":4,"offset":43611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Watching Out for Python 2","position":{"start":{"line":1405,"column":6,"offset":43618},"end":{"line":1405,"column":31,"offset":43643}}}],"position":{"start":{"line":1405,"column":4,"offset":43616},"end":{"line":1405,"column":33,"offset":43645}}}],"position":{"start":{"line":1405,"column":1,"offset":43613},"end":{"line":1405,"column":33,"offset":43645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python 3 removed <> and only uses !=","position":{"start":{"line":1407,"column":3,"offset":43649},"end":{"line":1407,"column":39,"offset":43685}}}],"position":{"start":{"line":1407,"column":1,"offset":43647},"end":{"line":1407,"column":41,"offset":43687}}}],"position":{"start":{"line":1407,"column":1,"offset":43647},"end":{"line":1407,"column":41,"offset":43687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"format() was introduced with P3","position":{"start":{"line":1409,"column":3,"offset":43691},"end":{"line":1409,"column":34,"offset":43722}}}],"position":{"start":{"line":1409,"column":1,"offset":43689},"end":{"line":1409,"column":36,"offset":43724}}}],"position":{"start":{"line":1409,"column":1,"offset":43689},"end":{"line":1409,"column":36,"offset":43724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"All strings in P3 are unicode and encoded.md5 was removed.","position":{"start":{"line":1411,"column":3,"offset":43728},"end":{"line":1411,"column":61,"offset":43786}}}],"position":{"start":{"line":1411,"column":1,"offset":43726},"end":{"line":1411,"column":63,"offset":43788}}}],"position":{"start":{"line":1411,"column":1,"offset":43726},"end":{"line":1411,"column":63,"offset":43788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ConfigParser was renamed to configparsersets were killed in favor of set() class.","position":{"start":{"line":1413,"column":3,"offset":43792},"end":{"line":1413,"column":84,"offset":43873}}}],"position":{"start":{"line":1413,"column":1,"offset":43790},"end":{"line":1413,"column":86,"offset":43875}}}],"position":{"start":{"line":1413,"column":1,"offset":43790},"end":{"line":1413,"column":86,"offset":43875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"print was a statement in P2, but is a function in P3.","position":{"start":{"line":1415,"column":7,"offset":43883},"end":{"line":1415,"column":60,"offset":43936}}}],"position":{"start":{"line":1415,"column":5,"offset":43881},"end":{"line":1415,"column":62,"offset":43938}}}],"position":{"start":{"line":1415,"column":1,"offset":43877},"end":{"line":1415,"column":62,"offset":43938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/bgoonz/82154f50603f73826c27377ebaa498b5#file-python-study-guide-py"},"children":[{"type":"text","value":"https://gist.github.com/bgoonz/82154f50603f73826c27377ebaa498b5#file-python-study-guide-py","position":{"start":{"line":1417,"column":2,"offset":43941},"end":{"line":1417,"column":92,"offset":44031}}}],"position":{"start":{"line":1417,"column":1,"offset":43940},"end":{"line":1417,"column":93,"offset":44032}}}],"position":{"start":{"line":1417,"column":1,"offset":43940},"end":{"line":1417,"column":93,"offset":44032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/bgoonz/282774d28326ff83d8b42ae77ab1fee3#file-python-cheatsheet-py"},"children":[{"type":"text","value":"https://gist.github.com/bgoonz/282774d28326ff83d8b42ae77ab1fee3#file-python-cheatsheet-py","position":{"start":{"line":1419,"column":2,"offset":44035},"end":{"line":1419,"column":91,"offset":44124}}}],"position":{"start":{"line":1419,"column":1,"offset":44034},"end":{"line":1419,"column":92,"offset":44125}}}],"position":{"start":{"line":1419,"column":1,"offset":44034},"end":{"line":1419,"column":92,"offset":44125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://gist.github.com/bgoonz/999163a278b987fe47fb247fd4d66904#file-python-cheat-sheet-md"},"children":[{"type":"text","value":"https://gist.github.com/bgoonz/999163a278b987fe47fb247fd4d66904#file-python-cheat-sheet-md","position":{"start":{"line":1421,"column":2,"offset":44128},"end":{"line":1421,"column":92,"offset":44218}}}],"position":{"start":{"line":1421,"column":1,"offset":44127},"end":{"line":1421,"column":93,"offset":44219}}}],"position":{"start":{"line":1421,"column":1,"offset":44127},"end":{"line":1421,"column":93,"offset":44219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/be5715e2-c834-458f-8c5b-ea185717fe37/Untitled.png","alt":"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/be5715e2-c834-458f-8c5b-ea185717fe37/Untitled.png"},"children":[],"position":{"start":{"line":1423,"column":1,"offset":44221},"end":{"line":1423,"column":224,"offset":44444}}}],"position":{"start":{"line":1423,"column":1,"offset":44221},"end":{"line":1423,"column":224,"offset":44444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Built-in Functions","position":{"start":{"line":1425,"column":4,"offset":44449},"end":{"line":1425,"column":22,"offset":44467}}}],"position":{"start":{"line":1425,"column":1,"offset":44446},"end":{"line":1425,"column":22,"offset":44467}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1426,"column":1,"offset":44468}}}}