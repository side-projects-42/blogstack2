{"expireTime":9007200914465209000,"key":"transformer-remark-markdown-html-ast-450d30557c7bda29718ac619bb40a8f5--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Core Concept Review","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":23,"offset":24}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":23,"offset":24}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":5,"column":3,"offset":28},"end":{"line":5,"column":16,"offset":41}}}],"position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":16,"offset":41}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"index","position":{"start":{"line":7,"column":3,"offset":45},"end":{"line":7,"column":8,"offset":50}}}],"position":{"start":{"line":7,"column":1,"offset":43},"end":{"line":7,"column":8,"offset":50}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":9,"column":1,"offset":52},"end":{"line":9,"column":175,"offset":226}}}],"position":{"start":{"line":9,"column":1,"offset":52},"end":{"line":9,"column":175,"offset":226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":11,"column":1,"offset":228},"end":{"line":11,"column":319,"offset":546}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/"},"children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":11,"column":320,"offset":547},"end":{"line":11,"column":355,"offset":582}}}],"position":{"start":{"line":11,"column":319,"offset":546},"end":{"line":11,"column":388,"offset":615}}},{"type":"text","value":" (MDN).","position":{"start":{"line":11,"column":388,"offset":615},"end":{"line":11,"column":395,"offset":622}}}],"position":{"start":{"line":11,"column":1,"offset":228},"end":{"line":11,"column":395,"offset":622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":13,"column":4,"offset":627},"end":{"line":13,"column":11,"offset":634}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":13,"column":11,"offset":634},"end":{"line":13,"column":18,"offset":641}}},{"type":"text","value":" and ","position":{"start":{"line":13,"column":18,"offset":641},"end":{"line":13,"column":23,"offset":646}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":13,"column":23,"offset":646},"end":{"line":13,"column":28,"offset":651}}},{"type":"text","value":" over ","position":{"start":{"line":13,"column":28,"offset":651},"end":{"line":13,"column":34,"offset":657}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":13,"column":34,"offset":657},"end":{"line":13,"column":39,"offset":662}}}],"position":{"start":{"line":13,"column":1,"offset":624},"end":{"line":13,"column":39,"offset":662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":15,"column":1,"offset":664},"end":{"line":15,"column":99,"offset":762}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":15,"column":99,"offset":762},"end":{"line":15,"column":104,"offset":767}}},{"type":"text","value":":","position":{"start":{"line":15,"column":104,"offset":767},"end":{"line":15,"column":105,"offset":768}}}],"position":{"start":{"line":15,"column":1,"offset":664},"end":{"line":15,"column":105,"offset":768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nar myVariable = 5;\n"}],"position":{"start":{"line":17,"column":1,"offset":770},"end":{"line":20,"column":4,"offset":801}}}],"position":{"start":{"line":17,"column":1,"offset":770},"end":{"line":20,"column":4,"offset":801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both the ","position":{"start":{"line":22,"column":1,"offset":803},"end":{"line":22,"column":10,"offset":812}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":22,"column":10,"offset":812},"end":{"line":22,"column":17,"offset":819}}},{"type":"text","value":" and ","position":{"start":{"line":22,"column":17,"offset":819},"end":{"line":22,"column":22,"offset":824}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":22,"column":22,"offset":824},"end":{"line":22,"column":27,"offset":829}}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":22,"column":27,"offset":829},"end":{"line":22,"column":91,"offset":893}}}],"position":{"start":{"line":22,"column":1,"offset":803},"end":{"line":22,"column":91,"offset":893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":24,"column":1,"offset":895},"end":{"line":24,"column":5,"offset":899}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":24,"column":5,"offset":899},"end":{"line":24,"column":12,"offset":906}}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":24,"column":12,"offset":906},"end":{"line":24,"column":67,"offset":961}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":24,"column":67,"offset":961},"end":{"line":24,"column":74,"offset":968}}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":24,"column":74,"offset":968},"end":{"line":24,"column":211,"offset":1105}}}],"position":{"start":{"line":24,"column":1,"offset":895},"end":{"line":24,"column":211,"offset":1105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":26,"column":1,"offset":1107},"end":{"line":26,"column":42,"offset":1148}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":26,"column":42,"offset":1148},"end":{"line":26,"column":47,"offset":1153}}},{"type":"text","value":".","position":{"start":{"line":26,"column":47,"offset":1153},"end":{"line":26,"column":48,"offset":1154}}}],"position":{"start":{"line":26,"column":1,"offset":1107},"end":{"line":26,"column":48,"offset":1154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":28,"column":1,"offset":1156},"end":{"line":28,"column":25,"offset":1180}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":28,"column":25,"offset":1180},"end":{"line":28,"column":32,"offset":1187}}},{"type":"text","value":" and ","position":{"start":{"line":28,"column":32,"offset":1187},"end":{"line":28,"column":37,"offset":1192}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":28,"column":37,"offset":1192},"end":{"line":28,"column":42,"offset":1197}}},{"type":"text","value":" instead of ","position":{"start":{"line":28,"column":42,"offset":1197},"end":{"line":28,"column":54,"offset":1209}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":28,"column":54,"offset":1209},"end":{"line":28,"column":59,"offset":1214}}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":28,"column":59,"offset":1214},"end":{"line":28,"column":106,"offset":1261}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":28,"column":106,"offset":1261},"end":{"line":28,"column":113,"offset":1268}}},{"type":"text","value":", both ","position":{"start":{"line":28,"column":113,"offset":1268},"end":{"line":28,"column":120,"offset":1275}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":28,"column":120,"offset":1275},"end":{"line":28,"column":127,"offset":1282}}},{"type":"text","value":" and ","position":{"start":{"line":28,"column":127,"offset":1282},"end":{"line":28,"column":132,"offset":1287}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":28,"column":132,"offset":1287},"end":{"line":28,"column":137,"offset":1292}}},{"type":"text","value":" are ","position":{"start":{"line":28,"column":137,"offset":1292},"end":{"line":28,"column":142,"offset":1297}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"block scoped","position":{"start":{"line":28,"column":143,"offset":1298},"end":{"line":28,"column":155,"offset":1310}}}],"position":{"start":{"line":28,"column":142,"offset":1297},"end":{"line":28,"column":156,"offset":1311}}},{"type":"text","value":" as opposed to ","position":{"start":{"line":28,"column":156,"offset":1311},"end":{"line":28,"column":171,"offset":1326}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function scoped","position":{"start":{"line":28,"column":172,"offset":1327},"end":{"line":28,"column":187,"offset":1342}}}],"position":{"start":{"line":28,"column":171,"offset":1326},"end":{"line":28,"column":188,"offset":1343}}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":28,"column":188,"offset":1343},"end":{"line":28,"column":234,"offset":1389}}}],"position":{"start":{"line":28,"column":1,"offset":1156},"end":{"line":28,"column":234,"offset":1389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":30,"column":4,"offset":1394},"end":{"line":30,"column":19,"offset":1409}}}],"position":{"start":{"line":30,"column":1,"offset":1391},"end":{"line":30,"column":19,"offset":1409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":32,"column":1,"offset":1411},"end":{"line":32,"column":121,"offset":1531}}}],"position":{"start":{"line":32,"column":1,"offset":1411},"end":{"line":32,"column":121,"offset":1531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nonst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];\n"}],"position":{"start":{"line":34,"column":1,"offset":1533},"end":{"line":40,"column":4,"offset":1634}}}],"position":{"start":{"line":34,"column":1,"offset":1533},"end":{"line":40,"column":4,"offset":1634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":42,"column":1,"offset":1636},"end":{"line":42,"column":116,"offset":1751}}}],"position":{"start":{"line":42,"column":1,"offset":1636},"end":{"line":42,"column":116,"offset":1751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);\n"}],"position":{"start":{"line":44,"column":1,"offset":1753},"end":{"line":51,"column":4,"offset":1938}}}],"position":{"start":{"line":44,"column":1,"offset":1753},"end":{"line":51,"column":4,"offset":1938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":53,"column":1,"offset":1940},"end":{"line":53,"column":45,"offset":1984}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}],"position":{"start":{"line":53,"column":45,"offset":1984},"end":{"line":53,"column":53,"offset":1992}}},{"type":"text","value":" for the function.","position":{"start":{"line":53,"column":53,"offset":1992},"end":{"line":53,"column":71,"offset":2010}}}],"position":{"start":{"line":53,"column":1,"offset":1940},"end":{"line":53,"column":71,"offset":2010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, if we write a function body that is only a single line (or single expression) we can use parentheses to delimit it:","position":{"start":{"line":55,"column":1,"offset":2012},"end":{"line":55,"column":125,"offset":2136}}}],"position":{"start":{"line":55,"column":1,"offset":2012},"end":{"line":55,"column":125,"offset":2136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');\n"}],"position":{"start":{"line":57,"column":1,"offset":2138},"end":{"line":60,"column":4,"offset":2248}}}],"position":{"start":{"line":57,"column":1,"offset":2138},"end":{"line":60,"column":4,"offset":2248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":62,"column":1,"offset":2250},"end":{"line":62,"column":23,"offset":2272}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}],"position":{"start":{"line":62,"column":23,"offset":2272},"end":{"line":62,"column":31,"offset":2280}}},{"type":"text","value":" as it's implied.","position":{"start":{"line":62,"column":31,"offset":2280},"end":{"line":62,"column":48,"offset":2297}}}],"position":{"start":{"line":62,"column":1,"offset":2250},"end":{"line":62,"column":48,"offset":2297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":64,"column":1,"offset":2299},"end":{"line":64,"column":70,"offset":2368}}}],"position":{"start":{"line":64,"column":1,"offset":2299},"end":{"line":64,"column":70,"offset":2368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst pops = cities.map((city) => city.pop);\nconsole.log(pops);\n"}],"position":{"start":{"line":66,"column":1,"offset":2370},"end":{"line":70,"column":4,"offset":2446}}}],"position":{"start":{"line":66,"column":1,"offset":2370},"end":{"line":70,"column":4,"offset":2446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":72,"column":1,"offset":2448},"end":{"line":72,"column":110,"offset":2557}}}],"position":{"start":{"line":72,"column":1,"offset":2448},"end":{"line":72,"column":110,"offset":2557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});\n"}],"position":{"start":{"line":74,"column":1,"offset":2559},"end":{"line":79,"column":4,"offset":2645}}}],"position":{"start":{"line":74,"column":1,"offset":2559},"end":{"line":79,"column":4,"offset":2645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":81,"column":1,"offset":2647},"end":{"line":81,"column":61,"offset":2707}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":81,"column":61,"offset":2707},"end":{"line":81,"column":67,"offset":2713}}},{"type":"text","value":" object.","position":{"start":{"line":81,"column":67,"offset":2713},"end":{"line":81,"column":75,"offset":2721}}}],"position":{"start":{"line":81,"column":1,"offset":2647},"end":{"line":81,"column":75,"offset":2721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The traditional JavaScript function declaration syntax (","position":{"start":{"line":83,"column":1,"offset":2723},"end":{"line":83,"column":57,"offset":2779}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function () {}"}],"position":{"start":{"line":83,"column":57,"offset":2779},"end":{"line":83,"column":73,"offset":2795}}},{"type":"text","value":") will bind ","position":{"start":{"line":83,"column":73,"offset":2795},"end":{"line":83,"column":85,"offset":2807}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":83,"column":85,"offset":2807},"end":{"line":83,"column":91,"offset":2813}}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":83,"column":91,"offset":2813},"end":{"line":83,"column":209,"offset":2931}}}],"position":{"start":{"line":83,"column":1,"offset":2723},"end":{"line":83,"column":209,"offset":2931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nunction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"}],"position":{"start":{"line":85,"column":1,"offset":2933},"end":{"line":115,"column":4,"offset":3424}}}],"position":{"start":{"line":85,"column":1,"offset":2933},"end":{"line":115,"column":4,"offset":3424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The method ","position":{"start":{"line":117,"column":1,"offset":3426},"end":{"line":117,"column":12,"offset":3437}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printSongs()"}],"position":{"start":{"line":117,"column":12,"offset":3437},"end":{"line":117,"column":26,"offset":3451}}},{"type":"text","value":" iterates over ","position":{"start":{"line":117,"column":26,"offset":3451},"end":{"line":117,"column":41,"offset":3466}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.songs"}],"position":{"start":{"line":117,"column":41,"offset":3466},"end":{"line":117,"column":53,"offset":3478}}},{"type":"text","value":" with ","position":{"start":{"line":117,"column":53,"offset":3478},"end":{"line":117,"column":59,"offset":3484}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"forEach()"}],"position":{"start":{"line":117,"column":59,"offset":3484},"end":{"line":117,"column":70,"offset":3495}}},{"type":"text","value":". In this context, ","position":{"start":{"line":117,"column":70,"offset":3495},"end":{"line":117,"column":89,"offset":3514}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":117,"column":89,"offset":3514},"end":{"line":117,"column":95,"offset":3520}}},{"type":"text","value":" is bound to the object (","position":{"start":{"line":117,"column":95,"offset":3520},"end":{"line":117,"column":120,"offset":3545}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jukebox"}],"position":{"start":{"line":117,"column":120,"offset":3545},"end":{"line":117,"column":129,"offset":3554}}},{"type":"text","value":") as expected. However, the anonymous function passed to ","position":{"start":{"line":117,"column":129,"offset":3554},"end":{"line":117,"column":186,"offset":3611}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"forEach()"}],"position":{"start":{"line":117,"column":186,"offset":3611},"end":{"line":117,"column":197,"offset":3622}}},{"type":"text","value":" binds its internal ","position":{"start":{"line":117,"column":197,"offset":3622},"end":{"line":117,"column":217,"offset":3642}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":117,"column":217,"offset":3642},"end":{"line":117,"column":223,"offset":3648}}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":117,"column":223,"offset":3648},"end":{"line":117,"column":255,"offset":3680}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.printSong(song)"}],"position":{"start":{"line":117,"column":255,"offset":3680},"end":{"line":117,"column":277,"offset":3702}}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":117,"column":277,"offset":3702},"end":{"line":117,"column":333,"offset":3758}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":117,"column":334,"offset":3759},"end":{"line":117,"column":337,"offset":3762}}}],"position":{"start":{"line":117,"column":333,"offset":3758},"end":{"line":117,"column":338,"offset":3763}}},{"type":"text","value":" the method on ","position":{"start":{"line":117,"column":338,"offset":3763},"end":{"line":117,"column":353,"offset":3778}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jukebox"}],"position":{"start":{"line":117,"column":353,"offset":3778},"end":{"line":117,"column":362,"offset":3787}}},{"type":"text","value":".","position":{"start":{"line":117,"column":362,"offset":3787},"end":{"line":117,"column":363,"offset":3788}}}],"position":{"start":{"line":117,"column":1,"offset":3426},"end":{"line":117,"column":363,"offset":3788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":119,"column":1,"offset":3790},"end":{"line":119,"column":119,"offset":3908}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"capturing the ","position":{"start":{"line":119,"column":121,"offset":3910},"end":{"line":119,"column":135,"offset":3924}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":119,"column":135,"offset":3924},"end":{"line":119,"column":141,"offset":3930}}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":119,"column":141,"offset":3930},"end":{"line":119,"column":172,"offset":3961}}}],"position":{"start":{"line":119,"column":119,"offset":3908},"end":{"line":119,"column":174,"offset":3963}}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":119,"column":174,"offset":3963},"end":{"line":119,"column":204,"offset":3993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printSongs()"}],"position":{"start":{"line":119,"column":204,"offset":3993},"end":{"line":119,"column":218,"offset":4007}}},{"type":"text","value":" has the expected result:","position":{"start":{"line":119,"column":218,"offset":4007},"end":{"line":119,"column":243,"offset":4032}}}],"position":{"start":{"line":119,"column":1,"offset":3790},"end":{"line":119,"column":243,"offset":4032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"}],"position":{"start":{"line":121,"column":1,"offset":4034},"end":{"line":132,"column":4,"offset":4176}}}],"position":{"start":{"line":121,"column":1,"offset":4034},"end":{"line":132,"column":4,"offset":4176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":134,"column":1,"offset":4178},"end":{"line":134,"column":89,"offset":4266}}}],"position":{"start":{"line":134,"column":1,"offset":4178},"end":{"line":134,"column":89,"offset":4266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Modules","position":{"start":{"line":136,"column":4,"offset":4271},"end":{"line":136,"column":11,"offset":4278}}}],"position":{"start":{"line":136,"column":1,"offset":4268},"end":{"line":136,"column":11,"offset":4278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":138,"column":1,"offset":4280},"end":{"line":138,"column":41,"offset":4320}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import"}],"position":{"start":{"line":138,"column":41,"offset":4320},"end":{"line":138,"column":49,"offset":4328}}},{"type":"text","value":"/","position":{"start":{"line":138,"column":49,"offset":4328},"end":{"line":138,"column":50,"offset":4329}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":138,"column":50,"offset":4329},"end":{"line":138,"column":58,"offset":4337}}},{"type":"text","value":" syntax.","position":{"start":{"line":138,"column":58,"offset":4337},"end":{"line":138,"column":66,"offset":4345}}}],"position":{"start":{"line":138,"column":1,"offset":4280},"end":{"line":138,"column":66,"offset":4345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Named exports","position":{"start":{"line":140,"column":3,"offset":4349},"end":{"line":140,"column":16,"offset":4362}}}],"position":{"start":{"line":140,"column":1,"offset":4347},"end":{"line":140,"column":18,"offset":4364}}}],"position":{"start":{"line":140,"column":1,"offset":4347},"end":{"line":140,"column":18,"offset":4364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":142,"column":1,"offset":4366},"end":{"line":142,"column":30,"offset":4395}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":142,"column":30,"offset":4395},"end":{"line":142,"column":38,"offset":4403}}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":142,"column":38,"offset":4403},"end":{"line":142,"column":142,"offset":4507}}}],"position":{"start":{"line":142,"column":1,"offset":4366},"end":{"line":142,"column":142,"offset":4507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nexport const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n"}],"position":{"start":{"line":144,"column":1,"offset":4509},"end":{"line":150,"column":4,"offset":4672}}}],"position":{"start":{"line":144,"column":1,"offset":4509},"end":{"line":150,"column":4,"offset":4672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":152,"column":1,"offset":4674},"end":{"line":152,"column":61,"offset":4734}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import"}],"position":{"start":{"line":152,"column":61,"offset":4734},"end":{"line":152,"column":69,"offset":4742}}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":152,"column":69,"offset":4742},"end":{"line":152,"column":226,"offset":4899}}}],"position":{"start":{"line":152,"column":1,"offset":4674},"end":{"line":152,"column":226,"offset":4899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nimport { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();\n"}],"position":{"start":{"line":154,"column":1,"offset":4901},"end":{"line":160,"column":4,"offset":4978}}}],"position":{"start":{"line":154,"column":1,"offset":4901},"end":{"line":160,"column":4,"offset":4978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":162,"column":1,"offset":4980},"end":{"line":162,"column":36,"offset":5015}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":162,"column":37,"offset":5016},"end":{"line":162,"column":40,"offset":5019}}}],"position":{"start":{"line":162,"column":36,"offset":5015},"end":{"line":162,"column":41,"offset":5020}}},{"type":"text","value":" exported (","position":{"start":{"line":162,"column":41,"offset":5020},"end":{"line":162,"column":52,"offset":5031}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"saySomething"}],"position":{"start":{"line":162,"column":52,"offset":5031},"end":{"line":162,"column":66,"offset":5045}}},{"type":"text","value":") is unavailable outside of the module.","position":{"start":{"line":162,"column":66,"offset":5045},"end":{"line":162,"column":105,"offset":5084}}}],"position":{"start":{"line":162,"column":1,"offset":4980},"end":{"line":162,"column":105,"offset":5084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":164,"column":1,"offset":5086},"end":{"line":164,"column":28,"offset":5113}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"relative path","position":{"start":{"line":164,"column":30,"offset":5115},"end":{"line":164,"column":43,"offset":5128}}}],"position":{"start":{"line":164,"column":28,"offset":5113},"end":{"line":164,"column":45,"offset":5130}}},{"type":"text","value":" to ","position":{"start":{"line":164,"column":45,"offset":5130},"end":{"line":164,"column":49,"offset":5134}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"from"}],"position":{"start":{"line":164,"column":49,"offset":5134},"end":{"line":164,"column":55,"offset":5140}}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":164,"column":55,"offset":5140},"end":{"line":164,"column":133,"offset":5218}}}],"position":{"start":{"line":164,"column":1,"offset":5086},"end":{"line":164,"column":133,"offset":5218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":166,"column":1,"offset":5220},"end":{"line":166,"column":25,"offset":5244}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":166,"column":25,"offset":5244},"end":{"line":166,"column":33,"offset":5252}}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":166,"column":33,"offset":5252},"end":{"line":166,"column":151,"offset":5370}}}],"position":{"start":{"line":166,"column":1,"offset":5220},"end":{"line":166,"column":151,"offset":5370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };\n"}],"position":{"start":{"line":168,"column":1,"offset":5372},"end":{"line":176,"column":4,"offset":5548}}}],"position":{"start":{"line":168,"column":1,"offset":5372},"end":{"line":176,"column":4,"offset":5548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":178,"column":1,"offset":5550},"end":{"line":178,"column":116,"offset":5665}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import * as <Namespace>"}],"position":{"start":{"line":178,"column":116,"offset":5665},"end":{"line":178,"column":141,"offset":5690}}},{"type":"text","value":" syntax:","position":{"start":{"line":178,"column":141,"offset":5690},"end":{"line":178,"column":149,"offset":5698}}}],"position":{"start":{"line":178,"column":1,"offset":5550},"end":{"line":178,"column":149,"offset":5698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nimport * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();\n"}],"position":{"start":{"line":180,"column":1,"offset":5700},"end":{"line":189,"column":4,"offset":5822}}}],"position":{"start":{"line":180,"column":1,"offset":5700},"end":{"line":189,"column":4,"offset":5822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Default export","position":{"start":{"line":191,"column":3,"offset":5826},"end":{"line":191,"column":17,"offset":5840}}}],"position":{"start":{"line":191,"column":1,"offset":5824},"end":{"line":191,"column":19,"offset":5842}}}],"position":{"start":{"line":191,"column":1,"offset":5824},"end":{"line":191,"column":19,"offset":5842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":193,"column":1,"offset":5844},"end":{"line":193,"column":92,"offset":5935}}}],"position":{"start":{"line":193,"column":1,"offset":5844},"end":{"line":193,"column":92,"offset":5935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;\n"}],"position":{"start":{"line":195,"column":1,"offset":5937},"end":{"line":205,"column":4,"offset":6151}}}],"position":{"start":{"line":195,"column":1,"offset":5937},"end":{"line":205,"column":4,"offset":6151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":207,"column":1,"offset":6153},"end":{"line":207,"column":148,"offset":6300}}}],"position":{"start":{"line":207,"column":1,"offset":6153},"end":{"line":207,"column":148,"offset":6300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nimport Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();\n"}],"position":{"start":{"line":209,"column":1,"offset":6302},"end":{"line":215,"column":4,"offset":6391}}}],"position":{"start":{"line":209,"column":1,"offset":6302},"end":{"line":215,"column":4,"offset":6391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":217,"column":1,"offset":6393},"end":{"line":217,"column":107,"offset":6499}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-dom"}],"position":{"start":{"line":217,"column":107,"offset":6499},"end":{"line":217,"column":118,"offset":6510}}},{"type":"text","value":", you can import ","position":{"start":{"line":217,"column":118,"offset":6510},"end":{"line":217,"column":135,"offset":6527}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ReactDOM"}],"position":{"start":{"line":217,"column":135,"offset":6527},"end":{"line":217,"column":145,"offset":6537}}},{"type":"text","value":" (a default export) like this:","position":{"start":{"line":217,"column":145,"offset":6537},"end":{"line":217,"column":175,"offset":6567}}}],"position":{"start":{"line":217,"column":1,"offset":6393},"end":{"line":217,"column":175,"offset":6567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nimport ReactDOM from 'react-dom';\n\nReactDOM.render();\n"}],"position":{"start":{"line":219,"column":1,"offset":6569},"end":{"line":224,"column":4,"offset":6635}}}],"position":{"start":{"line":219,"column":1,"offset":6569},"end":{"line":224,"column":4,"offset":6635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":226,"column":1,"offset":6637},"end":{"line":226,"column":37,"offset":6673}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()"}],"position":{"start":{"line":226,"column":37,"offset":6673},"end":{"line":226,"column":47,"offset":6683}}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":226,"column":47,"offset":6683},"end":{"line":226,"column":83,"offset":6719}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()"}],"position":{"start":{"line":226,"column":83,"offset":6719},"end":{"line":226,"column":93,"offset":6729}}},{"type":"text","value":" function like this:","position":{"start":{"line":226,"column":93,"offset":6729},"end":{"line":226,"column":113,"offset":6749}}}],"position":{"start":{"line":226,"column":1,"offset":6637},"end":{"line":226,"column":113,"offset":6749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nimport { render } from 'react-dom';\n\nrender();\n"}],"position":{"start":{"line":228,"column":1,"offset":6751},"end":{"line":233,"column":4,"offset":6810}}}],"position":{"start":{"line":228,"column":1,"offset":6751},"end":{"line":233,"column":4,"offset":6810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":235,"column":1,"offset":6812},"end":{"line":235,"column":60,"offset":6871}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-dom"}],"position":{"start":{"line":235,"column":60,"offset":6871},"end":{"line":235,"column":71,"offset":6882}}},{"type":"text","value":" looks something like this:","position":{"start":{"line":235,"column":71,"offset":6882},"end":{"line":235,"column":98,"offset":6909}}}],"position":{"start":{"line":235,"column":1,"offset":6812},"end":{"line":235,"column":98,"offset":6909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nexport const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;\n"}],"position":{"start":{"line":237,"column":1,"offset":6911},"end":{"line":246,"column":4,"offset":7032}}}],"position":{"start":{"line":237,"column":1,"offset":6911},"end":{"line":246,"column":4,"offset":7032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":248,"column":1,"offset":7034},"end":{"line":248,"column":73,"offset":7106}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"code/webpack/es6-modules"}],"position":{"start":{"line":248,"column":73,"offset":7106},"end":{"line":248,"column":99,"offset":7132}}},{"type":"text","value":".","position":{"start":{"line":248,"column":99,"offset":7132},"end":{"line":248,"column":100,"offset":7133}}}],"position":{"start":{"line":248,"column":1,"offset":7034},"end":{"line":248,"column":100,"offset":7133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":250,"column":1,"offset":7135},"end":{"line":250,"column":66,"offset":7200}}},{"type":"element","tagName":"a","properties":{"href":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/"},"children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":250,"column":67,"offset":7201},"end":{"line":250,"column":88,"offset":7222}}}],"position":{"start":{"line":250,"column":66,"offset":7200},"end":{"line":250,"column":146,"offset":7280}}},{"type":"text","value":"\".","position":{"start":{"line":250,"column":146,"offset":7280},"end":{"line":250,"column":148,"offset":7282}}}],"position":{"start":{"line":250,"column":1,"offset":7135},"end":{"line":250,"column":148,"offset":7282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":252,"column":4,"offset":7287},"end":{"line":252,"column":21,"offset":7304}}}],"position":{"start":{"line":252,"column":1,"offset":7284},"end":{"line":252,"column":21,"offset":7304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use ","position":{"start":{"line":254,"column":1,"offset":7306},"end":{"line":254,"column":8,"offset":7313}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":254,"column":8,"offset":7313},"end":{"line":254,"column":25,"offset":7330}}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":254,"column":25,"offset":7330},"end":{"line":254,"column":137,"offset":7442}}}],"position":{"start":{"line":254,"column":1,"offset":7306},"end":{"line":254,"column":137,"offset":7442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":256,"column":1,"offset":7444},"end":{"line":256,"column":18,"offset":7461}}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":256,"column":18,"offset":7461},"end":{"line":256,"column":108,"offset":7551}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"copies","position":{"start":{"line":256,"column":109,"offset":7552},"end":{"line":256,"column":115,"offset":7558}}}],"position":{"start":{"line":256,"column":108,"offset":7551},"end":{"line":256,"column":116,"offset":7559}}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":256,"column":116,"offset":7559},"end":{"line":256,"column":177,"offset":7620}}}],"position":{"start":{"line":256,"column":1,"offset":7444},"end":{"line":256,"column":177,"offset":7620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nonst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);\n"}],"position":{"start":{"line":258,"column":1,"offset":7622},"end":{"line":264,"column":4,"offset":7751}}}],"position":{"start":{"line":258,"column":1,"offset":7622},"end":{"line":264,"column":4,"offset":7751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":266,"column":1,"offset":7753},"end":{"line":266,"column":47,"offset":7799}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":266,"column":47,"offset":7799},"end":{"line":266,"column":64,"offset":7816}}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":266,"column":64,"offset":7816},"end":{"line":266,"column":126,"offset":7878}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":266,"column":126,"offset":7878},"end":{"line":266,"column":143,"offset":7895}}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":266,"column":143,"offset":7895},"end":{"line":266,"column":280,"offset":8032}}}],"position":{"start":{"line":266,"column":1,"offset":7753},"end":{"line":266,"column":280,"offset":8032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst coffeeWithMilk = Object.assign({}, coffee, { milk: true });\n"}],"position":{"start":{"line":268,"column":1,"offset":8034},"end":{"line":271,"column":4,"offset":8112}}}],"position":{"start":{"line":268,"column":1,"offset":8034},"end":{"line":271,"column":4,"offset":8112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":273,"column":1,"offset":8114},"end":{"line":273,"column":18,"offset":8131}}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":273,"column":18,"offset":8131},"end":{"line":273,"column":85,"offset":8198}}}],"position":{"start":{"line":273,"column":1,"offset":8114},"end":{"line":273,"column":85,"offset":8198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Template literals","position":{"start":{"line":275,"column":4,"offset":8203},"end":{"line":275,"column":21,"offset":8220}}}],"position":{"start":{"line":275,"column":1,"offset":8200},"end":{"line":275,"column":21,"offset":8220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":277,"column":1,"offset":8222},"end":{"line":277,"column":71,"offset":8292}}}],"position":{"start":{"line":277,"column":1,"offset":8222},"end":{"line":277,"column":71,"offset":8292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nvar greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';\n"}],"position":{"start":{"line":279,"column":1,"offset":8294},"end":{"line":282,"column":4,"offset":8381}}}],"position":{"start":{"line":279,"column":1,"offset":8294},"end":{"line":282,"column":4,"offset":8381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":284,"column":1,"offset":8383},"end":{"line":284,"column":69,"offset":8451}}}],"position":{"start":{"line":284,"column":1,"offset":8383},"end":{"line":284,"column":69,"offset":8451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst greeting = `Hello, ${user}! It is ${degF} degrees outside.`;\n"}],"position":{"start":{"line":286,"column":1,"offset":8453},"end":{"line":289,"column":4,"offset":8532}}}],"position":{"start":{"line":286,"column":1,"offset":8453},"end":{"line":289,"column":4,"offset":8532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The spread operator (","position":{"start":{"line":291,"column":4,"offset":8537},"end":{"line":291,"column":25,"offset":8558}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"..."}],"position":{"start":{"line":291,"column":25,"offset":8558},"end":{"line":291,"column":30,"offset":8563}}},{"type":"text","value":")","position":{"start":{"line":291,"column":30,"offset":8563},"end":{"line":291,"column":31,"offset":8564}}}],"position":{"start":{"line":291,"column":1,"offset":8534},"end":{"line":291,"column":31,"offset":8564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":293,"column":1,"offset":8566},"end":{"line":293,"column":25,"offset":8590}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"..."}],"position":{"start":{"line":293,"column":25,"offset":8590},"end":{"line":293,"column":30,"offset":8595}}},{"type":"text","value":" operator will ","position":{"start":{"line":293,"column":30,"offset":8595},"end":{"line":293,"column":45,"offset":8610}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"expand","position":{"start":{"line":293,"column":46,"offset":8611},"end":{"line":293,"column":52,"offset":8617}}}],"position":{"start":{"line":293,"column":45,"offset":8610},"end":{"line":293,"column":53,"offset":8618}}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":293,"column":53,"offset":8618},"end":{"line":293,"column":200,"offset":8765}}}],"position":{"start":{"line":293,"column":1,"offset":8566},"end":{"line":293,"column":200,"offset":8765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":295,"column":1,"offset":8767},"end":{"line":295,"column":20,"offset":8786}}}],"position":{"start":{"line":295,"column":1,"offset":8767},"end":{"line":295,"column":20,"offset":8786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nonst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);\n"}],"position":{"start":{"line":297,"column":1,"offset":8788},"end":{"line":304,"column":4,"offset":8897}}}],"position":{"start":{"line":297,"column":1,"offset":8788},"end":{"line":304,"column":4,"offset":8897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":306,"column":1,"offset":8899},"end":{"line":306,"column":47,"offset":8945}}}],"position":{"start":{"line":306,"column":1,"offset":8899},"end":{"line":306,"column":47,"offset":8945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst d = [a, b, 7, 8, 9];\nconsole.log(d);\n"}],"position":{"start":{"line":308,"column":1,"offset":8947},"end":{"line":312,"column":4,"offset":9002}}}],"position":{"start":{"line":308,"column":1,"offset":8947},"end":{"line":312,"column":4,"offset":9002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":314,"column":4,"offset":9007},"end":{"line":314,"column":28,"offset":9031}}}],"position":{"start":{"line":314,"column":1,"offset":9004},"end":{"line":314,"column":28,"offset":9031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":316,"column":1,"offset":9033},"end":{"line":316,"column":79,"offset":9111}}}],"position":{"start":{"line":316,"column":1,"offset":9033},"end":{"line":316,"column":79,"offset":9111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst explicit = {\n    getState: getState,\n    dispatch: dispatch\n};\n"}],"position":{"start":{"line":318,"column":1,"offset":9113},"end":{"line":324,"column":4,"offset":9194}}}],"position":{"start":{"line":318,"column":1,"offset":9113},"end":{"line":324,"column":4,"offset":9194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":326,"column":1,"offset":9196},"end":{"line":326,"column":98,"offset":9293}}}],"position":{"start":{"line":326,"column":1,"offset":9196},"end":{"line":326,"column":98,"offset":9293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst implicit = {\n    getState,\n    dispatch\n};\n"}],"position":{"start":{"line":328,"column":1,"offset":9295},"end":{"line":334,"column":4,"offset":9356}}}],"position":{"start":{"line":328,"column":1,"offset":9295},"end":{"line":334,"column":4,"offset":9356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":336,"column":1,"offset":9358},"end":{"line":336,"column":161,"offset":9518}}}],"position":{"start":{"line":336,"column":1,"offset":9358},"end":{"line":336,"column":161,"offset":9518}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":338,"column":4,"offset":9523},"end":{"line":338,"column":21,"offset":9540}}}],"position":{"start":{"line":338,"column":1,"offset":9520},"end":{"line":338,"column":21,"offset":9540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":340,"column":1,"offset":9542},"end":{"line":340,"column":82,"offset":9623}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":340,"column":82,"offset":9623},"end":{"line":340,"column":93,"offset":9634}}},{"type":"text","value":" when the function is called.","position":{"start":{"line":340,"column":93,"offset":9634},"end":{"line":340,"column":122,"offset":9663}}}],"position":{"start":{"line":340,"column":1,"offset":9542},"end":{"line":340,"column":122,"offset":9663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This:","position":{"start":{"line":342,"column":1,"offset":9665},"end":{"line":342,"column":6,"offset":9670}}}],"position":{"start":{"line":342,"column":1,"offset":9665},"end":{"line":342,"column":6,"offset":9670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nunction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}\n"}],"position":{"start":{"line":344,"column":1,"offset":9672},"end":{"line":352,"column":4,"offset":9785}}}],"position":{"start":{"line":344,"column":1,"offset":9672},"end":{"line":352,"column":4,"offset":9785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":354,"column":1,"offset":9787},"end":{"line":354,"column":24,"offset":9810}}}],"position":{"start":{"line":354,"column":1,"offset":9787},"end":{"line":354,"column":24,"offset":9810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":356,"column":1,"offset":9812},"end":{"line":356,"column":4,"offset":9815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\n\nfunction divide(a, b = 1) {\n    return a / b;\n}\n"}],"position":{"start":{"line":359,"column":1,"offset":9818},"end":{"line":366,"column":4,"offset":9880}}}],"position":{"start":{"line":359,"column":1,"offset":9818},"end":{"line":366,"column":4,"offset":9880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":368,"column":1,"offset":9882},"end":{"line":368,"column":51,"offset":9932}}}],"position":{"start":{"line":368,"column":1,"offset":9882},"end":{"line":368,"column":51,"offset":9932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\ndivide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);\n"}],"position":{"start":{"line":370,"column":1,"offset":9934},"end":{"line":377,"column":4,"offset":9998}}}],"position":{"start":{"line":370,"column":1,"offset":9934},"end":{"line":377,"column":4,"offset":9998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":379,"column":1,"offset":10000},"end":{"line":379,"column":23,"offset":10022}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b"}],"position":{"start":{"line":379,"column":23,"offset":10022},"end":{"line":379,"column":26,"offset":10025}}},{"type":"text","value":" in the example above is ","position":{"start":{"line":379,"column":26,"offset":10025},"end":{"line":379,"column":51,"offset":10050}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":379,"column":51,"offset":10050},"end":{"line":379,"column":62,"offset":10061}}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":379,"column":62,"offset":10061},"end":{"line":379,"column":104,"offset":10103}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":379,"column":104,"offset":10103},"end":{"line":379,"column":110,"offset":10109}}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":379,"column":110,"offset":10109},"end":{"line":379,"column":145,"offset":10144}}}],"position":{"start":{"line":379,"column":1,"offset":10000},"end":{"line":379,"column":145,"offset":10144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\ndivide(14, null);\n"}],"position":{"start":{"line":381,"column":1,"offset":10146},"end":{"line":384,"column":4,"offset":10176}}}],"position":{"start":{"line":381,"column":1,"offset":10146},"end":{"line":384,"column":4,"offset":10176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":386,"column":4,"offset":10181},"end":{"line":386,"column":29,"offset":10206}}}],"position":{"start":{"line":386,"column":1,"offset":10178},"end":{"line":386,"column":29,"offset":10206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"For arrays","position":{"start":{"line":388,"column":5,"offset":10212},"end":{"line":388,"column":15,"offset":10222}}}],"position":{"start":{"line":388,"column":1,"offset":10208},"end":{"line":388,"column":15,"offset":10222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":390,"column":1,"offset":10224},"end":{"line":390,"column":83,"offset":10306}}}],"position":{"start":{"line":390,"column":1,"offset":10224},"end":{"line":390,"column":83,"offset":10306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];\n"}],"position":{"start":{"line":392,"column":1,"offset":10308},"end":{"line":397,"column":4,"offset":10416}}}],"position":{"start":{"line":392,"column":1,"offset":10308},"end":{"line":397,"column":4,"offset":10416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":399,"column":1,"offset":10418},"end":{"line":399,"column":83,"offset":10500}}}],"position":{"start":{"line":399,"column":1,"offset":10418},"end":{"line":399,"column":83,"offset":10500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);\n"}],"position":{"start":{"line":401,"column":1,"offset":10502},"end":{"line":406,"column":4,"offset":10609}}}],"position":{"start":{"line":401,"column":1,"offset":10502},"end":{"line":406,"column":4,"offset":10609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":408,"column":1,"offset":10611},"end":{"line":408,"column":134,"offset":10744}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'onion'"}],"position":{"start":{"line":408,"column":134,"offset":10744},"end":{"line":408,"column":143,"offset":10753}}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":408,"column":143,"offset":10753},"end":{"line":408,"column":187,"offset":10797}}}],"position":{"start":{"line":408,"column":1,"offset":10611},"end":{"line":408,"column":187,"offset":10797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"For objects","position":{"start":{"line":410,"column":5,"offset":10803},"end":{"line":410,"column":16,"offset":10814}}}],"position":{"start":{"line":410,"column":1,"offset":10799},"end":{"line":410,"column":16,"offset":10814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":412,"column":1,"offset":10816},"end":{"line":412,"column":77,"offset":10892}}}],"position":{"start":{"line":412,"column":1,"offset":10816},"end":{"line":412,"column":77,"offset":10892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);\n"}],"position":{"start":{"line":414,"column":1,"offset":10894},"end":{"line":427,"column":4,"offset":11158}}}],"position":{"start":{"line":414,"column":1,"offset":10894},"end":{"line":427,"column":4,"offset":11158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":429,"column":5,"offset":11164},"end":{"line":429,"column":31,"offset":11190}}}],"position":{"start":{"line":429,"column":1,"offset":11160},"end":{"line":429,"column":31,"offset":11190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":431,"column":1,"offset":11192},"end":{"line":431,"column":121,"offset":11312}}}],"position":{"start":{"line":431,"column":1,"offset":11192},"end":{"line":431,"column":121,"offset":11312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);\n"}],"position":{"start":{"line":433,"column":1,"offset":11314},"end":{"line":444,"column":4,"offset":11508}}}],"position":{"start":{"line":433,"column":1,"offset":11314},"end":{"line":444,"column":4,"offset":11508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":446,"column":1,"offset":11510},"end":{"line":446,"column":51,"offset":11560}}}],"position":{"start":{"line":446,"column":1,"offset":11510},"end":{"line":446,"column":51,"offset":11560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);\n"}],"position":{"start":{"line":448,"column":1,"offset":11562},"end":{"line":459,"column":4,"offset":11842}}}],"position":{"start":{"line":448,"column":1,"offset":11562},"end":{"line":459,"column":4,"offset":11842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables (","position":{"start":{"line":461,"column":1,"offset":11844},"end":{"line":461,"column":65,"offset":11908}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ingredients"}],"position":{"start":{"line":461,"column":65,"offset":11908},"end":{"line":461,"column":78,"offset":11921}}},{"type":"text","value":" and ","position":{"start":{"line":461,"column":78,"offset":11921},"end":{"line":461,"column":83,"offset":11926}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":461,"column":83,"offset":11926},"end":{"line":461,"column":92,"offset":11935}}},{"type":"text","value":") that we then use inside the component's function body.","position":{"start":{"line":461,"column":92,"offset":11935},"end":{"line":461,"column":148,"offset":11991}}}],"position":{"start":{"line":461,"column":1,"offset":11844},"end":{"line":461,"column":148,"offset":11991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Share To Linkedin:","position":{"start":{"line":463,"column":1,"offset":11993},"end":{"line":463,"column":19,"offset":12011}}}],"position":{"start":{"line":463,"column":1,"offset":11993},"end":{"line":463,"column":19,"offset":12011}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":464,"column":1,"offset":12012}}}}