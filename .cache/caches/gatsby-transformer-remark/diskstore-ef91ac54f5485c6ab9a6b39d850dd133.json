{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-da8faeadc7768ac5c62108cff4b12eba--","val":{"type":"root","children":[{"type":"thematicBreak","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":4,"offset":5},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"description: Review","position":{"start":{"line":5,"column":4,"offset":10},"end":{"line":5,"column":23,"offset":29},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":7},"end":{"line":5,"column":23,"offset":29},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":7,"column":3,"offset":33},"end":{"line":7,"column":30,"offset":60},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":31},"end":{"line":7,"column":30,"offset":60},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":9,"column":5,"offset":66},"end":{"line":9,"column":23,"offset":84},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":62},"end":{"line":9,"column":23,"offset":84},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":11,"column":5,"offset":90},"end":{"line":11,"column":32,"offset":117},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":86},"end":{"line":11,"column":32,"offset":117},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":13,"column":3,"offset":121},"end":{"line":13,"column":22,"offset":140},"indent":[]}},{"type":"inlineCode","value":"ls","position":{"start":{"line":13,"column":22,"offset":140},"end":{"line":13,"column":26,"offset":144},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":13,"column":26,"offset":144},"end":{"line":13,"column":28,"offset":146},"indent":[]}},{"type":"inlineCode","value":"cd","position":{"start":{"line":13,"column":28,"offset":146},"end":{"line":13,"column":32,"offset":150},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":13,"column":32,"offset":150},"end":{"line":13,"column":34,"offset":152},"indent":[]}},{"type":"inlineCode","value":"pwd","position":{"start":{"line":13,"column":34,"offset":152},"end":{"line":13,"column":39,"offset":157},"indent":[]}},{"type":"text","value":" to their descriptions","position":{"start":{"line":13,"column":39,"offset":157},"end":{"line":13,"column":61,"offset":179},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":121},"end":{"line":13,"column":61,"offset":179},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ls","position":{"start":{"line":14,"column":7,"offset":186},"end":{"line":14,"column":11,"offset":190},"indent":[]}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":14,"column":11,"offset":190},"end":{"line":14,"column":47,"offset":226},"indent":[]}}],"position":{"start":{"line":14,"column":7,"offset":186},"end":{"line":14,"column":47,"offset":226},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":184},"end":{"line":14,"column":47,"offset":226},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":15,"column":7,"offset":233},"end":{"line":15,"column":11,"offset":237},"indent":[]}},{"type":"text","value":" changes current directory","position":{"start":{"line":15,"column":11,"offset":237},"end":{"line":15,"column":37,"offset":263},"indent":[]}}],"position":{"start":{"line":15,"column":7,"offset":233},"end":{"line":15,"column":37,"offset":263},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd ..","position":{"start":{"line":16,"column":11,"offset":274},"end":{"line":16,"column":18,"offset":281},"indent":[]}},{"type":"text","value":" takes you up one level","position":{"start":{"line":16,"column":18,"offset":281},"end":{"line":16,"column":41,"offset":304},"indent":[]}}],"position":{"start":{"line":16,"column":11,"offset":274},"end":{"line":16,"column":41,"offset":304},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":272},"end":{"line":16,"column":41,"offset":304},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":17,"column":11,"offset":315},"end":{"line":17,"column":15,"offset":319},"indent":[]}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":17,"column":15,"offset":319},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":17,"column":11,"offset":315},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":313},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":272},"end":{"line":17,"column":41,"offset":345},"indent":[9]}}],"position":{"start":{"line":15,"column":5,"offset":231},"end":{"line":17,"column":41,"offset":345},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"pwd","position":{"start":{"line":18,"column":7,"offset":352},"end":{"line":18,"column":12,"offset":357},"indent":[]}},{"type":"text","value":" returns current directory","position":{"start":{"line":18,"column":12,"offset":357},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":18,"column":7,"offset":352},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":350},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":184},"end":{"line":18,"column":38,"offset":383},"indent":[5,5,5,5]}}],"position":{"start":{"line":13,"column":1,"offset":119},"end":{"line":18,"column":38,"offset":383},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":19,"column":3,"offset":386},"end":{"line":19,"column":51,"offset":434},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":19,"column":51,"offset":434},"end":{"line":19,"column":53,"offset":436},"indent":[]}},{"type":"text","value":"path","position":{"start":{"line":19,"column":53,"offset":436},"end":{"line":19,"column":57,"offset":440},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":19,"column":57,"offset":440},"end":{"line":19,"column":59,"offset":442},"indent":[]}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":19,"column":59,"offset":442},"end":{"line":19,"column":124,"offset":507},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":386},"end":{"line":19,"column":124,"offset":507},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":384},"end":{"line":19,"column":124,"offset":507},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":20,"column":3,"offset":510},"end":{"line":20,"column":81,"offset":588},"indent":[]}},{"type":"inlineCode","value":"console.log('hello new world');","position":{"start":{"line":20,"column":81,"offset":588},"end":{"line":20,"column":114,"offset":621},"indent":[]}},{"type":"text","value":" and save it.","position":{"start":{"line":20,"column":114,"offset":621},"end":{"line":20,"column":127,"offset":634},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":510},"end":{"line":20,"column":127,"offset":634},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":508},"end":{"line":20,"column":127,"offset":634},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":21,"column":3,"offset":637},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":637},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":635},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":119},"end":{"line":21,"column":56,"offset":690},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":23,"column":5,"offset":696},"end":{"line":23,"column":40,"offset":731},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":692},"end":{"line":23,"column":40,"offset":731},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":25,"column":3,"offset":735},"end":{"line":25,"column":52,"offset":784},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":735},"end":{"line":25,"column":52,"offset":784},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":26,"column":7,"offset":791},"end":{"line":26,"column":65,"offset":849},"indent":[]}}],"position":{"start":{"line":26,"column":7,"offset":791},"end":{"line":26,"column":65,"offset":849},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":27,"column":11,"offset":860},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":11,"offset":860},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":858},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":858},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":789},"end":{"line":27,"column":35,"offset":884},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":28,"column":7,"offset":891},"end":{"line":28,"column":26,"offset":910},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":28,"column":26,"offset":910},"end":{"line":28,"column":28,"offset":912},"indent":[]}},{"type":"text","value":"including arrays","position":{"start":{"line":28,"column":28,"offset":912},"end":{"line":28,"column":44,"offset":928},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":28,"column":44,"offset":928},"end":{"line":28,"column":46,"offset":930},"indent":[]}}],"position":{"start":{"line":28,"column":7,"offset":891},"end":{"line":28,"column":46,"offset":930},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"references are mutable","position":{"start":{"line":29,"column":11,"offset":941},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":11,"offset":941},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":939},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":939},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":889},"end":{"line":29,"column":33,"offset":963},"indent":[5]}}],"position":{"start":{"line":26,"column":5,"offset":789},"end":{"line":29,"column":33,"offset":963},"indent":[5,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":733},"end":{"line":29,"column":33,"offset":963},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":30,"column":3,"offset":966},"end":{"line":30,"column":24,"offset":987},"indent":[]}},{"type":"inlineCode","value":".","position":{"start":{"line":30,"column":24,"offset":987},"end":{"line":30,"column":27,"offset":990},"indent":[]}},{"type":"text","value":" vs ","position":{"start":{"line":30,"column":27,"offset":990},"end":{"line":30,"column":31,"offset":994},"indent":[]}},{"type":"inlineCode","value":"[]","position":{"start":{"line":30,"column":31,"offset":994},"end":{"line":30,"column":35,"offset":998},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":30,"column":35,"offset":998},"end":{"line":30,"column":70,"offset":1033},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":966},"end":{"line":30,"column":70,"offset":1033},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":31,"column":7,"offset":1040},"end":{"line":31,"column":18,"offset":1051},"indent":[]}},{"type":"inlineCode","value":"object.key","position":{"start":{"line":31,"column":18,"offset":1051},"end":{"line":31,"column":30,"offset":1063},"indent":[]}}],"position":{"start":{"line":31,"column":7,"offset":1040},"end":{"line":31,"column":30,"offset":1063},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to read","position":{"start":{"line":32,"column":11,"offset":1074},"end":{"line":32,"column":25,"offset":1088},"indent":[]}}],"position":{"start":{"line":32,"column":11,"offset":1074},"end":{"line":32,"column":25,"offset":1088},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1072},"end":{"line":32,"column":25,"offset":1088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to write","position":{"start":{"line":33,"column":11,"offset":1099},"end":{"line":33,"column":26,"offset":1114},"indent":[]}}],"position":{"start":{"line":33,"column":11,"offset":1099},"end":{"line":33,"column":26,"offset":1114},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1097},"end":{"line":33,"column":26,"offset":1114},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":34,"column":11,"offset":1125},"end":{"line":34,"column":39,"offset":1153},"indent":[]}}],"position":{"start":{"line":34,"column":11,"offset":1125},"end":{"line":34,"column":39,"offset":1153},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1123},"end":{"line":34,"column":39,"offset":1153},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":35,"column":11,"offset":1164},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":35,"column":11,"offset":1164},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1162},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1072},"end":{"line":35,"column":42,"offset":1195},"indent":[9,9,9]}}],"position":{"start":{"line":31,"column":5,"offset":1038},"end":{"line":35,"column":42,"offset":1195},"indent":[5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":36,"column":7,"offset":1202},"end":{"line":36,"column":24,"offset":1219},"indent":[]}},{"type":"inlineCode","value":"object[\"key]","position":{"start":{"line":36,"column":24,"offset":1219},"end":{"line":36,"column":38,"offset":1233},"indent":[]}}],"position":{"start":{"line":36,"column":7,"offset":1202},"end":{"line":36,"column":38,"offset":1233},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":37,"column":11,"offset":1244},"end":{"line":37,"column":35,"offset":1268},"indent":[]}}],"position":{"start":{"line":37,"column":11,"offset":1244},"end":{"line":37,"column":35,"offset":1268},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1242},"end":{"line":37,"column":35,"offset":1268},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":38,"column":11,"offset":1279},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":38,"column":11,"offset":1279},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":38,"column":9,"offset":1277},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1242},"end":{"line":38,"column":61,"offset":1329},"indent":[9]}}],"position":{"start":{"line":36,"column":5,"offset":1200},"end":{"line":38,"column":61,"offset":1329},"indent":[5,5]}}],"position":{"start":{"line":31,"column":5,"offset":1038},"end":{"line":38,"column":61,"offset":1329},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":30,"column":1,"offset":964},"end":{"line":38,"column":61,"offset":1329},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":39,"column":3,"offset":1332},"end":{"line":39,"column":66,"offset":1395},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":1332},"end":{"line":39,"column":66,"offset":1395},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":41,"column":7,"offset":1403},"end":{"line":41,"column":106,"offset":1502},"indent":[]}}],"position":{"start":{"line":41,"column":7,"offset":1403},"end":{"line":41,"column":106,"offset":1502},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };","position":{"start":{"line":43,"column":9,"offset":1512},"end":{"line":47,"column":12,"offset":1607},"indent":[1,9,9,9]}}],"position":{"start":{"line":41,"column":5,"offset":1401},"end":{"line":47,"column":12,"offset":1607},"indent":[1,5,1,5,5,5]}}],"position":{"start":{"line":41,"column":5,"offset":1401},"end":{"line":47,"column":12,"offset":1607},"indent":[1,5,1,5,5,5]}}],"position":{"start":{"line":39,"column":1,"offset":1330},"end":{"line":48,"column":1,"offset":1608},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":49,"column":3,"offset":1611},"end":{"line":49,"column":11,"offset":1619},"indent":[]}},{"type":"inlineCode","value":"obj[key] !== undefined","position":{"start":{"line":49,"column":11,"offset":1619},"end":{"line":49,"column":35,"offset":1643},"indent":[]}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":49,"column":35,"offset":1643},"end":{"line":49,"column":112,"offset":1720},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1611},"end":{"line":49,"column":112,"offset":1720},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1609},"end":{"line":49,"column":112,"offset":1720},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"can also use ","position":{"start":{"line":50,"column":5,"offset":1725},"end":{"line":50,"column":18,"offset":1738},"indent":[]}},{"type":"inlineCode","value":"(key in object)","position":{"start":{"line":50,"column":18,"offset":1738},"end":{"line":50,"column":35,"offset":1755},"indent":[]}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":50,"column":35,"offset":1755},"end":{"line":50,"column":59,"offset":1779},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":50,"column":59,"offset":1779},"end":{"line":50,"column":61,"offset":1781},"indent":[]}},{"type":"text","value":"returns a boolean","position":{"start":{"line":50,"column":61,"offset":1781},"end":{"line":50,"column":78,"offset":1798},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":50,"column":78,"offset":1798},"end":{"line":50,"column":80,"offset":1800},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1725},"end":{"line":50,"column":80,"offset":1800},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1723},"end":{"line":50,"column":80,"offset":1800},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1723},"end":{"line":50,"column":80,"offset":1800},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1721},"end":{"line":50,"column":80,"offset":1800},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":51,"column":3,"offset":1803},"end":{"line":51,"column":54,"offset":1854},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":1803},"end":{"line":51,"column":54,"offset":1854},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.keys(obj)","position":{"start":{"line":52,"column":7,"offset":1861},"end":{"line":52,"column":25,"offset":1879},"indent":[]}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":52,"column":25,"offset":1879},"end":{"line":52,"column":62,"offset":1916},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":52,"column":62,"offset":1916},"end":{"line":52,"column":67,"offset":1921},"indent":[]}}],"position":{"start":{"line":52,"column":7,"offset":1861},"end":{"line":52,"column":67,"offset":1921},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1859},"end":{"line":52,"column":67,"offset":1921},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.values(obj)","position":{"start":{"line":53,"column":7,"offset":1928},"end":{"line":53,"column":27,"offset":1948},"indent":[]}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":53,"column":27,"offset":1948},"end":{"line":53,"column":62,"offset":1983},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":53,"column":62,"offset":1983},"end":{"line":53,"column":67,"offset":1988},"indent":[]}}],"position":{"start":{"line":53,"column":7,"offset":1928},"end":{"line":53,"column":67,"offset":1988},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":1926},"end":{"line":53,"column":67,"offset":1988},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1859},"end":{"line":53,"column":67,"offset":1988},"indent":[5]}}],"position":{"start":{"line":51,"column":1,"offset":1801},"end":{"line":53,"column":67,"offset":1988},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":54,"column":3,"offset":1991},"end":{"line":54,"column":37,"offset":2025},"indent":[]}},{"type":"inlineCode","value":"for in","position":{"start":{"line":54,"column":37,"offset":2025},"end":{"line":54,"column":45,"offset":2033},"indent":[]}},{"type":"text","value":" loop","position":{"start":{"line":54,"column":45,"offset":2033},"end":{"line":54,"column":50,"offset":2038},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1991},"end":{"line":54,"column":50,"offset":2038},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};","position":{"start":{"line":56,"column":5,"offset":2044},"end":{"line":64,"column":8,"offset":2213},"indent":[1,5,5,5,5,5,5,5]}}],"position":{"start":{"line":54,"column":1,"offset":1989},"end":{"line":65,"column":1,"offset":2214},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":66,"column":3,"offset":2217},"end":{"line":66,"column":35,"offset":2249},"indent":[]}},{"type":"inlineCode","value":"...rest","position":{"start":{"line":66,"column":35,"offset":2249},"end":{"line":66,"column":44,"offset":2258},"indent":[]}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":66,"column":44,"offset":2258},"end":{"line":66,"column":94,"offset":2308},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":2217},"end":{"line":66,"column":94,"offset":2308},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"...rest","position":{"start":{"line":68,"column":7,"offset":2316},"end":{"line":68,"column":16,"offset":2325},"indent":[]}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":68,"column":16,"offset":2325},"end":{"line":68,"column":71,"offset":2380},"indent":[]}}],"position":{"start":{"line":68,"column":7,"offset":2316},"end":{"line":68,"column":71,"offset":2380},"indent":[]}}],"position":{"start":{"line":68,"column":5,"offset":2314},"end":{"line":68,"column":71,"offset":2380},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":69,"column":7,"offset":2387},"end":{"line":69,"column":63,"offset":2443},"indent":[]}}],"position":{"start":{"line":69,"column":7,"offset":2387},"end":{"line":69,"column":63,"offset":2443},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};","position":{"start":{"line":71,"column":9,"offset":2453},"end":{"line":80,"column":12,"offset":2739},"indent":[1,9,9,9,9,9,9,9,9]}}],"position":{"start":{"line":69,"column":5,"offset":2385},"end":{"line":80,"column":12,"offset":2739},"indent":[1,5,1,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":68,"column":5,"offset":2314},"end":{"line":80,"column":12,"offset":2739},"indent":[5,1,5,1,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":66,"column":1,"offset":2215},"end":{"line":80,"column":12,"offset":2739},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":733},"end":{"line":80,"column":12,"offset":2739},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":82,"column":1,"offset":2741},"end":{"line":82,"column":4,"offset":2744},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":84,"column":3,"offset":2748},"end":{"line":84,"column":7,"offset":2752},"indent":[]}},{"type":"inlineCode","value":"...spread","position":{"start":{"line":84,"column":7,"offset":2752},"end":{"line":84,"column":18,"offset":2763},"indent":[]}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":84,"column":18,"offset":2763},"end":{"line":84,"column":64,"offset":2809},"indent":[]}}],"position":{"start":{"line":84,"column":3,"offset":2748},"end":{"line":84,"column":64,"offset":2809},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]","position":{"start":{"line":86,"column":5,"offset":2815},"end":{"line":92,"column":8,"offset":3066},"indent":[1,5,5,5,5,5]}}],"position":{"start":{"line":84,"column":1,"offset":2746},"end":{"line":93,"column":1,"offset":3067},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":94,"column":3,"offset":3070},"end":{"line":94,"column":54,"offset":3121},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":3070},"end":{"line":94,"column":54,"offset":3121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":96,"column":5,"offset":3127},"end":{"line":96,"column":7,"offset":3129},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":96,"column":7,"offset":3129},"end":{"line":96,"column":9,"offset":3131},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":96,"column":9,"offset":3131},"end":{"line":96,"column":11,"offset":3133},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":96,"column":11,"offset":3133},"end":{"line":96,"column":21,"offset":3143},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":3127},"end":{"line":96,"column":21,"offset":3143},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let array = ","position":{"start":{"line":98,"column":5,"offset":3149},"end":{"line":98,"column":17,"offset":3161},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":98,"column":17,"offset":3161},"end":{"line":98,"column":19,"offset":3163},"indent":[]}},{"type":"text","value":"35,9","position":{"start":{"line":98,"column":19,"offset":3163},"end":{"line":98,"column":23,"offset":3167},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":98,"column":23,"offset":3167},"end":{"line":98,"column":25,"offset":3169},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":98,"column":25,"offset":3169},"end":{"line":98,"column":26,"offset":3170},"indent":[]}}],"position":{"start":{"line":98,"column":5,"offset":3149},"end":{"line":98,"column":26,"offset":3170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let ","position":{"start":{"line":100,"column":5,"offset":3176},"end":{"line":100,"column":9,"offset":3180},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":100,"column":9,"offset":3180},"end":{"line":100,"column":11,"offset":3182},"indent":[]}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":100,"column":11,"offset":3182},"end":{"line":100,"column":28,"offset":3199},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":100,"column":28,"offset":3199},"end":{"line":100,"column":30,"offset":3201},"indent":[]}},{"type":"text","value":" = array;","position":{"start":{"line":100,"column":30,"offset":3201},"end":{"line":100,"column":39,"offset":3210},"indent":[]}}],"position":{"start":{"line":100,"column":5,"offset":3176},"end":{"line":100,"column":39,"offset":3210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":102,"column":5,"offset":3216},"end":{"line":102,"column":16,"offset":3227},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":102,"column":16,"offset":3227},"end":{"line":102,"column":18,"offset":3229},"indent":[]}},{"type":"text","value":"firstEl","position":{"start":{"line":102,"column":18,"offset":3229},"end":{"line":102,"column":25,"offset":3236},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":102,"column":25,"offset":3236},"end":{"line":102,"column":27,"offset":3238},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":102,"column":27,"offset":3238},"end":{"line":102,"column":33,"offset":3244},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":102,"column":33,"offset":3244},"end":{"line":102,"column":37,"offset":3248},"indent":[]}},{"type":"text","value":" 35","position":{"start":{"line":102,"column":37,"offset":3248},"end":{"line":102,"column":40,"offset":3251},"indent":[]}}],"position":{"start":{"line":102,"column":5,"offset":3216},"end":{"line":102,"column":40,"offset":3251},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":104,"column":5,"offset":3257},"end":{"line":104,"column":16,"offset":3268},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":104,"column":16,"offset":3268},"end":{"line":104,"column":18,"offset":3270},"indent":[]}},{"type":"text","value":"secondEl","position":{"start":{"line":104,"column":18,"offset":3270},"end":{"line":104,"column":26,"offset":3278},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":104,"column":26,"offset":3278},"end":{"line":104,"column":28,"offset":3280},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":104,"column":28,"offset":3280},"end":{"line":104,"column":34,"offset":3286},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":104,"column":34,"offset":3286},"end":{"line":104,"column":38,"offset":3290},"indent":[]}},{"type":"text","value":" 9","position":{"start":{"line":104,"column":38,"offset":3290},"end":{"line":104,"column":40,"offset":3292},"indent":[]}}],"position":{"start":{"line":104,"column":5,"offset":3257},"end":{"line":104,"column":40,"offset":3292},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3068},"end":{"line":104,"column":40,"offset":3292},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":84,"column":1,"offset":2746},"end":{"line":104,"column":40,"offset":3292},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":106,"column":1,"offset":3294},"end":{"line":106,"column":54,"offset":3347},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":106,"column":54,"offset":3347},"end":{"line":106,"column":56,"offset":3349},"indent":[]}},{"type":"text","value":"35,9,14","position":{"start":{"line":106,"column":56,"offset":3349},"end":{"line":106,"column":63,"offset":3356},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":106,"column":63,"offset":3356},"end":{"line":106,"column":65,"offset":3358},"indent":[]}},{"type":"text","value":"; let ","position":{"start":{"line":106,"column":65,"offset":3358},"end":{"line":106,"column":71,"offset":3364},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":106,"column":71,"offset":3364},"end":{"line":106,"column":73,"offset":3366},"indent":[]}},{"type":"text","value":"head, ...tail","position":{"start":{"line":106,"column":73,"offset":3366},"end":{"line":106,"column":86,"offset":3379},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":106,"column":86,"offset":3379},"end":{"line":106,"column":88,"offset":3381},"indent":[]}},{"type":"text","value":" = array; console.log","position":{"start":{"line":106,"column":88,"offset":3381},"end":{"line":106,"column":109,"offset":3402},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":106,"column":109,"offset":3402},"end":{"line":106,"column":111,"offset":3404},"indent":[]}},{"type":"text","value":"head","position":{"start":{"line":106,"column":111,"offset":3404},"end":{"line":106,"column":115,"offset":3408},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":106,"column":115,"offset":3408},"end":{"line":106,"column":117,"offset":3410},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":106,"column":117,"offset":3410},"end":{"line":106,"column":123,"offset":3416},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":106,"column":123,"offset":3416},"end":{"line":106,"column":127,"offset":3420},"indent":[]}},{"type":"text","value":" 35 console.log","position":{"start":{"line":106,"column":127,"offset":3420},"end":{"line":106,"column":142,"offset":3435},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":106,"column":142,"offset":3435},"end":{"line":106,"column":144,"offset":3437},"indent":[]}},{"type":"text","value":"tail","position":{"start":{"line":106,"column":144,"offset":3437},"end":{"line":106,"column":148,"offset":3441},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":106,"column":148,"offset":3441},"end":{"line":106,"column":150,"offset":3443},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":106,"column":150,"offset":3443},"end":{"line":106,"column":156,"offset":3449},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":106,"column":156,"offset":3449},"end":{"line":106,"column":160,"offset":3453},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":106,"column":160,"offset":3453},"end":{"line":106,"column":161,"offset":3454},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":106,"column":161,"offset":3454},"end":{"line":106,"column":163,"offset":3456},"indent":[]}},{"type":"text","value":"9, 14","position":{"start":{"line":106,"column":163,"offset":3456},"end":{"line":106,"column":168,"offset":3461},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":106,"column":168,"offset":3461},"end":{"line":106,"column":170,"offset":3463},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3294},"end":{"line":106,"column":170,"offset":3463},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```js\n//\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash","position":{"start":{"line":108,"column":1,"offset":3465},"end":{"line":144,"column":4,"offset":4500},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":146,"column":3,"offset":4504},"end":{"line":146,"column":131,"offset":4632},"indent":[]}}],"position":{"start":{"line":146,"column":3,"offset":4504},"end":{"line":146,"column":131,"offset":4632},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}","position":{"start":{"line":148,"column":5,"offset":4638},"end":{"line":160,"column":8,"offset":4960},"indent":[1,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":146,"column":1,"offset":4502},"end":{"line":160,"column":8,"offset":4960},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":146,"column":1,"offset":4502},"end":{"line":160,"column":8,"offset":4960},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":162,"column":5,"offset":4966},"end":{"line":162,"column":30,"offset":4991},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4962},"end":{"line":162,"column":30,"offset":4991},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":164,"column":3,"offset":4995},"end":{"line":164,"column":107,"offset":5099},"indent":[]}}],"position":{"start":{"line":164,"column":3,"offset":4995},"end":{"line":164,"column":107,"offset":5099},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":165,"column":7,"offset":5106},"end":{"line":165,"column":120,"offset":5219},"indent":[]}}],"position":{"start":{"line":165,"column":7,"offset":5106},"end":{"line":165,"column":120,"offset":5219},"indent":[]}}],"position":{"start":{"line":165,"column":5,"offset":5104},"end":{"line":165,"column":120,"offset":5219},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":166,"column":7,"offset":5226},"end":{"line":166,"column":53,"offset":5272},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":166,"column":53,"offset":5272},"end":{"line":166,"column":55,"offset":5274},"indent":[]}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":166,"column":55,"offset":5274},"end":{"line":166,"column":78,"offset":5297},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":166,"column":78,"offset":5297},"end":{"line":166,"column":80,"offset":5299},"indent":[]}}],"position":{"start":{"line":166,"column":7,"offset":5226},"end":{"line":166,"column":80,"offset":5299},"indent":[]}}],"position":{"start":{"line":166,"column":5,"offset":5224},"end":{"line":166,"column":80,"offset":5299},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":167,"column":7,"offset":5306},"end":{"line":167,"column":87,"offset":5386},"indent":[]}}],"position":{"start":{"line":167,"column":7,"offset":5306},"end":{"line":167,"column":87,"offset":5386},"indent":[]}}],"position":{"start":{"line":167,"column":5,"offset":5304},"end":{"line":167,"column":87,"offset":5386},"indent":[]}}],"position":{"start":{"line":165,"column":5,"offset":5104},"end":{"line":167,"column":87,"offset":5386},"indent":[5,5]}}],"position":{"start":{"line":164,"column":1,"offset":4993},"end":{"line":167,"column":87,"offset":5386},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":168,"column":3,"offset":5389},"end":{"line":168,"column":89,"offset":5475},"indent":[]}},{"type":"inlineCode","value":"console.log","position":{"start":{"line":168,"column":89,"offset":5475},"end":{"line":168,"column":102,"offset":5488},"indent":[]}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":168,"column":102,"offset":5488},"end":{"line":168,"column":133,"offset":5519},"indent":[]}}],"position":{"start":{"line":168,"column":3,"offset":5389},"end":{"line":168,"column":133,"offset":5519},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5387},"end":{"line":168,"column":133,"offset":5519},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":169,"column":5,"offset":5524},"end":{"line":169,"column":31,"offset":5550},"indent":[]}}],"position":{"start":{"line":169,"column":5,"offset":5524},"end":{"line":169,"column":31,"offset":5550},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":5522},"end":{"line":169,"column":31,"offset":5550},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":5522},"end":{"line":169,"column":31,"offset":5550},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5520},"end":{"line":169,"column":31,"offset":5550},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":170,"column":3,"offset":5553},"end":{"line":170,"column":131,"offset":5681},"indent":[]}}],"position":{"start":{"line":170,"column":3,"offset":5553},"end":{"line":170,"column":131,"offset":5681},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":5551},"end":{"line":170,"column":131,"offset":5681},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4993},"end":{"line":170,"column":131,"offset":5681},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};","position":{"start":{"line":172,"column":1,"offset":5683},"end":{"line":187,"column":4,"offset":6026},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":189,"column":1,"offset":6028},"end":{"line":189,"column":44,"offset":6071},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":44,"offset":6071},"end":{"line":189,"column":46,"offset":6073},"indent":[]}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":189,"column":46,"offset":6073},"end":{"line":189,"column":71,"offset":6098},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":71,"offset":6098},"end":{"line":189,"column":73,"offset":6100},"indent":[]}},{"type":"text","value":" { return Math.max","position":{"start":{"line":189,"column":73,"offset":6100},"end":{"line":189,"column":91,"offset":6118},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":91,"offset":6118},"end":{"line":189,"column":93,"offset":6120},"indent":[]}},{"type":"text","value":"callback1","position":{"start":{"line":189,"column":93,"offset":6120},"end":{"line":189,"column":102,"offset":6129},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":102,"offset":6129},"end":{"line":189,"column":104,"offset":6131},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":189,"column":104,"offset":6131},"end":{"line":189,"column":107,"offset":6134},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":107,"offset":6134},"end":{"line":189,"column":109,"offset":6136},"indent":[]}},{"type":"text","value":", callback2","position":{"start":{"line":189,"column":109,"offset":6136},"end":{"line":189,"column":120,"offset":6147},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":120,"offset":6147},"end":{"line":189,"column":122,"offset":6149},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":189,"column":122,"offset":6149},"end":{"line":189,"column":125,"offset":6152},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":125,"offset":6152},"end":{"line":189,"column":127,"offset":6154},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":127,"offset":6154},"end":{"line":189,"column":129,"offset":6156},"indent":[]}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":189,"column":129,"offset":6156},"end":{"line":189,"column":180,"offset":6207},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":180,"offset":6207},"end":{"line":189,"column":182,"offset":6209},"indent":[]}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":189,"column":182,"offset":6209},"end":{"line":189,"column":195,"offset":6222},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":195,"offset":6222},"end":{"line":189,"column":197,"offset":6224},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":189,"column":197,"offset":6224},"end":{"line":189,"column":199,"offset":6226},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":189,"column":199,"offset":6226},"end":{"line":189,"column":203,"offset":6230},"indent":[]}},{"type":"text","value":" Math.max","position":{"start":{"line":189,"column":203,"offset":6230},"end":{"line":189,"column":212,"offset":6239},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":212,"offset":6239},"end":{"line":189,"column":214,"offset":6241},"indent":[]}},{"type":"text","value":"cb1","position":{"start":{"line":189,"column":214,"offset":6241},"end":{"line":189,"column":217,"offset":6244},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":217,"offset":6244},"end":{"line":189,"column":219,"offset":6246},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":189,"column":219,"offset":6246},"end":{"line":189,"column":222,"offset":6249},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":222,"offset":6249},"end":{"line":189,"column":224,"offset":6251},"indent":[]}},{"type":"text","value":", cb2","position":{"start":{"line":189,"column":224,"offset":6251},"end":{"line":189,"column":229,"offset":6256},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":189,"column":229,"offset":6256},"end":{"line":189,"column":231,"offset":6258},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":189,"column":231,"offset":6258},"end":{"line":189,"column":234,"offset":6261},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":234,"offset":6261},"end":{"line":189,"column":236,"offset":6263},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":189,"column":236,"offset":6263},"end":{"line":189,"column":238,"offset":6265},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":189,"column":238,"offset":6265},"end":{"line":189,"column":239,"offset":6266},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6028},"end":{"line":189,"column":239,"offset":6266},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```js\n//\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];","position":{"start":{"line":191,"column":1,"offset":6268},"end":{"line":214,"column":4,"offset":6925},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":216,"column":3,"offset":6929},"end":{"line":216,"column":125,"offset":7051},"indent":[]}},{"type":"inlineCode","value":"Array#filter","position":{"start":{"line":216,"column":125,"offset":7051},"end":{"line":216,"column":139,"offset":7065},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":216,"column":139,"offset":7065},"end":{"line":216,"column":140,"offset":7066},"indent":[]}}],"position":{"start":{"line":216,"column":3,"offset":6929},"end":{"line":216,"column":140,"offset":7066},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};","position":{"start":{"line":218,"column":5,"offset":7072},"end":{"line":228,"column":8,"offset":7332},"indent":[1,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":216,"column":1,"offset":6927},"end":{"line":229,"column":1,"offset":7333},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":230,"column":3,"offset":7336},"end":{"line":230,"column":124,"offset":7457},"indent":[]}},{"type":"inlineCode","value":"Array#every","position":{"start":{"line":230,"column":124,"offset":7457},"end":{"line":230,"column":137,"offset":7470},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":230,"column":137,"offset":7470},"end":{"line":230,"column":138,"offset":7471},"indent":[]}}],"position":{"start":{"line":230,"column":3,"offset":7336},"end":{"line":230,"column":138,"offset":7471},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":232,"column":5,"offset":7477},"end":{"line":251,"column":8,"offset":7965},"indent":[1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":230,"column":1,"offset":7334},"end":{"line":251,"column":8,"offset":7965},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":216,"column":1,"offset":6927},"end":{"line":251,"column":8,"offset":7965},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":253,"column":5,"offset":7971},"end":{"line":253,"column":26,"offset":7992},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":7967},"end":{"line":253,"column":26,"offset":7992},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":255,"column":3,"offset":7996},"end":{"line":255,"column":35,"offset":8028},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":255,"column":35,"offset":8028},"end":{"line":255,"column":42,"offset":8035},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":255,"column":42,"offset":8035},"end":{"line":255,"column":44,"offset":8037},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":255,"column":44,"offset":8037},"end":{"line":255,"column":49,"offset":8042},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":255,"column":49,"offset":8042},"end":{"line":255,"column":55,"offset":8048},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":255,"column":55,"offset":8048},"end":{"line":255,"column":60,"offset":8053},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":255,"column":60,"offset":8053},"end":{"line":255,"column":73,"offset":8066},"indent":[]}}],"position":{"start":{"line":255,"column":3,"offset":7996},"end":{"line":255,"column":73,"offset":8066},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":256,"column":7,"offset":8073},"end":{"line":256,"column":14,"offset":8080},"indent":[]}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":256,"column":14,"offset":8080},"end":{"line":256,"column":58,"offset":8124},"indent":[]}}],"position":{"start":{"line":256,"column":7,"offset":8073},"end":{"line":256,"column":58,"offset":8124},"indent":[]}}],"position":{"start":{"line":256,"column":5,"offset":8071},"end":{"line":256,"column":58,"offset":8124},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":257,"column":7,"offset":8131},"end":{"line":257,"column":12,"offset":8136},"indent":[]}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":257,"column":12,"offset":8136},"end":{"line":257,"column":53,"offset":8177},"indent":[]}}],"position":{"start":{"line":257,"column":7,"offset":8131},"end":{"line":257,"column":53,"offset":8177},"indent":[]}}],"position":{"start":{"line":257,"column":5,"offset":8129},"end":{"line":257,"column":53,"offset":8177},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":258,"column":7,"offset":8184},"end":{"line":258,"column":12,"offset":8189},"indent":[]}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":258,"column":12,"offset":8189},"end":{"line":258,"column":123,"offset":8300},"indent":[]}}],"position":{"start":{"line":258,"column":7,"offset":8184},"end":{"line":258,"column":123,"offset":8300},"indent":[]}}],"position":{"start":{"line":258,"column":5,"offset":8182},"end":{"line":258,"column":123,"offset":8300},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":259,"column":7,"offset":8307},"end":{"line":259,"column":97,"offset":8397},"indent":[]}}],"position":{"start":{"line":259,"column":7,"offset":8307},"end":{"line":259,"column":97,"offset":8397},"indent":[]}}],"position":{"start":{"line":259,"column":5,"offset":8305},"end":{"line":259,"column":97,"offset":8397},"indent":[]}}],"position":{"start":{"line":256,"column":5,"offset":8071},"end":{"line":259,"column":97,"offset":8397},"indent":[5,5,5]}}],"position":{"start":{"line":255,"column":1,"offset":7994},"end":{"line":259,"column":97,"offset":8397},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":260,"column":3,"offset":8400},"end":{"line":260,"column":34,"offset":8431},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":260,"column":34,"offset":8431},"end":{"line":260,"column":41,"offset":8438},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":260,"column":41,"offset":8438},"end":{"line":260,"column":43,"offset":8440},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":260,"column":43,"offset":8440},"end":{"line":260,"column":48,"offset":8445},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":260,"column":48,"offset":8445},"end":{"line":260,"column":54,"offset":8451},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":260,"column":54,"offset":8451},"end":{"line":260,"column":59,"offset":8456},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":260,"column":59,"offset":8456},"end":{"line":260,"column":72,"offset":8469},"indent":[]}}],"position":{"start":{"line":260,"column":3,"offset":8400},"end":{"line":260,"column":72,"offset":8469},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":261,"column":7,"offset":8476},"end":{"line":261,"column":12,"offset":8481},"indent":[]}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":261,"column":12,"offset":8481},"end":{"line":261,"column":93,"offset":8562},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":261,"column":93,"offset":8562},"end":{"line":261,"column":95,"offset":8564},"indent":[]}},{"type":"text","value":"but not assignment","position":{"start":{"line":261,"column":95,"offset":8564},"end":{"line":261,"column":113,"offset":8582},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":261,"column":113,"offset":8582},"end":{"line":261,"column":115,"offset":8584},"indent":[]}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":261,"column":115,"offset":8584},"end":{"line":261,"column":128,"offset":8597},"indent":[]}}],"position":{"start":{"line":261,"column":7,"offset":8476},"end":{"line":261,"column":128,"offset":8597},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":262,"column":11,"offset":8608},"end":{"line":262,"column":83,"offset":8680},"indent":[]}}],"position":{"start":{"line":262,"column":11,"offset":8608},"end":{"line":262,"column":83,"offset":8680},"indent":[]}}],"position":{"start":{"line":262,"column":9,"offset":8606},"end":{"line":262,"column":83,"offset":8680},"indent":[]}}],"position":{"start":{"line":262,"column":9,"offset":8606},"end":{"line":262,"column":83,"offset":8680},"indent":[]}}],"position":{"start":{"line":261,"column":5,"offset":8474},"end":{"line":262,"column":83,"offset":8680},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":263,"column":7,"offset":8687},"end":{"line":263,"column":12,"offset":8692},"indent":[]}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":263,"column":12,"offset":8692},"end":{"line":263,"column":64,"offset":8744},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":263,"column":64,"offset":8744},"end":{"line":263,"column":69,"offset":8749},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":263,"column":69,"offset":8749},"end":{"line":263,"column":73,"offset":8753},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":263,"column":73,"offset":8753},"end":{"line":263,"column":80,"offset":8760},"indent":[]}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":263,"column":80,"offset":8760},"end":{"line":263,"column":141,"offset":8821},"indent":[]}}],"position":{"start":{"line":263,"column":7,"offset":8687},"end":{"line":263,"column":141,"offset":8821},"indent":[]}}],"position":{"start":{"line":263,"column":5,"offset":8685},"end":{"line":263,"column":141,"offset":8821},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":264,"column":7,"offset":8828},"end":{"line":264,"column":14,"offset":8835},"indent":[]}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":264,"column":14,"offset":8835},"end":{"line":264,"column":153,"offset":8974},"indent":[]}}],"position":{"start":{"line":264,"column":7,"offset":8828},"end":{"line":264,"column":153,"offset":8974},"indent":[]}}],"position":{"start":{"line":264,"column":5,"offset":8826},"end":{"line":264,"column":153,"offset":8974},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":265,"column":7,"offset":8981},"end":{"line":265,"column":82,"offset":9056},"indent":[]}}],"position":{"start":{"line":265,"column":7,"offset":8981},"end":{"line":265,"column":82,"offset":9056},"indent":[]}}],"position":{"start":{"line":265,"column":5,"offset":8979},"end":{"line":265,"column":82,"offset":9056},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":266,"column":7,"offset":9063},"end":{"line":266,"column":121,"offset":9177},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":266,"column":121,"offset":9177},"end":{"line":266,"column":132,"offset":9188},"indent":[]}},{"type":"text","value":" like ","position":{"start":{"line":266,"column":132,"offset":9188},"end":{"line":266,"column":138,"offset":9194},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":266,"column":138,"offset":9194},"end":{"line":266,"column":143,"offset":9199},"indent":[]}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":266,"column":143,"offset":9199},"end":{"line":266,"column":248,"offset":9304},"indent":[]}}],"position":{"start":{"line":266,"column":7,"offset":9063},"end":{"line":266,"column":248,"offset":9304},"indent":[]}}],"position":{"start":{"line":266,"column":5,"offset":9061},"end":{"line":266,"column":248,"offset":9304},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":267,"column":7,"offset":9311},"end":{"line":267,"column":25,"offset":9329},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":267,"column":25,"offset":9329},"end":{"line":267,"column":30,"offset":9334},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":267,"column":30,"offset":9334},"end":{"line":267,"column":34,"offset":9338},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":267,"column":34,"offset":9338},"end":{"line":267,"column":39,"offset":9343},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":267,"column":39,"offset":9343},"end":{"line":267,"column":43,"offset":9347},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":267,"column":43,"offset":9347},"end":{"line":267,"column":50,"offset":9354},"indent":[]}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":267,"column":50,"offset":9354},"end":{"line":267,"column":111,"offset":9415},"indent":[]}}],"position":{"start":{"line":267,"column":7,"offset":9311},"end":{"line":267,"column":111,"offset":9415},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":268,"column":11,"offset":9426},"end":{"line":268,"column":86,"offset":9501},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":268,"column":86,"offset":9501},"end":{"line":268,"column":88,"offset":9503},"indent":[]}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":268,"column":88,"offset":9503},"end":{"line":268,"column":146,"offset":9561},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":268,"column":146,"offset":9561},"end":{"line":268,"column":148,"offset":9563},"indent":[]}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":268,"column":148,"offset":9563},"end":{"line":268,"column":240,"offset":9655},"indent":[]}}],"position":{"start":{"line":268,"column":11,"offset":9426},"end":{"line":268,"column":240,"offset":9655},"indent":[]}}],"position":{"start":{"line":268,"column":9,"offset":9424},"end":{"line":268,"column":240,"offset":9655},"indent":[]}}],"position":{"start":{"line":268,"column":9,"offset":9424},"end":{"line":268,"column":240,"offset":9655},"indent":[]}}],"position":{"start":{"line":267,"column":5,"offset":9309},"end":{"line":268,"column":240,"offset":9655},"indent":[5]}}],"position":{"start":{"line":261,"column":5,"offset":8474},"end":{"line":268,"column":240,"offset":9655},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":260,"column":1,"offset":8398},"end":{"line":268,"column":240,"offset":9655},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":269,"column":3,"offset":9658},"end":{"line":269,"column":110,"offset":9765},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":9658},"end":{"line":269,"column":110,"offset":9765},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":270,"column":7,"offset":9772},"end":{"line":270,"column":98,"offset":9863},"indent":[]}}],"position":{"start":{"line":270,"column":7,"offset":9772},"end":{"line":270,"column":98,"offset":9863},"indent":[]}}],"position":{"start":{"line":270,"column":5,"offset":9770},"end":{"line":270,"column":98,"offset":9863},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":271,"column":7,"offset":9870},"end":{"line":271,"column":42,"offset":9905},"indent":[]}},{"type":"inlineCode","value":"window","position":{"start":{"line":271,"column":42,"offset":9905},"end":{"line":271,"column":50,"offset":9913},"indent":[]}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":271,"column":50,"offset":9913},"end":{"line":271,"column":81,"offset":9944},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":271,"column":81,"offset":9944},"end":{"line":271,"column":89,"offset":9952},"indent":[]}},{"type":"text","value":" object in Node.js","position":{"start":{"line":271,"column":89,"offset":9952},"end":{"line":271,"column":107,"offset":9970},"indent":[]}}],"position":{"start":{"line":271,"column":7,"offset":9870},"end":{"line":271,"column":107,"offset":9970},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":272,"column":11,"offset":9981},"end":{"line":272,"column":97,"offset":10067},"indent":[]}}],"position":{"start":{"line":272,"column":11,"offset":9981},"end":{"line":272,"column":97,"offset":10067},"indent":[]}}],"position":{"start":{"line":272,"column":9,"offset":9979},"end":{"line":272,"column":97,"offset":10067},"indent":[]}}],"position":{"start":{"line":272,"column":9,"offset":9979},"end":{"line":272,"column":97,"offset":10067},"indent":[]}}],"position":{"start":{"line":271,"column":5,"offset":9868},"end":{"line":272,"column":97,"offset":10067},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":273,"column":7,"offset":10074},"end":{"line":273,"column":80,"offset":10147},"indent":[]}}],"position":{"start":{"line":273,"column":7,"offset":10074},"end":{"line":273,"column":80,"offset":10147},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":274,"column":11,"offset":10158},"end":{"line":274,"column":57,"offset":10204},"indent":[]}}],"position":{"start":{"line":274,"column":11,"offset":10158},"end":{"line":274,"column":57,"offset":10204},"indent":[]}}],"position":{"start":{"line":274,"column":9,"offset":10156},"end":{"line":274,"column":57,"offset":10204},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":275,"column":11,"offset":10215},"end":{"line":275,"column":157,"offset":10361},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":275,"column":157,"offset":10361},"end":{"line":275,"column":159,"offset":10363},"indent":[]}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":275,"column":159,"offset":10363},"end":{"line":275,"column":182,"offset":10386},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":275,"column":182,"offset":10386},"end":{"line":275,"column":184,"offset":10388},"indent":[]}}],"position":{"start":{"line":275,"column":11,"offset":10215},"end":{"line":275,"column":184,"offset":10388},"indent":[]}}],"position":{"start":{"line":275,"column":9,"offset":10213},"end":{"line":275,"column":184,"offset":10388},"indent":[]}}],"position":{"start":{"line":274,"column":9,"offset":10156},"end":{"line":275,"column":184,"offset":10388},"indent":[9]}}],"position":{"start":{"line":273,"column":5,"offset":10072},"end":{"line":275,"column":184,"offset":10388},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for blocks ","position":{"start":{"line":276,"column":7,"offset":10395},"end":{"line":276,"column":18,"offset":10406},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":276,"column":18,"offset":10406},"end":{"line":276,"column":20,"offset":10408},"indent":[]}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":276,"column":20,"offset":10408},"end":{"line":276,"column":44,"offset":10432},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":276,"column":44,"offset":10432},"end":{"line":276,"column":48,"offset":10436},"indent":[]}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":276,"column":48,"offset":10436},"end":{"line":276,"column":72,"offset":10460},"indent":[]}},{"type":"inlineCode","value":"for","position":{"start":{"line":276,"column":72,"offset":10460},"end":{"line":276,"column":77,"offset":10465},"indent":[]}},{"type":"text","value":" loops","position":{"start":{"line":276,"column":77,"offset":10465},"end":{"line":276,"column":83,"offset":10471},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":276,"column":83,"offset":10471},"end":{"line":276,"column":85,"offset":10473},"indent":[]}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":276,"column":85,"offset":10473},"end":{"line":276,"column":116,"offset":10504},"indent":[]}}],"position":{"start":{"line":276,"column":7,"offset":10395},"end":{"line":276,"column":116,"offset":10504},"indent":[]}}],"position":{"start":{"line":276,"column":5,"offset":10393},"end":{"line":276,"column":116,"offset":10504},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":277,"column":7,"offset":10511},"end":{"line":277,"column":71,"offset":10575},"indent":[]}}],"position":{"start":{"line":277,"column":7,"offset":10511},"end":{"line":277,"column":71,"offset":10575},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":278,"column":11,"offset":10586},"end":{"line":278,"column":153,"offset":10728},"indent":[]}}],"position":{"start":{"line":278,"column":11,"offset":10586},"end":{"line":278,"column":153,"offset":10728},"indent":[]}}],"position":{"start":{"line":278,"column":9,"offset":10584},"end":{"line":278,"column":153,"offset":10728},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":279,"column":11,"offset":10739},"end":{"line":279,"column":61,"offset":10789},"indent":[]}}],"position":{"start":{"line":279,"column":11,"offset":10739},"end":{"line":279,"column":61,"offset":10789},"indent":[]}}],"position":{"start":{"line":279,"column":9,"offset":10737},"end":{"line":279,"column":61,"offset":10789},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":280,"column":11,"offset":10800},"end":{"line":280,"column":68,"offset":10857},"indent":[]}}],"position":{"start":{"line":280,"column":11,"offset":10800},"end":{"line":280,"column":68,"offset":10857},"indent":[]}}],"position":{"start":{"line":280,"column":9,"offset":10798},"end":{"line":280,"column":68,"offset":10857},"indent":[]}}],"position":{"start":{"line":278,"column":9,"offset":10584},"end":{"line":280,"column":68,"offset":10857},"indent":[9,9]}}],"position":{"start":{"line":277,"column":5,"offset":10509},"end":{"line":280,"column":68,"offset":10857},"indent":[5,5,5]}}],"position":{"start":{"line":270,"column":5,"offset":9770},"end":{"line":280,"column":68,"offset":10857},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":269,"column":1,"offset":9656},"end":{"line":280,"column":68,"offset":10857},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":281,"column":3,"offset":10860},"end":{"line":281,"column":27,"offset":10884},"indent":[]}}],"position":{"start":{"line":281,"column":3,"offset":10860},"end":{"line":281,"column":27,"offset":10884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":283,"column":5,"offset":10890},"end":{"line":283,"column":7,"offset":10892},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":283,"column":7,"offset":10892},"end":{"line":283,"column":9,"offset":10894},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":283,"column":9,"offset":10894},"end":{"line":283,"column":11,"offset":10896},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":283,"column":11,"offset":10896},"end":{"line":283,"column":21,"offset":10906},"indent":[]}}],"position":{"start":{"line":283,"column":5,"offset":10890},"end":{"line":283,"column":21,"offset":10906},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":285,"column":5,"offset":10912},"end":{"line":285,"column":25,"offset":10932},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":285,"column":25,"offset":10932},"end":{"line":285,"column":27,"offset":10934},"indent":[]}},{"type":"text","value":"param1, param2","position":{"start":{"line":285,"column":27,"offset":10934},"end":{"line":285,"column":41,"offset":10948},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":285,"column":41,"offset":10948},"end":{"line":285,"column":43,"offset":10950},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":285,"column":43,"offset":10950},"end":{"line":285,"column":45,"offset":10952},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":285,"column":45,"offset":10952},"end":{"line":285,"column":49,"offset":10956},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":285,"column":49,"offset":10956},"end":{"line":285,"column":51,"offset":10958},"indent":[]}}],"position":{"start":{"line":285,"column":5,"offset":10912},"end":{"line":285,"column":51,"offset":10958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":287,"column":5,"offset":10964},"end":{"line":287,"column":31,"offset":10990},"indent":[]}}],"position":{"start":{"line":287,"column":5,"offset":10964},"end":{"line":287,"column":31,"offset":10990},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return sum;","position":{"start":{"line":289,"column":5,"offset":10996},"end":{"line":289,"column":16,"offset":11007},"indent":[]}}],"position":{"start":{"line":289,"column":5,"offset":10996},"end":{"line":289,"column":16,"offset":11007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":291,"column":5,"offset":11013},"end":{"line":291,"column":6,"offset":11014},"indent":[]}}],"position":{"start":{"line":291,"column":5,"offset":11013},"end":{"line":291,"column":6,"offset":11014},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":10858},"end":{"line":291,"column":6,"offset":11014},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":255,"column":1,"offset":7994},"end":{"line":291,"column":6,"offset":11014},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":293,"column":1,"offset":11016},"end":{"line":293,"column":84,"offset":11099},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":293,"column":84,"offset":11099},"end":{"line":293,"column":88,"offset":11103},"indent":[]}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":293,"column":88,"offset":11103},"end":{"line":293,"column":118,"offset":11133},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":11016},"end":{"line":293,"column":118,"offset":11133},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":295,"column":1,"offset":11135},"end":{"line":295,"column":96,"offset":11230},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":295,"column":96,"offset":11230},"end":{"line":295,"column":100,"offset":11234},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":295,"column":100,"offset":11234},"end":{"line":295,"column":111,"offset":11245},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":11135},"end":{"line":295,"column":111,"offset":11245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":297,"column":1,"offset":11247},"end":{"line":297,"column":103,"offset":11349},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":297,"column":103,"offset":11349},"end":{"line":297,"column":107,"offset":11353},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":297,"column":107,"offset":11353},"end":{"line":297,"column":118,"offset":11364},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":11247},"end":{"line":297,"column":118,"offset":11364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":299,"column":1,"offset":11366},"end":{"line":299,"column":3,"offset":11368},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":299,"column":3,"offset":11368},"end":{"line":299,"column":5,"offset":11370},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":299,"column":5,"offset":11370},"end":{"line":299,"column":7,"offset":11372},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":11366},"end":{"line":299,"column":7,"offset":11372},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":301,"column":3,"offset":11376},"end":{"line":301,"column":48,"offset":11421},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":301,"column":48,"offset":11421},"end":{"line":301,"column":54,"offset":11427},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":301,"column":54,"offset":11427},"end":{"line":301,"column":81,"offset":11454},"indent":[]}}],"position":{"start":{"line":301,"column":3,"offset":11376},"end":{"line":301,"column":81,"offset":11454},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":303,"column":7,"offset":11462},"end":{"line":303,"column":83,"offset":11538},"indent":[]}}],"position":{"start":{"line":303,"column":7,"offset":11462},"end":{"line":303,"column":83,"offset":11538},"indent":[]}}],"position":{"start":{"line":303,"column":5,"offset":11460},"end":{"line":303,"column":83,"offset":11538},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":304,"column":7,"offset":11545},"end":{"line":304,"column":73,"offset":11611},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":304,"column":73,"offset":11611},"end":{"line":304,"column":75,"offset":11613},"indent":[]}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":304,"column":75,"offset":11613},"end":{"line":304,"column":109,"offset":11647},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":304,"column":109,"offset":11647},"end":{"line":304,"column":124,"offset":11662},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":304,"column":124,"offset":11662},"end":{"line":304,"column":126,"offset":11664},"indent":[]}}],"position":{"start":{"line":304,"column":7,"offset":11545},"end":{"line":304,"column":126,"offset":11664},"indent":[]}}],"position":{"start":{"line":304,"column":5,"offset":11543},"end":{"line":304,"column":126,"offset":11664},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":305,"column":7,"offset":11671},"end":{"line":305,"column":147,"offset":11811},"indent":[]}}],"position":{"start":{"line":305,"column":7,"offset":11671},"end":{"line":305,"column":147,"offset":11811},"indent":[]}}],"position":{"start":{"line":305,"column":5,"offset":11669},"end":{"line":305,"column":147,"offset":11811},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":306,"column":7,"offset":11818},"end":{"line":306,"column":69,"offset":11880},"indent":[]}}],"position":{"start":{"line":306,"column":7,"offset":11818},"end":{"line":306,"column":69,"offset":11880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":308,"column":9,"offset":11890},"end":{"line":308,"column":11,"offset":11892},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":308,"column":11,"offset":11892},"end":{"line":308,"column":13,"offset":11894},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":308,"column":13,"offset":11894},"end":{"line":308,"column":15,"offset":11896},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":308,"column":15,"offset":11896},"end":{"line":308,"column":25,"offset":11906},"indent":[]}}],"position":{"start":{"line":308,"column":9,"offset":11890},"end":{"line":308,"column":25,"offset":11906},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let obj = {","position":{"start":{"line":310,"column":9,"offset":11916},"end":{"line":310,"column":20,"offset":11927},"indent":[]}}],"position":{"start":{"line":310,"column":9,"offset":11916},"end":{"line":310,"column":20,"offset":11927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":312,"column":9,"offset":11937},"end":{"line":312,"column":27,"offset":11955},"indent":[]}}],"position":{"start":{"line":312,"column":9,"offset":11937},"end":{"line":312,"column":27,"offset":11955},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":314,"column":9,"offset":11965},"end":{"line":314,"column":31,"offset":11987},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":314,"column":31,"offset":11987},"end":{"line":314,"column":33,"offset":11989},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":314,"column":33,"offset":11989},"end":{"line":314,"column":35,"offset":11991},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":314,"column":35,"offset":11991},"end":{"line":314,"column":37,"offset":11993},"indent":[]}}],"position":{"start":{"line":314,"column":9,"offset":11965},"end":{"line":314,"column":37,"offset":11993},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return this.name;","position":{"start":{"line":316,"column":9,"offset":12003},"end":{"line":316,"column":26,"offset":12020},"indent":[]}}],"position":{"start":{"line":316,"column":9,"offset":12003},"end":{"line":316,"column":26,"offset":12020},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":318,"column":9,"offset":12030},"end":{"line":318,"column":72,"offset":12093},"indent":[]}}],"position":{"start":{"line":318,"column":9,"offset":12030},"end":{"line":318,"column":72,"offset":12093},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":320,"column":9,"offset":12103},"end":{"line":320,"column":11,"offset":12105},"indent":[]}}],"position":{"start":{"line":320,"column":9,"offset":12103},"end":{"line":320,"column":11,"offset":12105},"indent":[]}}],"position":{"start":{"line":306,"column":5,"offset":11816},"end":{"line":320,"column":11,"offset":12105},"indent":[1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":303,"column":5,"offset":11460},"end":{"line":320,"column":11,"offset":12105},"indent":[5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":301,"column":1,"offset":11374},"end":{"line":320,"column":11,"offset":12105},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":301,"column":1,"offset":11374},"end":{"line":320,"column":11,"offset":12105},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":322,"column":1,"offset":12107},"end":{"line":322,"column":4,"offset":12110},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":324,"column":1,"offset":12112},"end":{"line":324,"column":16,"offset":12127},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":324,"column":16,"offset":12127},"end":{"line":324,"column":18,"offset":12129},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":324,"column":18,"offset":12129},"end":{"line":324,"column":20,"offset":12131},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":324,"column":20,"offset":12131},"end":{"line":324,"column":22,"offset":12133},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":324,"column":22,"offset":12133},"end":{"line":324,"column":26,"offset":12137},"indent":[]}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":324,"column":26,"offset":12137},"end":{"line":324,"column":212,"offset":12323},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":12112},"end":{"line":324,"column":212,"offset":12323},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nmakeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined","position":{"start":{"line":326,"column":1,"offset":12325},"end":{"line":366,"column":4,"offset":15441},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":368,"column":1,"offset":15443},"end":{"line":368,"column":2,"offset":15444},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":15443},"end":{"line":368,"column":2,"offset":15444},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n---\n\n\n```js\n//\n\n\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());","position":{"start":{"line":370,"column":1,"offset":15446},"end":{"line":438,"column":4,"offset":18405},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":440,"column":3,"offset":18409},"end":{"line":440,"column":35,"offset":18441},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":440,"column":35,"offset":18441},"end":{"line":440,"column":41,"offset":18447},"indent":[]}},{"type":"text","value":" on an object literal","position":{"start":{"line":440,"column":41,"offset":18447},"end":{"line":440,"column":62,"offset":18468},"indent":[]}}],"position":{"start":{"line":440,"column":3,"offset":18409},"end":{"line":440,"column":62,"offset":18468},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we use ","position":{"start":{"line":441,"column":7,"offset":18475},"end":{"line":441,"column":19,"offset":18487},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":441,"column":19,"offset":18487},"end":{"line":441,"column":25,"offset":18493},"indent":[]}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":441,"column":25,"offset":18493},"end":{"line":441,"column":91,"offset":18559},"indent":[]}}],"position":{"start":{"line":441,"column":7,"offset":18475},"end":{"line":441,"column":91,"offset":18559},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":442,"column":11,"offset":18570},"end":{"line":442,"column":108,"offset":18667},"indent":[]}}],"position":{"start":{"line":442,"column":11,"offset":18570},"end":{"line":442,"column":108,"offset":18667},"indent":[]}}],"position":{"start":{"line":442,"column":9,"offset":18568},"end":{"line":442,"column":108,"offset":18667},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":443,"column":11,"offset":18678},"end":{"line":443,"column":37,"offset":18704},"indent":[]}},{"type":"inlineCode","value":"object.method(args)","position":{"start":{"line":443,"column":37,"offset":18704},"end":{"line":443,"column":58,"offset":18725},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":443,"column":58,"offset":18725},"end":{"line":443,"column":59,"offset":18726},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":443,"column":59,"offset":18726},"end":{"line":443,"column":61,"offset":18728},"indent":[]}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":443,"column":61,"offset":18728},"end":{"line":443,"column":89,"offset":18756},"indent":[]}},{"type":"inlineCode","value":"Array#push","position":{"start":{"line":443,"column":89,"offset":18756},"end":{"line":443,"column":101,"offset":18768},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":443,"column":101,"offset":18768},"end":{"line":443,"column":106,"offset":18773},"indent":[]}},{"type":"inlineCode","value":"String#toUpperCase","position":{"start":{"line":443,"column":106,"offset":18773},"end":{"line":443,"column":126,"offset":18793},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":443,"column":126,"offset":18793},"end":{"line":443,"column":128,"offset":18795},"indent":[]}}],"position":{"start":{"line":443,"column":11,"offset":18678},"end":{"line":443,"column":128,"offset":18795},"indent":[]}}],"position":{"start":{"line":443,"column":9,"offset":18676},"end":{"line":443,"column":128,"offset":18795},"indent":[]}}],"position":{"start":{"line":442,"column":9,"offset":18568},"end":{"line":443,"column":128,"offset":18795},"indent":[9]}}],"position":{"start":{"line":441,"column":5,"offset":18473},"end":{"line":443,"column":128,"offset":18795},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":444,"column":7,"offset":18802},"end":{"line":444,"column":53,"offset":18848},"indent":[]}}],"position":{"start":{"line":444,"column":7,"offset":18802},"end":{"line":444,"column":53,"offset":18848},"indent":[]}}],"position":{"start":{"line":444,"column":5,"offset":18800},"end":{"line":444,"column":53,"offset":18848},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":445,"column":7,"offset":18855},"end":{"line":445,"column":85,"offset":18933},"indent":[]}}],"position":{"start":{"line":445,"column":7,"offset":18855},"end":{"line":445,"column":85,"offset":18933},"indent":[]}}],"position":{"start":{"line":445,"column":5,"offset":18853},"end":{"line":445,"column":85,"offset":18933},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":446,"column":7,"offset":18940},"end":{"line":446,"column":114,"offset":19047},"indent":[]}}],"position":{"start":{"line":446,"column":7,"offset":18940},"end":{"line":446,"column":114,"offset":19047},"indent":[]}}],"position":{"start":{"line":446,"column":5,"offset":18938},"end":{"line":446,"column":114,"offset":19047},"indent":[]}}],"position":{"start":{"line":441,"column":5,"offset":18473},"end":{"line":446,"column":114,"offset":19047},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":440,"column":1,"offset":18407},"end":{"line":446,"column":114,"offset":19047},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":447,"column":3,"offset":19050},"end":{"line":447,"column":24,"offset":19071},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":447,"column":24,"offset":19071},"end":{"line":447,"column":39,"offset":19086},"indent":[]}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":447,"column":39,"offset":19086},"end":{"line":447,"column":85,"offset":19132},"indent":[]}}],"position":{"start":{"line":447,"column":3,"offset":19050},"end":{"line":447,"column":85,"offset":19132},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":449,"column":7,"offset":19140},"end":{"line":449,"column":131,"offset":19264},"indent":[]}}],"position":{"start":{"line":449,"column":7,"offset":19140},"end":{"line":449,"column":131,"offset":19264},"indent":[]}}],"position":{"start":{"line":449,"column":5,"offset":19138},"end":{"line":449,"column":131,"offset":19264},"indent":[]}}],"position":{"start":{"line":449,"column":5,"offset":19138},"end":{"line":449,"column":131,"offset":19264},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"","position":{"start":{"line":451,"column":5,"offset":19270},"end":{"line":464,"column":8,"offset":19681},"indent":[5,5,5,5,5,5,5,5,5,1,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":466,"column":5,"offset":19687},"end":{"line":466,"column":7,"offset":19689},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":466,"column":7,"offset":19689},"end":{"line":466,"column":9,"offset":19691},"indent":[]}}],"position":{"start":{"line":466,"column":5,"offset":19687},"end":{"line":466,"column":9,"offset":19691},"indent":[]}}],"position":{"start":{"line":447,"column":1,"offset":19048},"end":{"line":466,"column":9,"offset":19691},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":440,"column":1,"offset":18407},"end":{"line":466,"column":9,"offset":19691},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":468,"column":1,"offset":19693},"end":{"line":468,"column":4,"offset":19696},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":470,"column":1,"offset":19698},"end":{"line":470,"column":4,"offset":19701},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\n//\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":472,"column":1,"offset":19703},"end":{"line":501,"column":4,"offset":21649},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":503,"column":3,"offset":21653},"end":{"line":503,"column":58,"offset":21708},"indent":[]}}],"position":{"start":{"line":503,"column":3,"offset":21653},"end":{"line":503,"column":58,"offset":21708},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":504,"column":7,"offset":21715},"end":{"line":504,"column":103,"offset":21811},"indent":[]}}],"position":{"start":{"line":504,"column":7,"offset":21715},"end":{"line":504,"column":103,"offset":21811},"indent":[]}}],"position":{"start":{"line":504,"column":5,"offset":21713},"end":{"line":504,"column":103,"offset":21811},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":505,"column":7,"offset":21818},"end":{"line":505,"column":103,"offset":21914},"indent":[]}}],"position":{"start":{"line":505,"column":7,"offset":21818},"end":{"line":505,"column":103,"offset":21914},"indent":[]}}],"position":{"start":{"line":505,"column":5,"offset":21816},"end":{"line":505,"column":103,"offset":21914},"indent":[]}}],"position":{"start":{"line":504,"column":5,"offset":21713},"end":{"line":505,"column":103,"offset":21914},"indent":[5]}}],"position":{"start":{"line":503,"column":1,"offset":21651},"end":{"line":505,"column":103,"offset":21914},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":506,"column":3,"offset":21917},"end":{"line":506,"column":53,"offset":21967},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":506,"column":53,"offset":21967},"end":{"line":506,"column":59,"offset":21973},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":506,"column":59,"offset":21973},"end":{"line":506,"column":181,"offset":22095},"indent":[]}}],"position":{"start":{"line":506,"column":3,"offset":21917},"end":{"line":506,"column":181,"offset":22095},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":508,"column":5,"offset":22101},"end":{"line":518,"column":8,"offset":22349},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":506,"column":1,"offset":21915},"end":{"line":518,"column":8,"offset":22349},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":503,"column":1,"offset":21651},"end":{"line":518,"column":8,"offset":22349},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":520,"column":1,"offset":22351},"end":{"line":520,"column":29,"offset":22379},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":520,"column":29,"offset":22379},"end":{"line":520,"column":44,"offset":22394},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":520,"column":44,"offset":22394},"end":{"line":520,"column":105,"offset":22455},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":520,"column":105,"offset":22455},"end":{"line":520,"column":111,"offset":22461},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":520,"column":111,"offset":22461},"end":{"line":520,"column":148,"offset":22498},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":520,"column":148,"offset":22498},"end":{"line":520,"column":154,"offset":22504},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":520,"column":154,"offset":22504},"end":{"line":520,"column":274,"offset":22624},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":22351},"end":{"line":520,"column":274,"offset":22624},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":522,"column":1,"offset":22626},"end":{"line":522,"column":4,"offset":22629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":524,"column":1,"offset":22631},"end":{"line":524,"column":40,"offset":22670},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":524,"column":40,"offset":22670},"end":{"line":524,"column":42,"offset":22672},"indent":[]}},{"type":"text","value":"sayMeow","position":{"start":{"line":524,"column":42,"offset":22672},"end":{"line":524,"column":49,"offset":22679},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":524,"column":49,"offset":22679},"end":{"line":524,"column":51,"offset":22681},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":524,"column":51,"offset":22681},"end":{"line":524,"column":53,"offset":22683},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":524,"column":53,"offset":22683},"end":{"line":524,"column":55,"offset":22685},"indent":[]}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":524,"column":55,"offset":22685},"end":{"line":524,"column":98,"offset":22728},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":22631},"end":{"line":524,"column":98,"offset":22728},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":526,"column":1,"offset":22730},"end":{"line":526,"column":69,"offset":22798},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":526,"column":69,"offset":22798},"end":{"line":526,"column":75,"offset":22804},"indent":[]}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":526,"column":75,"offset":22804},"end":{"line":526,"column":125,"offset":22854},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":526,"column":125,"offset":22854},"end":{"line":526,"column":127,"offset":22856},"indent":[]}},{"type":"text","value":"cat","position":{"start":{"line":526,"column":127,"offset":22856},"end":{"line":526,"column":130,"offset":22859},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":526,"column":130,"offset":22859},"end":{"line":526,"column":132,"offset":22861},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":526,"column":132,"offset":22861},"end":{"line":526,"column":133,"offset":22862},"indent":[]}}],"position":{"start":{"line":526,"column":1,"offset":22730},"end":{"line":526,"column":133,"offset":22862},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundCat","position":{"start":{"line":528,"column":1,"offset":22864},"end":{"line":528,"column":9,"offset":22872},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":528,"column":9,"offset":22872},"end":{"line":528,"column":11,"offset":22874},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":528,"column":11,"offset":22874},"end":{"line":528,"column":13,"offset":22876},"indent":[]}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":528,"column":13,"offset":22876},"end":{"line":528,"column":31,"offset":22894},"indent":[]}}],"position":{"start":{"line":528,"column":1,"offset":22864},"end":{"line":528,"column":31,"offset":22894},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\n//\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":530,"column":1,"offset":22896},"end":{"line":558,"column":4,"offset":24841},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":560,"column":3,"offset":24845},"end":{"line":560,"column":58,"offset":24900},"indent":[]}}],"position":{"start":{"line":560,"column":3,"offset":24845},"end":{"line":560,"column":58,"offset":24900},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":561,"column":7,"offset":24907},"end":{"line":561,"column":103,"offset":25003},"indent":[]}}],"position":{"start":{"line":561,"column":7,"offset":24907},"end":{"line":561,"column":103,"offset":25003},"indent":[]}}],"position":{"start":{"line":561,"column":5,"offset":24905},"end":{"line":561,"column":103,"offset":25003},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":562,"column":7,"offset":25010},"end":{"line":562,"column":103,"offset":25106},"indent":[]}}],"position":{"start":{"line":562,"column":7,"offset":25010},"end":{"line":562,"column":103,"offset":25106},"indent":[]}}],"position":{"start":{"line":562,"column":5,"offset":25008},"end":{"line":562,"column":103,"offset":25106},"indent":[]}}],"position":{"start":{"line":561,"column":5,"offset":24905},"end":{"line":562,"column":103,"offset":25106},"indent":[5]}}],"position":{"start":{"line":560,"column":1,"offset":24843},"end":{"line":562,"column":103,"offset":25106},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":563,"column":3,"offset":25109},"end":{"line":563,"column":53,"offset":25159},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":563,"column":53,"offset":25159},"end":{"line":563,"column":59,"offset":25165},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":563,"column":59,"offset":25165},"end":{"line":563,"column":181,"offset":25287},"indent":[]}}],"position":{"start":{"line":563,"column":3,"offset":25109},"end":{"line":563,"column":181,"offset":25287},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":565,"column":5,"offset":25293},"end":{"line":565,"column":7,"offset":25295},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":565,"column":7,"offset":25295},"end":{"line":565,"column":9,"offset":25297},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":565,"column":9,"offset":25297},"end":{"line":565,"column":11,"offset":25299},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":565,"column":11,"offset":25299},"end":{"line":565,"column":21,"offset":25309},"indent":[]}}],"position":{"start":{"line":565,"column":5,"offset":25293},"end":{"line":565,"column":21,"offset":25309},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let cat = {","position":{"start":{"line":567,"column":5,"offset":25315},"end":{"line":567,"column":16,"offset":25326},"indent":[]}}],"position":{"start":{"line":567,"column":5,"offset":25315},"end":{"line":567,"column":16,"offset":25326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purr: function ","position":{"start":{"line":569,"column":5,"offset":25332},"end":{"line":569,"column":20,"offset":25347},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":569,"column":20,"offset":25347},"end":{"line":569,"column":22,"offset":25349},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":569,"column":22,"offset":25349},"end":{"line":569,"column":24,"offset":25351},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":569,"column":24,"offset":25351},"end":{"line":569,"column":26,"offset":25353},"indent":[]}}],"position":{"start":{"line":569,"column":5,"offset":25332},"end":{"line":569,"column":26,"offset":25353},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":571,"column":5,"offset":25359},"end":{"line":571,"column":16,"offset":25370},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":571,"column":16,"offset":25370},"end":{"line":571,"column":18,"offset":25372},"indent":[]}},{"type":"text","value":"\"meow\"","position":{"start":{"line":571,"column":18,"offset":25372},"end":{"line":571,"column":24,"offset":25378},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":571,"column":24,"offset":25378},"end":{"line":571,"column":26,"offset":25380},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":571,"column":26,"offset":25380},"end":{"line":571,"column":27,"offset":25381},"indent":[]}}],"position":{"start":{"line":571,"column":5,"offset":25359},"end":{"line":571,"column":27,"offset":25381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":573,"column":5,"offset":25387},"end":{"line":573,"column":7,"offset":25389},"indent":[]}}],"position":{"start":{"line":573,"column":5,"offset":25387},"end":{"line":573,"column":7,"offset":25389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":575,"column":5,"offset":25395},"end":{"line":575,"column":24,"offset":25414},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":575,"column":24,"offset":25414},"end":{"line":575,"column":26,"offset":25416},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":575,"column":26,"offset":25416},"end":{"line":575,"column":28,"offset":25418},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":575,"column":28,"offset":25418},"end":{"line":575,"column":30,"offset":25420},"indent":[]}}],"position":{"start":{"line":575,"column":5,"offset":25395},"end":{"line":575,"column":30,"offset":25420},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"this.purr","position":{"start":{"line":577,"column":5,"offset":25426},"end":{"line":577,"column":14,"offset":25435},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":577,"column":14,"offset":25435},"end":{"line":577,"column":16,"offset":25437},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":577,"column":16,"offset":25437},"end":{"line":577,"column":18,"offset":25439},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":577,"column":18,"offset":25439},"end":{"line":577,"column":19,"offset":25440},"indent":[]}}],"position":{"start":{"line":577,"column":5,"offset":25426},"end":{"line":577,"column":19,"offset":25440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":579,"column":5,"offset":25446},"end":{"line":579,"column":7,"offset":25448},"indent":[]}}],"position":{"start":{"line":579,"column":5,"offset":25446},"end":{"line":579,"column":7,"offset":25448},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"};","position":{"start":{"line":581,"column":5,"offset":25454},"end":{"line":581,"column":7,"offset":25456},"indent":[]}}],"position":{"start":{"line":581,"column":5,"offset":25454},"end":{"line":581,"column":7,"offset":25456},"indent":[]}}],"position":{"start":{"line":563,"column":1,"offset":25107},"end":{"line":581,"column":7,"offset":25456},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":560,"column":1,"offset":24843},"end":{"line":581,"column":7,"offset":25456},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":583,"column":1,"offset":25458},"end":{"line":583,"column":18,"offset":25475},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":583,"column":18,"offset":25475},"end":{"line":583,"column":20,"offset":25477},"indent":[]}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":583,"column":20,"offset":25477},"end":{"line":583,"column":38,"offset":25495},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":583,"column":38,"offset":25495},"end":{"line":583,"column":40,"offset":25497},"indent":[]}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":583,"column":40,"offset":25497},"end":{"line":583,"column":100,"offset":25557},"indent":[]}}],"position":{"start":{"line":583,"column":1,"offset":25458},"end":{"line":583,"column":100,"offset":25557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":585,"column":1,"offset":25559},"end":{"line":585,"column":3,"offset":25561},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":585,"column":3,"offset":25561},"end":{"line":585,"column":5,"offset":25563},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":585,"column":5,"offset":25563},"end":{"line":585,"column":7,"offset":25565},"indent":[]}}],"position":{"start":{"line":585,"column":1,"offset":25559},"end":{"line":585,"column":7,"offset":25565},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":587,"column":3,"offset":25569},"end":{"line":587,"column":31,"offset":25597},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":587,"column":31,"offset":25597},"end":{"line":587,"column":46,"offset":25612},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":587,"column":46,"offset":25612},"end":{"line":587,"column":107,"offset":25673},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":587,"column":107,"offset":25673},"end":{"line":587,"column":113,"offset":25679},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":587,"column":113,"offset":25679},"end":{"line":587,"column":150,"offset":25716},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":587,"column":150,"offset":25716},"end":{"line":587,"column":156,"offset":25722},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":587,"column":156,"offset":25722},"end":{"line":587,"column":276,"offset":25842},"indent":[]}}],"position":{"start":{"line":587,"column":3,"offset":25569},"end":{"line":587,"column":276,"offset":25842},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":25567},"end":{"line":587,"column":276,"offset":25842},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":25567},"end":{"line":587,"column":276,"offset":25842},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"POJOs","position":{"start":{"line":589,"column":5,"offset":25848},"end":{"line":589,"column":10,"offset":25853},"indent":[]}}],"position":{"start":{"line":589,"column":1,"offset":25844},"end":{"line":589,"column":10,"offset":25853},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":591,"column":6,"offset":25860},"end":{"line":591,"column":58,"offset":25912},"indent":[]}}],"position":{"start":{"line":591,"column":1,"offset":25855},"end":{"line":591,"column":58,"offset":25912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":593,"column":1,"offset":25914},"end":{"line":593,"column":240,"offset":26153},"indent":[]}}],"position":{"start":{"line":593,"column":1,"offset":25914},"end":{"line":593,"column":240,"offset":26153},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":595,"column":3,"offset":26157},"end":{"line":595,"column":22,"offset":26176},"indent":[]}}],"position":{"start":{"line":595,"column":3,"offset":26157},"end":{"line":595,"column":22,"offset":26176},"indent":[]}}],"position":{"start":{"line":595,"column":1,"offset":26155},"end":{"line":595,"column":22,"offset":26176},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":596,"column":3,"offset":26179},"end":{"line":596,"column":19,"offset":26195},"indent":[]}}],"position":{"start":{"line":596,"column":3,"offset":26179},"end":{"line":596,"column":19,"offset":26195},"indent":[]}}],"position":{"start":{"line":596,"column":1,"offset":26177},"end":{"line":596,"column":19,"offset":26195},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":597,"column":3,"offset":26198},"end":{"line":597,"column":24,"offset":26219},"indent":[]}}],"position":{"start":{"line":597,"column":3,"offset":26198},"end":{"line":597,"column":24,"offset":26219},"indent":[]}}],"position":{"start":{"line":597,"column":1,"offset":26196},"end":{"line":597,"column":24,"offset":26219},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":598,"column":3,"offset":26222},"end":{"line":598,"column":21,"offset":26240},"indent":[]}}],"position":{"start":{"line":598,"column":3,"offset":26222},"end":{"line":598,"column":21,"offset":26240},"indent":[]}}],"position":{"start":{"line":598,"column":1,"offset":26220},"end":{"line":598,"column":21,"offset":26240},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":599,"column":3,"offset":26243},"end":{"line":599,"column":21,"offset":26261},"indent":[]}}],"position":{"start":{"line":599,"column":3,"offset":26243},"end":{"line":599,"column":21,"offset":26261},"indent":[]}}],"position":{"start":{"line":599,"column":1,"offset":26241},"end":{"line":599,"column":21,"offset":26261},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":600,"column":3,"offset":26264},"end":{"line":600,"column":20,"offset":26281},"indent":[]}}],"position":{"start":{"line":600,"column":3,"offset":26264},"end":{"line":600,"column":20,"offset":26281},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":26262},"end":{"line":600,"column":20,"offset":26281},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":601,"column":3,"offset":26284},"end":{"line":601,"column":21,"offset":26302},"indent":[]}}],"position":{"start":{"line":601,"column":3,"offset":26284},"end":{"line":601,"column":21,"offset":26302},"indent":[]}}],"position":{"start":{"line":601,"column":1,"offset":26282},"end":{"line":601,"column":21,"offset":26302},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":602,"column":3,"offset":26305},"end":{"line":602,"column":23,"offset":26325},"indent":[]}}],"position":{"start":{"line":602,"column":3,"offset":26305},"end":{"line":602,"column":23,"offset":26325},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":26303},"end":{"line":602,"column":23,"offset":26325},"indent":[]}}],"position":{"start":{"line":595,"column":1,"offset":26155},"end":{"line":602,"column":23,"offset":26325},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":604,"column":6,"offset":26332},"end":{"line":604,"column":35,"offset":26361},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":604,"column":35,"offset":26361},"end":{"line":604,"column":37,"offset":26363},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":604,"column":37,"offset":26363},"end":{"line":604,"column":39,"offset":26365},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":604,"column":39,"offset":26365},"end":{"line":604,"column":74,"offset":26400},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":26327},"end":{"line":604,"column":74,"offset":26400},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);","position":{"start":{"line":606,"column":1,"offset":26402},"end":{"line":617,"column":4,"offset":26745},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":619,"column":6,"offset":26752},"end":{"line":619,"column":72,"offset":26818},"indent":[]}}],"position":{"start":{"line":619,"column":1,"offset":26747},"end":{"line":619,"column":72,"offset":26818},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);","position":{"start":{"line":621,"column":1,"offset":26820},"end":{"line":629,"column":4,"offset":27003},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":631,"column":6,"offset":27010},"end":{"line":631,"column":20,"offset":27024},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":631,"column":20,"offset":27024},"end":{"line":631,"column":22,"offset":27026},"indent":[]}},{"type":"text","value":"key","position":{"start":{"line":631,"column":22,"offset":27026},"end":{"line":631,"column":25,"offset":27029},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":631,"column":25,"offset":27029},"end":{"line":631,"column":27,"offset":27031},"indent":[]}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":631,"column":27,"offset":27031},"end":{"line":631,"column":118,"offset":27122},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":27005},"end":{"line":631,"column":118,"offset":27122},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":633,"column":1,"offset":27124},"end":{"line":633,"column":4,"offset":27127},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false","position":{"start":{"line":636,"column":1,"offset":27130},"end":{"line":649,"column":4,"offset":27418},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":651,"column":6,"offset":27425},"end":{"line":651,"column":60,"offset":27479},"indent":[]}}],"position":{"start":{"line":651,"column":1,"offset":27420},"end":{"line":651,"column":60,"offset":27479},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":653,"column":1,"offset":27481},"end":{"line":653,"column":4,"offset":27484},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));","position":{"start":{"line":656,"column":1,"offset":27487},"end":{"line":670,"column":4,"offset":27753},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":672,"column":6,"offset":27760},"end":{"line":672,"column":54,"offset":27808},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":27755},"end":{"line":672,"column":54,"offset":27808},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));","position":{"start":{"line":674,"column":1,"offset":27810},"end":{"line":683,"column":4,"offset":27974},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":685,"column":6,"offset":27981},"end":{"line":685,"column":98,"offset":28073},"indent":[]}}],"position":{"start":{"line":685,"column":1,"offset":27976},"end":{"line":685,"column":98,"offset":28073},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":687,"column":1,"offset":28075},"end":{"line":687,"column":4,"offset":28078},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0","position":{"start":{"line":690,"column":1,"offset":28081},"end":{"line":707,"column":4,"offset":28391},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":709,"column":6,"offset":28398},"end":{"line":709,"column":68,"offset":28460},"indent":[]}}],"position":{"start":{"line":709,"column":1,"offset":28393},"end":{"line":709,"column":68,"offset":28460},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);","position":{"start":{"line":711,"column":1,"offset":28462},"end":{"line":725,"column":4,"offset":28744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":727,"column":6,"offset":28751},"end":{"line":727,"column":60,"offset":28805},"indent":[]}}],"position":{"start":{"line":727,"column":1,"offset":28746},"end":{"line":727,"column":60,"offset":28805},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);","position":{"start":{"line":729,"column":1,"offset":28807},"end":{"line":735,"column":4,"offset":28894},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":737,"column":6,"offset":28901},"end":{"line":737,"column":60,"offset":28955},"indent":[]}}],"position":{"start":{"line":737,"column":1,"offset":28896},"end":{"line":737,"column":60,"offset":28955},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);","position":{"start":{"line":739,"column":1,"offset":28957},"end":{"line":759,"column":4,"offset":29293},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":761,"column":6,"offset":29300},"end":{"line":761,"column":139,"offset":29433},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":29295},"end":{"line":761,"column":139,"offset":29433},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":763,"column":1,"offset":29435},"end":{"line":763,"column":4,"offset":29438},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));","position":{"start":{"line":766,"column":1,"offset":29441},"end":{"line":783,"column":4,"offset":29800},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":785,"column":1,"offset":29802},"end":{"line":785,"column":4,"offset":29805},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":787,"column":5,"offset":29811},"end":{"line":787,"column":23,"offset":29829},"indent":[]}}],"position":{"start":{"line":787,"column":1,"offset":29807},"end":{"line":787,"column":23,"offset":29829},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":789,"column":6,"offset":29836},"end":{"line":789,"column":73,"offset":29903},"indent":[]}}],"position":{"start":{"line":789,"column":1,"offset":29831},"end":{"line":789,"column":73,"offset":29903},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":791,"column":6,"offset":29910},"end":{"line":791,"column":72,"offset":29976},"indent":[]}}],"position":{"start":{"line":791,"column":1,"offset":29905},"end":{"line":791,"column":72,"offset":29976},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nvar a = 'a';","position":{"start":{"line":793,"column":1,"offset":29978},"end":{"line":796,"column":4,"offset":30003},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":798,"column":3,"offset":30007},"end":{"line":798,"column":8,"offset":30012},"indent":[]}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":798,"column":8,"offset":30012},"end":{"line":798,"column":65,"offset":30069},"indent":[]}}],"position":{"start":{"line":798,"column":3,"offset":30007},"end":{"line":798,"column":65,"offset":30069},"indent":[]}}],"position":{"start":{"line":798,"column":1,"offset":30005},"end":{"line":798,"column":65,"offset":30069},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":799,"column":3,"offset":30072},"end":{"line":799,"column":8,"offset":30077},"indent":[]}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":799,"column":8,"offset":30077},"end":{"line":799,"column":88,"offset":30157},"indent":[]}}],"position":{"start":{"line":799,"column":3,"offset":30072},"end":{"line":799,"column":88,"offset":30157},"indent":[]}}],"position":{"start":{"line":799,"column":1,"offset":30070},"end":{"line":799,"column":88,"offset":30157},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We consider ","position":{"start":{"line":800,"column":3,"offset":30160},"end":{"line":800,"column":15,"offset":30172},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":800,"column":15,"offset":30172},"end":{"line":800,"column":20,"offset":30177},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":800,"column":20,"offset":30177},"end":{"line":800,"column":27,"offset":30184},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"deprecated","position":{"start":{"line":800,"column":28,"offset":30185},"end":{"line":800,"column":38,"offset":30195},"indent":[]}}],"position":{"start":{"line":800,"column":27,"offset":30184},"end":{"line":800,"column":39,"offset":30196},"indent":[]}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":800,"column":39,"offset":30196},"end":{"line":800,"column":76,"offset":30233},"indent":[]}}],"position":{"start":{"line":800,"column":3,"offset":30160},"end":{"line":800,"column":76,"offset":30233},"indent":[]}}],"position":{"start":{"line":800,"column":1,"offset":30158},"end":{"line":800,"column":76,"offset":30233},"indent":[]}}],"position":{"start":{"line":798,"column":1,"offset":30005},"end":{"line":800,"column":76,"offset":30233},"indent":[1,1]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet b = 'b';","position":{"start":{"line":802,"column":1,"offset":30235},"end":{"line":805,"column":4,"offset":30260},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":807,"column":3,"offset":30264},"end":{"line":807,"column":8,"offset":30269},"indent":[]}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":807,"column":8,"offset":30269},"end":{"line":807,"column":67,"offset":30328},"indent":[]}}],"position":{"start":{"line":807,"column":3,"offset":30264},"end":{"line":807,"column":67,"offset":30328},"indent":[]}}],"position":{"start":{"line":807,"column":1,"offset":30262},"end":{"line":807,"column":67,"offset":30328},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":808,"column":3,"offset":30331},"end":{"line":808,"column":8,"offset":30336},"indent":[]}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":808,"column":8,"offset":30336},"end":{"line":808,"column":43,"offset":30371},"indent":[]}}],"position":{"start":{"line":808,"column":3,"offset":30331},"end":{"line":808,"column":43,"offset":30371},"indent":[]}}],"position":{"start":{"line":808,"column":1,"offset":30329},"end":{"line":808,"column":43,"offset":30371},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":809,"column":3,"offset":30374},"end":{"line":809,"column":27,"offset":30398},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":809,"column":27,"offset":30398},"end":{"line":809,"column":32,"offset":30403},"indent":[]}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":809,"column":32,"offset":30403},"end":{"line":809,"column":51,"offset":30422},"indent":[]}}],"position":{"start":{"line":809,"column":3,"offset":30374},"end":{"line":809,"column":51,"offset":30422},"indent":[]}}],"position":{"start":{"line":809,"column":1,"offset":30372},"end":{"line":809,"column":51,"offset":30422},"indent":[]}}],"position":{"start":{"line":807,"column":1,"offset":30262},"end":{"line":809,"column":51,"offset":30422},"indent":[1,1]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst c = 'c';","position":{"start":{"line":811,"column":1,"offset":30424},"end":{"line":814,"column":4,"offset":30451},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":816,"column":3,"offset":30455},"end":{"line":816,"column":10,"offset":30462},"indent":[]}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":816,"column":10,"offset":30462},"end":{"line":816,"column":36,"offset":30488},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":816,"column":36,"offset":30488},"end":{"line":816,"column":41,"offset":30493},"indent":[]}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":816,"column":41,"offset":30493},"end":{"line":816,"column":67,"offset":30519},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"initialize","position":{"start":{"line":816,"column":69,"offset":30521},"end":{"line":816,"column":79,"offset":30531},"indent":[]}}],"position":{"start":{"line":816,"column":67,"offset":30519},"end":{"line":816,"column":81,"offset":30533},"indent":[]}},{"type":"text","value":" a variable.","position":{"start":{"line":816,"column":81,"offset":30533},"end":{"line":816,"column":93,"offset":30545},"indent":[]}}],"position":{"start":{"line":816,"column":3,"offset":30455},"end":{"line":816,"column":93,"offset":30545},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":30453},"end":{"line":816,"column":93,"offset":30545},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":817,"column":3,"offset":30548},"end":{"line":817,"column":54,"offset":30599},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":817,"column":54,"offset":30599},"end":{"line":817,"column":61,"offset":30606},"indent":[]}},{"type":"text","value":" variable.","position":{"start":{"line":817,"column":61,"offset":30606},"end":{"line":817,"column":71,"offset":30616},"indent":[]}}],"position":{"start":{"line":817,"column":3,"offset":30548},"end":{"line":817,"column":71,"offset":30616},"indent":[]}}],"position":{"start":{"line":817,"column":1,"offset":30546},"end":{"line":817,"column":71,"offset":30616},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":818,"column":3,"offset":30619},"end":{"line":818,"column":10,"offset":30626},"indent":[]}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":818,"column":10,"offset":30626},"end":{"line":818,"column":46,"offset":30662},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":818,"column":46,"offset":30662},"end":{"line":818,"column":51,"offset":30667},"indent":[]}},{"type":"text","value":" does.","position":{"start":{"line":818,"column":51,"offset":30667},"end":{"line":818,"column":57,"offset":30673},"indent":[]}}],"position":{"start":{"line":818,"column":3,"offset":30619},"end":{"line":818,"column":57,"offset":30673},"indent":[]}}],"position":{"start":{"line":818,"column":1,"offset":30617},"end":{"line":818,"column":57,"offset":30673},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":30453},"end":{"line":818,"column":57,"offset":30673},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":820,"column":6,"offset":30680},"end":{"line":820,"column":116,"offset":30790},"indent":[]}}],"position":{"start":{"line":820,"column":1,"offset":30675},"end":{"line":820,"column":116,"offset":30790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":822,"column":1,"offset":30792},"end":{"line":822,"column":15,"offset":30806},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":822,"column":15,"offset":30806},"end":{"line":822,"column":20,"offset":30811},"indent":[]}},{"type":"text","value":" function, inside which ","position":{"start":{"line":822,"column":20,"offset":30811},"end":{"line":822,"column":44,"offset":30835},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":822,"column":44,"offset":30835},"end":{"line":822,"column":49,"offset":30840},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":822,"column":49,"offset":30840},"end":{"line":822,"column":54,"offset":30845},"indent":[]}},{"type":"inlineCode","value":"bar","position":{"start":{"line":822,"column":54,"offset":30845},"end":{"line":822,"column":59,"offset":30850},"indent":[]}},{"type":"text","value":" have ","position":{"start":{"line":822,"column":59,"offset":30850},"end":{"line":822,"column":65,"offset":30856},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":822,"column":65,"offset":30856},"end":{"line":822,"column":81,"offset":30872},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":822,"column":81,"offset":30872},"end":{"line":822,"column":83,"offset":30874},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":822,"column":83,"offset":30874},"end":{"line":822,"column":86,"offset":30877},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":822,"column":86,"offset":30877},"end":{"line":822,"column":91,"offset":30882},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":822,"column":91,"offset":30882},"end":{"line":822,"column":96,"offset":30887},"indent":[]}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":822,"column":96,"offset":30887},"end":{"line":822,"column":132,"offset":30923},"indent":[]}}],"position":{"start":{"line":822,"column":1,"offset":30792},"end":{"line":822,"column":132,"offset":30923},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();","position":{"start":{"line":824,"column":1,"offset":30925},"end":{"line":843,"column":4,"offset":31210},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":845,"column":1,"offset":31212},"end":{"line":845,"column":25,"offset":31236},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":845,"column":25,"offset":31236},"end":{"line":845,"column":30,"offset":31241},"indent":[]}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":845,"column":30,"offset":31241},"end":{"line":845,"column":103,"offset":31314},"indent":[]}}],"position":{"start":{"line":845,"column":1,"offset":31212},"end":{"line":845,"column":103,"offset":31314},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":847,"column":1,"offset":31316},"end":{"line":847,"column":15,"offset":31330},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":847,"column":15,"offset":31330},"end":{"line":847,"column":20,"offset":31335},"indent":[]}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":847,"column":20,"offset":31335},"end":{"line":847,"column":47,"offset":31362},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":847,"column":47,"offset":31362},"end":{"line":847,"column":52,"offset":31367},"indent":[]}},{"type":"text","value":" has ","position":{"start":{"line":847,"column":52,"offset":31367},"end":{"line":847,"column":57,"offset":31372},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":847,"column":57,"offset":31372},"end":{"line":847,"column":73,"offset":31388},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":847,"column":73,"offset":31388},"end":{"line":847,"column":74,"offset":31389},"indent":[]}}],"position":{"start":{"line":847,"column":1,"offset":31316},"end":{"line":847,"column":74,"offset":31389},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":849,"column":1,"offset":31391},"end":{"line":849,"column":4,"offset":31394},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();","position":{"start":{"line":852,"column":1,"offset":31397},"end":{"line":863,"column":4,"offset":31523},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":865,"column":1,"offset":31525},"end":{"line":865,"column":15,"offset":31539},"indent":[]}},{"type":"inlineCode","value":"func1","position":{"start":{"line":865,"column":15,"offset":31539},"end":{"line":865,"column":22,"offset":31546},"indent":[]}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":865,"column":22,"offset":31546},"end":{"line":865,"column":55,"offset":31579},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":31525},"end":{"line":865,"column":55,"offset":31579},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}","position":{"start":{"line":867,"column":1,"offset":31581},"end":{"line":883,"column":4,"offset":31839},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":885,"column":6,"offset":31846},"end":{"line":885,"column":70,"offset":31910},"indent":[]}}],"position":{"start":{"line":885,"column":1,"offset":31841},"end":{"line":885,"column":70,"offset":31910},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;","position":{"start":{"line":887,"column":1,"offset":31912},"end":{"line":898,"column":4,"offset":32091},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":900,"column":6,"offset":32098},"end":{"line":900,"column":33,"offset":32125},"indent":[]}}],"position":{"start":{"line":900,"column":1,"offset":32093},"end":{"line":900,"column":33,"offset":32125},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst returnValue = (val) => val;","position":{"start":{"line":902,"column":1,"offset":32127},"end":{"line":905,"column":4,"offset":32173},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":907,"column":1,"offset":32175},"end":{"line":907,"column":59,"offset":32233},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":907,"column":59,"offset":32233},"end":{"line":907,"column":64,"offset":32238},"indent":[]}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":907,"column":64,"offset":32238},"end":{"line":907,"column":93,"offset":32267},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":907,"column":93,"offset":32267},"end":{"line":907,"column":98,"offset":32272},"indent":[]}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":907,"column":98,"offset":32272},"end":{"line":907,"column":135,"offset":32309},"indent":[]}},{"type":"inlineCode","value":"return val","position":{"start":{"line":907,"column":135,"offset":32309},"end":{"line":907,"column":147,"offset":32321},"indent":[]}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":907,"column":147,"offset":32321},"end":{"line":907,"column":188,"offset":32362},"indent":[]}}],"position":{"start":{"line":907,"column":1,"offset":32175},"end":{"line":907,"column":188,"offset":32362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":909,"column":1,"offset":32364},"end":{"line":909,"column":28,"offset":32391},"indent":[]}}],"position":{"start":{"line":909,"column":1,"offset":32364},"end":{"line":909,"column":28,"offset":32391},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst returnValue = (val) => {\n    return val;\n};","position":{"start":{"line":911,"column":1,"offset":32393},"end":{"line":916,"column":4,"offset":32455},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":918,"column":6,"offset":32462},"end":{"line":918,"column":54,"offset":32510},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":918,"column":54,"offset":32510},"end":{"line":918,"column":60,"offset":32516},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":918,"column":60,"offset":32516},"end":{"line":918,"column":87,"offset":32543},"indent":[]}}],"position":{"start":{"line":918,"column":1,"offset":32457},"end":{"line":918,"column":87,"offset":32543},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":920,"column":1,"offset":32545},"end":{"line":920,"column":4,"offset":32548},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);","position":{"start":{"line":923,"column":1,"offset":32551},"end":{"line":936,"column":4,"offset":32711},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we use a ","position":{"start":{"line":938,"column":1,"offset":32713},"end":{"line":938,"column":13,"offset":32725},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function declaration","position":{"start":{"line":938,"column":14,"offset":32726},"end":{"line":938,"column":34,"offset":32746},"indent":[]}}],"position":{"start":{"line":938,"column":13,"offset":32725},"end":{"line":938,"column":35,"offset":32747},"indent":[]}},{"type":"text","value":" style function, the ","position":{"start":{"line":938,"column":35,"offset":32747},"end":{"line":938,"column":56,"offset":32768},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":938,"column":56,"offset":32768},"end":{"line":938,"column":62,"offset":32774},"indent":[]}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":938,"column":62,"offset":32774},"end":{"line":938,"column":86,"offset":32798},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":938,"column":86,"offset":32798},"end":{"line":938,"column":94,"offset":32806},"indent":[]}},{"type":"text","value":" object ","position":{"start":{"line":938,"column":94,"offset":32806},"end":{"line":938,"column":102,"offset":32814},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":938,"column":102,"offset":32814},"end":{"line":938,"column":104,"offset":32816},"indent":[]}},{"type":"text","value":"i.e. ","position":{"start":{"line":938,"column":104,"offset":32816},"end":{"line":938,"column":109,"offset":32821},"indent":[]}},{"type":"inlineCode","value":"Object [global]","position":{"start":{"line":938,"column":109,"offset":32821},"end":{"line":938,"column":126,"offset":32838},"indent":[]}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":938,"column":126,"offset":32838},"end":{"line":938,"column":142,"offset":32854},"indent":[]}},{"type":"inlineCode","value":"Window","position":{"start":{"line":938,"column":142,"offset":32854},"end":{"line":938,"column":150,"offset":32862},"indent":[]}},{"type":"text","value":" in your browser","position":{"start":{"line":938,"column":150,"offset":32862},"end":{"line":938,"column":166,"offset":32878},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":938,"column":166,"offset":32878},"end":{"line":938,"column":168,"offset":32880},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":938,"column":168,"offset":32880},"end":{"line":938,"column":169,"offset":32881},"indent":[]}}],"position":{"start":{"line":938,"column":1,"offset":32713},"end":{"line":938,"column":169,"offset":32881},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);","position":{"start":{"line":940,"column":1,"offset":32883},"end":{"line":947,"column":4,"offset":33011},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":949,"column":1,"offset":33013},"end":{"line":949,"column":27,"offset":33039},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"fat arrow","position":{"start":{"line":949,"column":28,"offset":33040},"end":{"line":949,"column":37,"offset":33049},"indent":[]}}],"position":{"start":{"line":949,"column":27,"offset":33039},"end":{"line":949,"column":38,"offset":33050},"indent":[]}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":949,"column":38,"offset":33050},"end":{"line":949,"column":102,"offset":33114},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":949,"column":102,"offset":33114},"end":{"line":949,"column":108,"offset":33120},"indent":[]}},{"type":"text","value":" becomes","position":{"start":{"line":949,"column":108,"offset":33120},"end":{"line":949,"column":116,"offset":33128},"indent":[]}}],"position":{"start":{"line":949,"column":1,"offset":33013},"end":{"line":949,"column":116,"offset":33128},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":951,"column":6,"offset":33135},"end":{"line":951,"column":66,"offset":33195},"indent":[]}}],"position":{"start":{"line":951,"column":1,"offset":33130},"end":{"line":951,"column":66,"offset":33195},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());","position":{"start":{"line":953,"column":1,"offset":33197},"end":{"line":965,"column":4,"offset":33436},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":967,"column":6,"offset":33443},"end":{"line":967,"column":38,"offset":33475},"indent":[]}},{"type":"text","value":"#","position":{"start":{"line":967,"column":38,"offset":33475},"end":{"line":967,"column":40,"offset":33477},"indent":[]}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":967,"column":40,"offset":33477},"end":{"line":967,"column":86,"offset":33523},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":967,"column":86,"offset":33523},"end":{"line":967,"column":92,"offset":33529},"indent":[]}}],"position":{"start":{"line":967,"column":1,"offset":33438},"end":{"line":967,"column":92,"offset":33529},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms","position":{"start":{"line":969,"column":1,"offset":33531},"end":{"line":983,"column":4,"offset":33863},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":985,"column":6,"offset":33870},"end":{"line":985,"column":45,"offset":33909},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":985,"column":45,"offset":33909},"end":{"line":985,"column":51,"offset":33915},"indent":[]}},{"type":"text","value":" refers to","position":{"start":{"line":985,"column":51,"offset":33915},"end":{"line":985,"column":61,"offset":33925},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":33865},"end":{"line":985,"column":61,"offset":33925},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":987,"column":1,"offset":33927},"end":{"line":987,"column":4,"offset":33930},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n\n\nfunction Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');","position":{"start":{"line":990,"column":1,"offset":33933},"end":{"line":1011,"column":4,"offset":34346},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1012,"column":1,"offset":34347}}}}