{"expireTime":9007200914465210000,"key":"transformer-remark-markdown-html-ast-a14a91c56c6e87716d7fa3fa964bf97e--","val":{"type":"root","children":[{"type":"raw","value":"<details>","position":{"start":{"line":6,"column":1,"offset":5},"end":{"line":6,"column":10,"offset":14}}},{"type":"text","value":"\n"},{"type":"raw","value":"<summary> Description</summary>   ","position":{"start":{"line":8,"column":1,"offset":16},"end":{"line":8,"column":35,"offset":50}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":10,"column":6,"offset":57},"end":{"line":10,"column":13,"offset":64}}}],"position":{"start":{"line":10,"column":3,"offset":54},"end":{"line":10,"column":13,"offset":64}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global fetch() method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":11,"column":3,"offset":67},"end":{"line":11,"column":269,"offset":333}}}],"position":{"start":{"line":11,"column":3,"offset":67},"end":{"line":11,"column":269,"offset":333}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":52},"end":{"line":11,"column":269,"offset":333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":13,"column":1,"offset":335},"end":{"line":13,"column":4,"offset":338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":14,"column":1,"offset":339},"end":{"line":14,"column":5,"offset":343}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"children":[{"type":"text","value":"Fetch API","position":{"start":{"line":14,"column":6,"offset":344},"end":{"line":14,"column":15,"offset":353}}}],"position":{"start":{"line":14,"column":5,"offset":343},"end":{"line":14,"column":76,"offset":414}}},{"type":"text","value":" provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global ","position":{"start":{"line":14,"column":76,"offset":414},"end":{"line":14,"column":226,"offset":564}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":14,"column":227,"offset":565},"end":{"line":14,"column":236,"offset":574}}}],"position":{"start":{"line":14,"column":226,"offset":564},"end":{"line":14,"column":293,"offset":631}}},{"type":"text","value":" method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":14,"column":293,"offset":631},"end":{"line":14,"column":389,"offset":727}}}],"position":{"start":{"line":14,"column":1,"offset":339},"end":{"line":14,"column":389,"offset":727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This kind of functionality was previously achieved using ","position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":16,"column":58,"offset":786}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"XMLHttpRequest"}],"position":{"start":{"line":16,"column":59,"offset":787},"end":{"line":16,"column":75,"offset":803}}}],"position":{"start":{"line":16,"column":58,"offset":786},"end":{"line":16,"column":141,"offset":869}}},{"type":"text","value":". Fetch provides a better alternative that can be easily used by other technologies such as ","position":{"start":{"line":16,"column":141,"offset":869},"end":{"line":16,"column":233,"offset":961}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"Service Workers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Service Workers"}],"position":{"start":{"line":16,"column":234,"offset":962},"end":{"line":16,"column":251,"offset":979}}}],"position":{"start":{"line":16,"column":233,"offset":961},"end":{"line":16,"column":339,"offset":1067}}},{"type":"text","value":". Fetch also provides a single logical place to define other HTTP-related concepts such as ","position":{"start":{"line":16,"column":339,"offset":1067},"end":{"line":16,"column":430,"offset":1158}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},"children":[{"type":"text","value":"CORS","position":{"start":{"line":16,"column":431,"offset":1159},"end":{"line":16,"column":435,"offset":1163}}}],"position":{"start":{"line":16,"column":430,"offset":1158},"end":{"line":16,"column":492,"offset":1220}}},{"type":"text","value":" and extensions to HTTP.","position":{"start":{"line":16,"column":492,"offset":1220},"end":{"line":16,"column":516,"offset":1244}}}],"position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":16,"column":516,"offset":1244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":18,"column":1,"offset":1246},"end":{"line":18,"column":5,"offset":1250}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch"}],"position":{"start":{"line":18,"column":5,"offset":1250},"end":{"line":18,"column":12,"offset":1257}}},{"type":"text","value":" specification differs from ","position":{"start":{"line":18,"column":12,"offset":1257},"end":{"line":18,"column":40,"offset":1285}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jQuery.ajax()"}],"position":{"start":{"line":18,"column":40,"offset":1285},"end":{"line":18,"column":55,"offset":1300}}},{"type":"text","value":" in the following significant ways:","position":{"start":{"line":18,"column":55,"offset":1300},"end":{"line":18,"column":90,"offset":1335}}}],"position":{"start":{"line":18,"column":1,"offset":1246},"end":{"line":18,"column":90,"offset":1335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The Promise returned from ","position":{"start":{"line":20,"column":5,"offset":1341},"end":{"line":20,"column":31,"offset":1367}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":20,"column":31,"offset":1367},"end":{"line":20,"column":40,"offset":1376}}},{"type":"text","value":" ","position":{"start":{"line":20,"column":40,"offset":1376},"end":{"line":20,"column":41,"offset":1377}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't reject on HTTP error status","position":{"start":{"line":20,"column":43,"offset":1379},"end":{"line":20,"column":76,"offset":1412}}}],"position":{"start":{"line":20,"column":41,"offset":1377},"end":{"line":20,"column":78,"offset":1414}}},{"type":"text","value":" even if the response is an HTTP 404 or 500. Instead, as soon as the server responds with headers, the Promise will resolve normally (with the ","position":{"start":{"line":20,"column":78,"offset":1414},"end":{"line":20,"column":221,"offset":1557}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok","title":"ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ok"}],"position":{"start":{"line":20,"column":222,"offset":1558},"end":{"line":20,"column":226,"offset":1562}}}],"position":{"start":{"line":20,"column":221,"offset":1557},"end":{"line":20,"column":294,"offset":1630}}},{"type":"text","value":" property of the response set to false if the response isn't in the range 200 -299), and it will only reject on network failure or if anything prevented the request from completing.","position":{"start":{"line":20,"column":294,"offset":1630},"end":{"line":20,"column":475,"offset":1811}}}],"position":{"start":{"line":20,"column":1,"offset":1337},"end":{"line":20,"column":475,"offset":1811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":21,"column":5,"offset":1816},"end":{"line":21,"column":14,"offset":1825}}},{"type":"text","value":" ","position":{"start":{"line":21,"column":14,"offset":1825},"end":{"line":21,"column":15,"offset":1826}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't send cross-origin cookies","position":{"start":{"line":21,"column":17,"offset":1828},"end":{"line":21,"column":48,"offset":1859}}}],"position":{"start":{"line":21,"column":15,"offset":1826},"end":{"line":21,"column":50,"offset":1861}}},{"type":"text","value":" unless you set the ","position":{"start":{"line":21,"column":50,"offset":1861},"end":{"line":21,"column":70,"offset":1881}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"credentials","position":{"start":{"line":21,"column":71,"offset":1882},"end":{"line":21,"column":82,"offset":1893}}}],"position":{"start":{"line":21,"column":70,"offset":1881},"end":{"line":21,"column":83,"offset":1894}}},{"type":"text","value":" ","position":{"start":{"line":21,"column":83,"offset":1894},"end":{"line":21,"column":84,"offset":1895}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters"},"children":[{"type":"text","value":"init option","position":{"start":{"line":21,"column":85,"offset":1896},"end":{"line":21,"column":96,"offset":1907}}}],"position":{"start":{"line":21,"column":84,"offset":1895},"end":{"line":21,"column":164,"offset":1975}}},{"type":"text","value":". (Since ","position":{"start":{"line":21,"column":164,"offset":1975},"end":{"line":21,"column":173,"offset":1984}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/whatwg/fetch/pull/585"},"children":[{"type":"text","value":"April 2018","position":{"start":{"line":21,"column":174,"offset":1985},"end":{"line":21,"column":184,"offset":1995}}}],"position":{"start":{"line":21,"column":173,"offset":1984},"end":{"line":21,"column":227,"offset":2038}}},{"type":"text","value":". The spec changed the default credentials policy to ","position":{"start":{"line":21,"column":227,"offset":2038},"end":{"line":21,"column":280,"offset":2091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"same-origin"}],"position":{"start":{"line":21,"column":280,"offset":2091},"end":{"line":21,"column":293,"offset":2104}}},{"type":"text","value":". Firefox changed since 61.0b13.)","position":{"start":{"line":21,"column":293,"offset":2104},"end":{"line":21,"column":326,"offset":2137}}}],"position":{"start":{"line":21,"column":1,"offset":1812},"end":{"line":21,"column":326,"offset":2137}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1337},"end":{"line":21,"column":326,"offset":2137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A basic fetch request is really simple to set up. Have a look at the following code:","position":{"start":{"line":23,"column":1,"offset":2139},"end":{"line":23,"column":85,"offset":2223}}}],"position":{"start":{"line":23,"column":1,"offset":2139},"end":{"line":23,"column":85,"offset":2223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfetch('http://example.com/movies.json')\n  .then(response => response.json())\n  .then(data => console.log(data));\n"}],"position":{"start":{"line":25,"column":1,"offset":2225},"end":{"line":30,"column":4,"offset":2350}}}],"position":{"start":{"line":25,"column":1,"offset":2225},"end":{"line":30,"column":4,"offset":2350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we are fetching a JSON file across the network and printing it to the console. The simplest use of ","position":{"start":{"line":32,"column":1,"offset":2352},"end":{"line":32,"column":105,"offset":2456}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":32,"column":105,"offset":2456},"end":{"line":32,"column":114,"offset":2465}}},{"type":"text","value":" takes one argument — the path to the resource you want to fetch — and does not directly return the JSON response body but instead returns a promise that resolves with a ","position":{"start":{"line":32,"column":114,"offset":2465},"end":{"line":32,"column":284,"offset":2635}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":32,"column":285,"offset":2636},"end":{"line":32,"column":295,"offset":2646}}}],"position":{"start":{"line":32,"column":284,"offset":2635},"end":{"line":32,"column":355,"offset":2706}}},{"type":"text","value":" object.","position":{"start":{"line":32,"column":355,"offset":2706},"end":{"line":32,"column":363,"offset":2714}}}],"position":{"start":{"line":32,"column":1,"offset":2352},"end":{"line":32,"column":363,"offset":2714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":34,"column":1,"offset":2716},"end":{"line":34,"column":5,"offset":2720}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":34,"column":6,"offset":2721},"end":{"line":34,"column":16,"offset":2731}}}],"position":{"start":{"line":34,"column":5,"offset":2720},"end":{"line":34,"column":76,"offset":2791}}},{"type":"text","value":" object, in turn, does not directly contain the actual JSON response body but is instead a representation of the entire HTTP response. So, to extract the JSON body content from the ","position":{"start":{"line":34,"column":76,"offset":2791},"end":{"line":34,"column":257,"offset":2972}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":34,"column":258,"offset":2973},"end":{"line":34,"column":268,"offset":2983}}}],"position":{"start":{"line":34,"column":257,"offset":2972},"end":{"line":34,"column":328,"offset":3043}}},{"type":"text","value":" object, we use the ","position":{"start":{"line":34,"column":328,"offset":3043},"end":{"line":34,"column":348,"offset":3063}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/json","title":"json()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"json()"}],"position":{"start":{"line":34,"column":349,"offset":3064},"end":{"line":34,"column":357,"offset":3072}}}],"position":{"start":{"line":34,"column":348,"offset":3063},"end":{"line":34,"column":431,"offset":3146}}},{"type":"text","value":" method, which returns a second promise that resolves with the result of parsing the response body text as JSON.","position":{"start":{"line":34,"column":431,"offset":3146},"end":{"line":34,"column":543,"offset":3258}}}],"position":{"start":{"line":34,"column":1,"offset":2716},"end":{"line":34,"column":543,"offset":3258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":36,"column":3,"offset":3262},"end":{"line":36,"column":8,"offset":3267}}}],"position":{"start":{"line":36,"column":1,"offset":3260},"end":{"line":36,"column":10,"offset":3269}}},{"type":"text","value":" See the ","position":{"start":{"line":36,"column":10,"offset":3269},"end":{"line":36,"column":19,"offset":3278}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#body"},"children":[{"type":"text","value":"Body","position":{"start":{"line":36,"column":20,"offset":3279},"end":{"line":36,"column":24,"offset":3283}}}],"position":{"start":{"line":36,"column":19,"offset":3278},"end":{"line":36,"column":102,"offset":3361}}},{"type":"text","value":" section for similar methods to extract other types of body content.","position":{"start":{"line":36,"column":102,"offset":3361},"end":{"line":36,"column":170,"offset":3429}}}],"position":{"start":{"line":36,"column":1,"offset":3260},"end":{"line":36,"column":170,"offset":3429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fetch requests are controlled by the ","position":{"start":{"line":38,"column":1,"offset":3431},"end":{"line":38,"column":38,"offset":3468}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"connect-src"}],"position":{"start":{"line":38,"column":38,"offset":3468},"end":{"line":38,"column":51,"offset":3481}}},{"type":"text","value":" directive of ","position":{"start":{"line":38,"column":51,"offset":3481},"end":{"line":38,"column":65,"offset":3495}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"},"children":[{"type":"text","value":"Content Security Policy","position":{"start":{"line":38,"column":66,"offset":3496},"end":{"line":38,"column":89,"offset":3519}}}],"position":{"start":{"line":38,"column":65,"offset":3495},"end":{"line":38,"column":173,"offset":3603}}},{"type":"text","value":" rather than the directive of the resources it's retrieving.","position":{"start":{"line":38,"column":173,"offset":3603},"end":{"line":38,"column":233,"offset":3663}}}],"position":{"start":{"line":38,"column":1,"offset":3431},"end":{"line":38,"column":233,"offset":3663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options","title":"Permalink to Supplying request options"},"children":[{"type":"text","value":"Supplying request options","position":{"start":{"line":40,"column":6,"offset":3670},"end":{"line":40,"column":31,"offset":3695}}}],"position":{"start":{"line":40,"column":5,"offset":3669},"end":{"line":40,"column":171,"offset":3835}}}],"position":{"start":{"line":40,"column":1,"offset":3665},"end":{"line":40,"column":171,"offset":3835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":42,"column":1,"offset":3837},"end":{"line":42,"column":5,"offset":3841}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":42,"column":5,"offset":3841},"end":{"line":42,"column":14,"offset":3850}}},{"type":"text","value":" method can optionally accept a second parameter, an ","position":{"start":{"line":42,"column":14,"offset":3850},"end":{"line":42,"column":67,"offset":3903}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":42,"column":67,"offset":3903},"end":{"line":42,"column":73,"offset":3909}}},{"type":"text","value":" object that allows you to control a number of different settings:","position":{"start":{"line":42,"column":73,"offset":3909},"end":{"line":42,"column":139,"offset":3975}}}],"position":{"start":{"line":42,"column":1,"offset":3837},"end":{"line":42,"column":139,"offset":3975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See ","position":{"start":{"line":44,"column":1,"offset":3977},"end":{"line":44,"column":5,"offset":3981}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":44,"column":6,"offset":3982},"end":{"line":44,"column":15,"offset":3991}}}],"position":{"start":{"line":44,"column":5,"offset":3981},"end":{"line":44,"column":72,"offset":4048}}},{"type":"text","value":" for the full options available, and more details.","position":{"start":{"line":44,"column":72,"offset":4048},"end":{"line":44,"column":122,"offset":4098}}}],"position":{"start":{"line":44,"column":1,"offset":3977},"end":{"line":44,"column":122,"offset":4098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\njs\n// Example POST method implementation:\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\npostData('https://example.com/answer', { answer: 42 })\n  .then(data => {\n    console.log(data); // JSON data parsed by `data.json()` call\n  });\n"}],"position":{"start":{"line":46,"column":1,"offset":4100},"end":{"line":72,"column":4,"offset":5202}}}],"position":{"start":{"line":46,"column":1,"offset":4100},"end":{"line":72,"column":4,"offset":5202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that ","position":{"start":{"line":74,"column":1,"offset":5204},"end":{"line":74,"column":11,"offset":5214}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mode: \"no-cors\""}],"position":{"start":{"line":74,"column":11,"offset":5214},"end":{"line":74,"column":28,"offset":5231}}},{"type":"text","value":" only allows a limited set of headers in the request:","position":{"start":{"line":74,"column":28,"offset":5231},"end":{"line":74,"column":81,"offset":5284}}}],"position":{"start":{"line":74,"column":1,"offset":5204},"end":{"line":74,"column":81,"offset":5284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept"}],"position":{"start":{"line":76,"column":5,"offset":5290},"end":{"line":76,"column":13,"offset":5298}}}],"position":{"start":{"line":76,"column":1,"offset":5286},"end":{"line":76,"column":13,"offset":5298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept-Language"}],"position":{"start":{"line":77,"column":5,"offset":5303},"end":{"line":77,"column":22,"offset":5320}}}],"position":{"start":{"line":77,"column":1,"offset":5299},"end":{"line":77,"column":22,"offset":5320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Language"}],"position":{"start":{"line":78,"column":5,"offset":5325},"end":{"line":78,"column":23,"offset":5343}}}],"position":{"start":{"line":78,"column":1,"offset":5321},"end":{"line":78,"column":23,"offset":5343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Type"}],"position":{"start":{"line":79,"column":5,"offset":5348},"end":{"line":79,"column":19,"offset":5362}}},{"type":"text","value":" with a value of ","position":{"start":{"line":79,"column":19,"offset":5362},"end":{"line":79,"column":36,"offset":5379}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"application/x-www-form-urlencoded"}],"position":{"start":{"line":79,"column":36,"offset":5379},"end":{"line":79,"column":71,"offset":5414}}},{"type":"text","value":", ","position":{"start":{"line":79,"column":71,"offset":5414},"end":{"line":79,"column":73,"offset":5416}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"multipart/form-data"}],"position":{"start":{"line":79,"column":73,"offset":5416},"end":{"line":79,"column":94,"offset":5437}}},{"type":"text","value":", or ","position":{"start":{"line":79,"column":94,"offset":5437},"end":{"line":79,"column":99,"offset":5442}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text/plain"}],"position":{"start":{"line":79,"column":99,"offset":5442},"end":{"line":79,"column":111,"offset":5454}}}],"position":{"start":{"line":79,"column":1,"offset":5344},"end":{"line":79,"column":111,"offset":5454}}},{"type":"text","value":"\n"}],"position":{"start":{"line":76,"column":1,"offset":5286},"end":{"line":79,"column":111,"offset":5454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#sending_a_request_with_credentials_included","title":"Permalink to Sending a request with credentials included"},"children":[{"type":"text","value":"Sending a request with credentials included","position":{"start":{"line":81,"column":6,"offset":5461},"end":{"line":81,"column":49,"offset":5504}}}],"position":{"start":{"line":81,"column":5,"offset":5460},"end":{"line":81,"column":225,"offset":5680}}}],"position":{"start":{"line":81,"column":1,"offset":5456},"end":{"line":81,"column":225,"offset":5680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To cause browsers to send a request with credentials included on both same-origin and cross-origin calls, add ","position":{"start":{"line":83,"column":1,"offset":5682},"end":{"line":83,"column":111,"offset":5792}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":83,"column":111,"offset":5792},"end":{"line":83,"column":135,"offset":5816}}},{"type":"text","value":" to the ","position":{"start":{"line":83,"column":135,"offset":5816},"end":{"line":83,"column":143,"offset":5824}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":83,"column":143,"offset":5824},"end":{"line":83,"column":149,"offset":5830}}},{"type":"text","value":" object you pass to the ","position":{"start":{"line":83,"column":149,"offset":5830},"end":{"line":83,"column":173,"offset":5854}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":83,"column":173,"offset":5854},"end":{"line":83,"column":182,"offset":5863}}},{"type":"text","value":" method.","position":{"start":{"line":83,"column":182,"offset":5863},"end":{"line":83,"column":190,"offset":5871}}}],"position":{"start":{"line":83,"column":1,"offset":5682},"end":{"line":83,"column":190,"offset":5871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nfetch('https://example.com', {\n  credentials: 'include'\n});\n"}],"position":{"start":{"line":85,"column":1,"offset":5873},"end":{"line":91,"column":4,"offset":5946}}}],"position":{"start":{"line":85,"column":1,"offset":5873},"end":{"line":91,"column":4,"offset":5946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":93,"column":3,"offset":5950},"end":{"line":93,"column":8,"offset":5955}}}],"position":{"start":{"line":93,"column":1,"offset":5948},"end":{"line":93,"column":10,"offset":5957}}},{"type":"text","value":" ","position":{"start":{"line":93,"column":10,"offset":5957},"end":{"line":93,"column":11,"offset":5958}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Access-Control-Allow-Origin"}],"position":{"start":{"line":93,"column":11,"offset":5958},"end":{"line":93,"column":40,"offset":5987}}},{"type":"text","value":" is prohibited from using a wildcard for requests with ","position":{"start":{"line":93,"column":40,"offset":5987},"end":{"line":93,"column":95,"offset":6042}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":93,"column":95,"offset":6042},"end":{"line":93,"column":119,"offset":6066}}},{"type":"text","value":". In such cases, the exact origin must be provided; even if you are using a CORS unblocker extension, the requests will still fail.","position":{"start":{"line":93,"column":119,"offset":6066},"end":{"line":93,"column":250,"offset":6197}}}],"position":{"start":{"line":93,"column":1,"offset":5948},"end":{"line":93,"column":250,"offset":6197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":95,"column":3,"offset":6201},"end":{"line":95,"column":8,"offset":6206}}}],"position":{"start":{"line":95,"column":1,"offset":6199},"end":{"line":95,"column":10,"offset":6208}}},{"type":"text","value":" Browsers should not send credentials in ","position":{"start":{"line":95,"column":10,"offset":6208},"end":{"line":95,"column":51,"offset":6249}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"preflight requests","position":{"start":{"line":95,"column":52,"offset":6250},"end":{"line":95,"column":70,"offset":6268}}}],"position":{"start":{"line":95,"column":51,"offset":6249},"end":{"line":95,"column":71,"offset":6269}}},{"type":"text","value":" irrespective of this setting. For more information see: ","position":{"start":{"line":95,"column":71,"offset":6269},"end":{"line":95,"column":128,"offset":6326}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#requests_with_credentials"},"children":[{"type":"text","value":"CORS > Requests with credentials","position":{"start":{"line":95,"column":129,"offset":6327},"end":{"line":95,"column":161,"offset":6359}}}],"position":{"start":{"line":95,"column":128,"offset":6326},"end":{"line":95,"column":244,"offset":6442}}},{"type":"text","value":".","position":{"start":{"line":95,"column":244,"offset":6442},"end":{"line":95,"column":245,"offset":6443}}}],"position":{"start":{"line":95,"column":1,"offset":6199},"end":{"line":95,"column":245,"offset":6443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you only want to send credentials if the request URL is on the same origin as the calling script, add ","position":{"start":{"line":97,"column":1,"offset":6445},"end":{"line":97,"column":106,"offset":6550}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'same-origin'"}],"position":{"start":{"line":97,"column":106,"offset":6550},"end":{"line":97,"column":134,"offset":6578}}},{"type":"text","value":".","position":{"start":{"line":97,"column":134,"offset":6578},"end":{"line":97,"column":135,"offset":6579}}}],"position":{"start":{"line":97,"column":1,"offset":6445},"end":{"line":97,"column":135,"offset":6579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\n// The calling script is on the origin 'https://example.com'\n\nfetch('https://example.com', {\n  credentials: 'same-origin'\n});\n"}],"position":{"start":{"line":99,"column":1,"offset":6581},"end":{"line":107,"column":4,"offset":6720}}}],"position":{"start":{"line":99,"column":1,"offset":6581},"end":{"line":107,"column":4,"offset":6720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To instead ensure browsers don't include credentials in the request, use ","position":{"start":{"line":109,"column":1,"offset":6722},"end":{"line":109,"column":74,"offset":6795}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'omit'"}],"position":{"start":{"line":109,"column":74,"offset":6795},"end":{"line":109,"column":95,"offset":6816}}},{"type":"text","value":".","position":{"start":{"line":109,"column":95,"offset":6816},"end":{"line":109,"column":96,"offset":6817}}}],"position":{"start":{"line":109,"column":1,"offset":6722},"end":{"line":109,"column":96,"offset":6817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nfetch('https://example.com', {\n  credentials: 'omit'\n})\n"}],"position":{"start":{"line":111,"column":1,"offset":6819},"end":{"line":117,"column":4,"offset":6888}}}],"position":{"start":{"line":111,"column":1,"offset":6819},"end":{"line":117,"column":4,"offset":6888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_json_data","title":"Permalink to Uploading JSON data"},"children":[{"type":"text","value":"Uploading JSON data","position":{"start":{"line":119,"column":6,"offset":6895},"end":{"line":119,"column":25,"offset":6914}}}],"position":{"start":{"line":119,"column":5,"offset":6894},"end":{"line":119,"column":153,"offset":7042}}}],"position":{"start":{"line":119,"column":1,"offset":6890},"end":{"line":119,"column":153,"offset":7042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":121,"column":1,"offset":7044},"end":{"line":121,"column":5,"offset":7048}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":121,"column":6,"offset":7049},"end":{"line":121,"column":15,"offset":7058}}}],"position":{"start":{"line":121,"column":5,"offset":7048},"end":{"line":121,"column":72,"offset":7115}}},{"type":"text","value":" to POST JSON-encoded data.","position":{"start":{"line":121,"column":72,"offset":7115},"end":{"line":121,"column":99,"offset":7142}}}],"position":{"start":{"line":121,"column":1,"offset":7044},"end":{"line":121,"column":99,"offset":7142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nconst data = { username: 'example' };\n\nfetch('https://example.com/profile', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n.then(response => response.json())\n.then(data => {\n  console.log('Success:', data);\n})\n.catch((error) => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":123,"column":1,"offset":7144},"end":{"line":142,"column":4,"offset":7501}}}],"position":{"start":{"line":123,"column":1,"offset":7144},"end":{"line":142,"column":4,"offset":7501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_a_file","title":"Permalink to Uploading a file"},"children":[{"type":"text","value":"Uploading a file","position":{"start":{"line":144,"column":6,"offset":7508},"end":{"line":144,"column":22,"offset":7524}}}],"position":{"start":{"line":144,"column":5,"offset":7507},"end":{"line":144,"column":144,"offset":7646}}}],"position":{"start":{"line":144,"column":1,"offset":7503},"end":{"line":144,"column":144,"offset":7646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":146,"column":1,"offset":7648},"end":{"line":146,"column":37,"offset":7684}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" />"}],"position":{"start":{"line":146,"column":37,"offset":7684},"end":{"line":146,"column":60,"offset":7707}}},{"type":"text","value":" input element, ","position":{"start":{"line":146,"column":60,"offset":7707},"end":{"line":146,"column":76,"offset":7723}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":146,"column":77,"offset":7724},"end":{"line":146,"column":89,"offset":7736}}}],"position":{"start":{"line":146,"column":76,"offset":7723},"end":{"line":146,"column":171,"offset":7818}}},{"type":"text","value":" and ","position":{"start":{"line":146,"column":171,"offset":7818},"end":{"line":146,"column":176,"offset":7823}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":146,"column":177,"offset":7824},"end":{"line":146,"column":186,"offset":7833}}}],"position":{"start":{"line":146,"column":176,"offset":7823},"end":{"line":146,"column":243,"offset":7890}}},{"type":"text","value":".","position":{"start":{"line":146,"column":243,"offset":7890},"end":{"line":146,"column":244,"offset":7891}}}],"position":{"start":{"line":146,"column":1,"offset":7648},"end":{"line":146,"column":244,"offset":7891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nconst formData = new FormData();\nconst fileField = document.querySelector('input[type=\"file\"]');\n\nformData.append('username', 'abc123');\nformData.append('avatar', fileField.files[0]);\n\nfetch('https://example.com/profile/avatar', {\n  method: 'PUT',\n  body: formData\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":148,"column":1,"offset":7893},"end":{"line":168,"column":4,"offset":8321}}}],"position":{"start":{"line":148,"column":1,"offset":7893},"end":{"line":168,"column":4,"offset":8321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_multiple_files","title":"Permalink to Uploading multiple files"},"children":[{"type":"text","value":"Uploading multiple files","position":{"start":{"line":170,"column":6,"offset":8328},"end":{"line":170,"column":30,"offset":8352}}}],"position":{"start":{"line":170,"column":5,"offset":8327},"end":{"line":170,"column":168,"offset":8490}}}],"position":{"start":{"line":170,"column":1,"offset":8323},"end":{"line":170,"column":168,"offset":8490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":172,"column":1,"offset":8492},"end":{"line":172,"column":37,"offset":8528}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" multiple />"}],"position":{"start":{"line":172,"column":37,"offset":8528},"end":{"line":172,"column":69,"offset":8560}}},{"type":"text","value":" input element, ","position":{"start":{"line":172,"column":69,"offset":8560},"end":{"line":172,"column":85,"offset":8576}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":172,"column":86,"offset":8577},"end":{"line":172,"column":98,"offset":8589}}}],"position":{"start":{"line":172,"column":85,"offset":8576},"end":{"line":172,"column":180,"offset":8671}}},{"type":"text","value":" and ","position":{"start":{"line":172,"column":180,"offset":8671},"end":{"line":172,"column":185,"offset":8676}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":172,"column":186,"offset":8677},"end":{"line":172,"column":195,"offset":8686}}}],"position":{"start":{"line":172,"column":185,"offset":8676},"end":{"line":172,"column":252,"offset":8743}}},{"type":"text","value":".","position":{"start":{"line":172,"column":252,"offset":8743},"end":{"line":172,"column":253,"offset":8744}}}],"position":{"start":{"line":172,"column":1,"offset":8492},"end":{"line":172,"column":253,"offset":8744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nconst formData = new FormData();\nconst photos = document.querySelector('input[type=\"file\"][multiple]');\n\nformData.append('title', 'My Vegas Vacation');\nfor (let i = 0; i < photos.files.length; i++) {\n  formData.append(`photos_${i}`, photos.files[i]);\n}\n\nfetch('https://example.com/posts', {\n  method: 'POST',\n  body: formData,\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":174,"column":1,"offset":8746},"end":{"line":196,"column":4,"offset":9236}}}],"position":{"start":{"line":174,"column":1,"offset":8746},"end":{"line":196,"column":4,"offset":9236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#processing_a_text_file_line_by_line","title":"Permalink to Processing a text file line by line"},"children":[{"type":"text","value":"Processing a text file line by line","position":{"start":{"line":198,"column":6,"offset":9243},"end":{"line":198,"column":41,"offset":9278}}}],"position":{"start":{"line":198,"column":5,"offset":9242},"end":{"line":198,"column":201,"offset":9438}}}],"position":{"start":{"line":198,"column":1,"offset":9238},"end":{"line":198,"column":201,"offset":9438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The chunks that are read from a response are not broken neatly at line boundaries and are Uint8Arrays, not strings. If you want to fetch a text file and process it line by line, it is up to you to handle these complications. The following example shows one way to do this by creating a line iterator (for simplicity, it assumes the text is UTF-8, and doesn't handle fetch errors).","position":{"start":{"line":200,"column":1,"offset":9440},"end":{"line":200,"column":381,"offset":9820}}}],"position":{"start":{"line":200,"column":1,"offset":9440},"end":{"line":200,"column":381,"offset":9820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n\nasync function* makeTextFileLineIterator(fileURL) {\n  const utf8Decoder = new TextDecoder('utf-8');\n  const response = await fetch(fileURL);\n  const reader = response.body.getReader();\n  let { value: chunk, done: readerDone } = await reader.read();\n  chunk = chunk ? utf8Decoder.decode(chunk) : '';\n\n  const re = /\\n|\\r|\\r\\n/gm;\n  let startIndex = 0;\n  let result;\n\n  for (;;) {\n    let result = re.exec(chunk);\n    if (!result) {\n      if (readerDone) {\n        break;\n      }\n      let remainder = chunk.substr(startIndex);\n      ({ value: chunk, done: readerDone } = await reader.read());\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '');\n      startIndex = re.lastIndex = 0;\n      continue;\n    }\n    yield chunk.substring(startIndex, result.index);\n    startIndex = re.lastIndex;\n  }\n  if (startIndex < chunk.length) {\n    // last line didn't end in a newline char\n    yield chunk.substr(startIndex);\n  }\n}\n\nasync function run() {\n  for await (let line of makeTextFileLineIterator(urlOfFile)) {\n    processLine(line);\n  }\n}\n\nrun();\n"}],"position":{"start":{"line":202,"column":1,"offset":9822},"end":{"line":244,"column":4,"offset":10890}}}],"position":{"start":{"line":202,"column":1,"offset":9822},"end":{"line":244,"column":4,"offset":10890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#checking_that_the_fetch_was_successful","title":"Permalink to Checking that the fetch was successful"},"children":[{"type":"text","value":"Checking that the fetch was successful","position":{"start":{"line":246,"column":6,"offset":10897},"end":{"line":246,"column":44,"offset":10935}}}],"position":{"start":{"line":246,"column":5,"offset":10896},"end":{"line":246,"column":210,"offset":11101}}}],"position":{"start":{"line":246,"column":1,"offset":10892},"end":{"line":246,"column":210,"offset":11101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A ","position":{"start":{"line":248,"column":1,"offset":11103},"end":{"line":248,"column":3,"offset":11105}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":248,"column":4,"offset":11106},"end":{"line":248,"column":13,"offset":11115}}}],"position":{"start":{"line":248,"column":3,"offset":11105},"end":{"line":248,"column":70,"offset":11172}}},{"type":"text","value":" promise will reject with a ","position":{"start":{"line":248,"column":70,"offset":11172},"end":{"line":248,"column":98,"offset":11200}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":248,"column":99,"offset":11201},"end":{"line":248,"column":110,"offset":11212}}}],"position":{"start":{"line":248,"column":98,"offset":11200},"end":{"line":248,"column":203,"offset":11305}}},{"type":"text","value":" when a network error is encountered or CORS is misconfigured on the server-side, although this usually means permission issues or similar — a 404 does not constitute a network error, for example. An accurate check for a successful ","position":{"start":{"line":248,"column":203,"offset":11305},"end":{"line":248,"column":435,"offset":11537}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":248,"column":435,"offset":11537},"end":{"line":248,"column":444,"offset":11546}}},{"type":"text","value":" would include checking that the promise resolved, then checking that the ","position":{"start":{"line":248,"column":444,"offset":11546},"end":{"line":248,"column":518,"offset":11620}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response.ok"}],"position":{"start":{"line":248,"column":519,"offset":11621},"end":{"line":248,"column":532,"offset":11634}}}],"position":{"start":{"line":248,"column":518,"offset":11620},"end":{"line":248,"column":595,"offset":11697}}},{"type":"text","value":" property has a value of true. The code would look something like this:","position":{"start":{"line":248,"column":595,"offset":11697},"end":{"line":248,"column":666,"offset":11768}}}],"position":{"start":{"line":248,"column":1,"offset":11103},"end":{"line":248,"column":666,"offset":11768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch('flowers.jpg')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not OK');\n    }\n    return response.blob();\n  })\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  })\n  .catch(error => {\n    console.error('There has been a problem with your fetch operation:', error);\n  });\n"}],"position":{"start":{"line":250,"column":1,"offset":11770},"end":{"line":264,"column":4,"offset":12116}}}],"position":{"start":{"line":250,"column":1,"offset":11770},"end":{"line":264,"column":4,"offset":12116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_your_own_request_object","title":"Permalink to Supplying your own request object"},"children":[{"type":"text","value":"Supplying your own request object","position":{"start":{"line":266,"column":6,"offset":12123},"end":{"line":266,"column":39,"offset":12156}}}],"position":{"start":{"line":266,"column":5,"offset":12122},"end":{"line":266,"column":195,"offset":12312}}}],"position":{"start":{"line":266,"column":1,"offset":12118},"end":{"line":266,"column":195,"offset":12312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of passing a path to the resource you want to request into the ","position":{"start":{"line":268,"column":1,"offset":12314},"end":{"line":268,"column":72,"offset":12385}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":268,"column":72,"offset":12385},"end":{"line":268,"column":81,"offset":12394}}},{"type":"text","value":" call, you can create a request object using the ","position":{"start":{"line":268,"column":81,"offset":12394},"end":{"line":268,"column":130,"offset":12443}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/Request","title":"Request()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":268,"column":131,"offset":12444},"end":{"line":268,"column":142,"offset":12455}}}],"position":{"start":{"line":268,"column":130,"offset":12443},"end":{"line":268,"column":221,"offset":12534}}},{"type":"text","value":" constructor, and pass that in as a ","position":{"start":{"line":268,"column":221,"offset":12534},"end":{"line":268,"column":257,"offset":12570}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":268,"column":257,"offset":12570},"end":{"line":268,"column":266,"offset":12579}}},{"type":"text","value":" method argument:","position":{"start":{"line":268,"column":266,"offset":12579},"end":{"line":268,"column":283,"offset":12596}}}],"position":{"start":{"line":268,"column":1,"offset":12314},"end":{"line":268,"column":283,"offset":12596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers();\n\nconst myRequest = new Request('flowers.jpg', {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'cors',\n  cache: 'default',\n});\n\nfetch(myRequest)\n  .then(response => response.blob())\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  });\n"}],"position":{"start":{"line":270,"column":1,"offset":12598},"end":{"line":285,"column":4,"offset":12893}}}],"position":{"start":{"line":270,"column":1,"offset":12598},"end":{"line":285,"column":4,"offset":12893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":287,"column":1,"offset":12895},"end":{"line":287,"column":12,"offset":12906}}},{"type":"text","value":" accepts exactly the same parameters as the ","position":{"start":{"line":287,"column":12,"offset":12906},"end":{"line":287,"column":56,"offset":12950}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":287,"column":56,"offset":12950},"end":{"line":287,"column":65,"offset":12959}}},{"type":"text","value":" method. You can even pass in an existing request object to create a copy of it:","position":{"start":{"line":287,"column":65,"offset":12959},"end":{"line":287,"column":145,"offset":13039}}}],"position":{"start":{"line":287,"column":1,"offset":12895},"end":{"line":287,"column":145,"offset":13039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const anotherRequest = new Request(myRequest, myInit);\n"}],"position":{"start":{"line":289,"column":1,"offset":13041},"end":{"line":291,"column":4,"offset":13103}}}],"position":{"start":{"line":289,"column":1,"offset":13041},"end":{"line":291,"column":4,"offset":13103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is pretty useful, as request and response bodies are one use only. Making a copy like this allows you to make use of the request/response again while varying the ","position":{"start":{"line":293,"column":1,"offset":13105},"end":{"line":293,"column":168,"offset":13272}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":293,"column":168,"offset":13272},"end":{"line":293,"column":174,"offset":13278}}},{"type":"text","value":" options if desired. The copy must be made before the body is read, and reading the body in the copy will also mark it as read in the original request.","position":{"start":{"line":293,"column":174,"offset":13278},"end":{"line":293,"column":325,"offset":13429}}}],"position":{"start":{"line":293,"column":1,"offset":13105},"end":{"line":293,"column":325,"offset":13429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":295,"column":3,"offset":13433},"end":{"line":295,"column":8,"offset":13438}}}],"position":{"start":{"line":295,"column":1,"offset":13431},"end":{"line":295,"column":10,"offset":13440}}},{"type":"text","value":" There is also a ","position":{"start":{"line":295,"column":10,"offset":13440},"end":{"line":295,"column":27,"offset":13457}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/clone","title":"clone()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"clone()"}],"position":{"start":{"line":295,"column":28,"offset":13458},"end":{"line":295,"column":37,"offset":13467}}}],"position":{"start":{"line":295,"column":27,"offset":13457},"end":{"line":295,"column":112,"offset":13542}}},{"type":"text","value":" method that creates a copy. Both methods of creating a copy will fail if the body of the original request or response has already been read, but reading the body of a cloned response or request will not cause it to be marked as read in the original.","position":{"start":{"line":295,"column":112,"offset":13542},"end":{"line":295,"column":362,"offset":13792}}}],"position":{"start":{"line":295,"column":1,"offset":13431},"end":{"line":295,"column":362,"offset":13792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":297,"column":1,"offset":13794},"end":{"line":297,"column":5,"offset":13798}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers"}],"position":{"start":{"line":297,"column":6,"offset":13799},"end":{"line":297,"column":15,"offset":13808}}}],"position":{"start":{"line":297,"column":5,"offset":13798},"end":{"line":297,"column":74,"offset":13867}}},{"type":"text","value":" interface allows you to create your own headers object via the ","position":{"start":{"line":297,"column":74,"offset":13867},"end":{"line":297,"column":138,"offset":13931}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers","title":"Headers()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers()"}],"position":{"start":{"line":297,"column":139,"offset":13932},"end":{"line":297,"column":150,"offset":13943}}}],"position":{"start":{"line":297,"column":138,"offset":13931},"end":{"line":297,"column":229,"offset":14022}}},{"type":"text","value":" constructor. A headers object is a simple multi-map of names to values:","position":{"start":{"line":297,"column":229,"offset":14022},"end":{"line":297,"column":301,"offset":14094}}}],"position":{"start":{"line":297,"column":1,"offset":13794},"end":{"line":297,"column":301,"offset":14094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const content = 'Hello World';\nconst myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'text/plain');\nmyHeaders.append('Content-Length', content.length.toString());\nmyHeaders.append('X-Custom-Header', 'ProcessThisImmediately');\n"}],"position":{"start":{"line":299,"column":1,"offset":14096},"end":{"line":305,"column":4,"offset":14341}}}],"position":{"start":{"line":299,"column":1,"offset":14096},"end":{"line":305,"column":4,"offset":14341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The same can be achieved by passing an array of arrays or an object literal to the constructor:","position":{"start":{"line":307,"column":1,"offset":14343},"end":{"line":307,"column":96,"offset":14438}}}],"position":{"start":{"line":307,"column":1,"offset":14343},"end":{"line":307,"column":96,"offset":14438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers({\n  'Content-Type': 'text/plain',\n  'Content-Length': content.length.toString(),\n  'X-Custom-Header': 'ProcessThisImmediately'\n});\n"}],"position":{"start":{"line":309,"column":1,"offset":14440},"end":{"line":315,"column":4,"offset":14608}}}],"position":{"start":{"line":309,"column":1,"offset":14440},"end":{"line":315,"column":4,"offset":14608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The contents can be queried and retrieved:","position":{"start":{"line":317,"column":1,"offset":14610},"end":{"line":317,"column":43,"offset":14652}}}],"position":{"start":{"line":317,"column":1,"offset":14610},"end":{"line":317,"column":43,"offset":14652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log(myHeaders.has('Content-Type')); // true\nconsole.log(myHeaders.has('Set-Cookie')); // false\nmyHeaders.set('Content-Type', 'text/html');\nmyHeaders.append('X-Custom-Header', 'AnotherValue');\n\nconsole.log(myHeaders.get('Content-Length')); // 11\nconsole.log(myHeaders.get('X-Custom-Header')); // ['ProcessThisImmediately', 'AnotherValue']\n\nmyHeaders.delete('X-Custom-Header');\nconsole.log(myHeaders.get('X-Custom-Header')); // null\n"}],"position":{"start":{"line":319,"column":1,"offset":14654},"end":{"line":330,"column":4,"offset":15100}}}],"position":{"start":{"line":319,"column":1,"offset":14654},"end":{"line":330,"column":4,"offset":15100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some of these operations are only useful in ","position":{"start":{"line":332,"column":1,"offset":15102},"end":{"line":332,"column":45,"offset":15146}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"ServiceWorkers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ServiceWorkers"}],"position":{"start":{"line":332,"column":46,"offset":15147},"end":{"line":332,"column":62,"offset":15163}}}],"position":{"start":{"line":332,"column":45,"offset":15146},"end":{"line":332,"column":149,"offset":15250}}},{"type":"text","value":", but they provide a much nicer API for manipulating headers.","position":{"start":{"line":332,"column":149,"offset":15250},"end":{"line":332,"column":210,"offset":15311}}}],"position":{"start":{"line":332,"column":1,"offset":15102},"end":{"line":332,"column":210,"offset":15311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All of the Headers methods throw a ","position":{"start":{"line":334,"column":1,"offset":15313},"end":{"line":334,"column":36,"offset":15348}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":334,"column":36,"offset":15348},"end":{"line":334,"column":47,"offset":15359}}},{"type":"text","value":" if a header name is used that is not a valid HTTP Header name. The mutation operations will throw a ","position":{"start":{"line":334,"column":47,"offset":15359},"end":{"line":334,"column":148,"offset":15460}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":334,"column":148,"offset":15460},"end":{"line":334,"column":159,"offset":15471}}},{"type":"text","value":" if there is an immutable guard (","position":{"start":{"line":334,"column":159,"offset":15471},"end":{"line":334,"column":192,"offset":15504}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard"},"children":[{"type":"text","value":"see below","position":{"start":{"line":334,"column":193,"offset":15505},"end":{"line":334,"column":202,"offset":15514}}}],"position":{"start":{"line":334,"column":192,"offset":15504},"end":{"line":334,"column":281,"offset":15593}}},{"type":"text","value":"). Otherwise, they fail silently. For example:","position":{"start":{"line":334,"column":281,"offset":15593},"end":{"line":334,"column":327,"offset":15639}}}],"position":{"start":{"line":334,"column":1,"offset":15313},"end":{"line":334,"column":327,"offset":15639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myResponse = Response.error();\ntry {\n  myResponse.headers.set('Origin', 'http://mybank.com');\n} catch (e) {\n  console.log('Cannot pretend to be a bank!');\n}\n"}],"position":{"start":{"line":336,"column":1,"offset":15641},"end":{"line":343,"column":4,"offset":15811}}}],"position":{"start":{"line":336,"column":1,"offset":15641},"end":{"line":343,"column":4,"offset":15811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A good use case for headers is checking whether the content type is correct before you process it further. For example:","position":{"start":{"line":345,"column":1,"offset":15813},"end":{"line":345,"column":120,"offset":15932}}}],"position":{"start":{"line":345,"column":1,"offset":15813},"end":{"line":345,"column":120,"offset":15932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch(myRequest)\n  .then(response => {\n     const contentType = response.headers.get('content-type');\n     if (!contentType || !contentType.includes('application/json')) {\n       throw new TypeError(\"Oops, we haven't got JSON!\");\n     }\n     return response.json();\n  })\n  .then(data => {\n      /* process your data further */\n  })\n  .catch(error => console.error(error));\n"}],"position":{"start":{"line":347,"column":1,"offset":15934},"end":{"line":360,"column":4,"offset":16314}}}],"position":{"start":{"line":347,"column":1,"offset":15934},"end":{"line":360,"column":4,"offset":16314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard","title":"Permalink to Guard"},"children":[{"type":"text","value":"Guard","position":{"start":{"line":362,"column":6,"offset":16321},"end":{"line":362,"column":11,"offset":16326}}}],"position":{"start":{"line":362,"column":5,"offset":16320},"end":{"line":362,"column":111,"offset":16426}}}],"position":{"start":{"line":362,"column":1,"offset":16316},"end":{"line":362,"column":111,"offset":16426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since headers can be sent in requests and received in responses, and have various limitations about what information can and should be mutable, headers' objects have a ","position":{"start":{"line":364,"column":1,"offset":16428},"end":{"line":364,"column":169,"offset":16596}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"guard","position":{"start":{"line":364,"column":170,"offset":16597},"end":{"line":364,"column":175,"offset":16602}}}],"position":{"start":{"line":364,"column":169,"offset":16596},"end":{"line":364,"column":176,"offset":16603}}},{"type":"text","value":" property. This is not exposed to the Web, but it affects which mutation operations are allowed on the headers object.","position":{"start":{"line":364,"column":176,"offset":16603},"end":{"line":364,"column":294,"offset":16721}}}],"position":{"start":{"line":364,"column":1,"offset":16428},"end":{"line":364,"column":294,"offset":16721}}},{"type":"text","value":"\n"},{"type":"raw","value":"</details>","position":{"start":{"line":368,"column":1,"offset":16725},"end":{"line":368,"column":11,"offset":16735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Fetch","position":{"start":{"line":370,"column":3,"offset":16739},"end":{"line":370,"column":8,"offset":16744}}}],"position":{"start":{"line":370,"column":1,"offset":16737},"end":{"line":370,"column":8,"offset":16744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfetch('/data.json')  .then(response => response.json())  .then(data => {    console.log(data)  })  .catch(err => ...)\n"}],"position":{"start":{"line":372,"column":1,"offset":16746},"end":{"line":375,"column":4,"offset":16876}}}],"position":{"start":{"line":372,"column":1,"offset":16746},"end":{"line":375,"column":4,"offset":16876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Response","position":{"start":{"line":377,"column":5,"offset":16882},"end":{"line":377,"column":13,"offset":16890}}}],"position":{"start":{"line":377,"column":1,"offset":16878},"end":{"line":377,"column":13,"offset":16890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfetch('/data.json').then(res => {  res.text()       // response body (=> Promise)  res.json()       // parse via JSON (=> Promise)  res.status       //=> 200  res.statusText   //=> 'OK'  res.redirected   //=> false  res.ok           //=> true  res.url          //=> 'http://site.com/data.json'  res.type         //=> 'basic'                   //   ('cors' 'default' 'error'                   //    'opaque' 'opaqueredirect')\n"}],"position":{"start":{"line":379,"column":1,"offset":16892},"end":{"line":382,"column":4,"offset":17329}}}],"position":{"start":{"line":379,"column":1,"offset":16892},"end":{"line":382,"column":4,"offset":17329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n  res.headers.get('Content-Type')})\n"}],"position":{"start":{"line":384,"column":1,"offset":17331},"end":{"line":387,"column":4,"offset":17379}}}],"position":{"start":{"line":384,"column":1,"offset":17331},"end":{"line":387,"column":4,"offset":17379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Request options","position":{"start":{"line":389,"column":5,"offset":17385},"end":{"line":389,"column":20,"offset":17400}}}],"position":{"start":{"line":389,"column":1,"offset":17381},"end":{"line":389,"column":20,"offset":17400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfetch('/data.json', {  method: 'post',  body: new FormData(form), // post body  body: JSON.stringify(...),\n"}],"position":{"start":{"line":391,"column":1,"offset":17402},"end":{"line":394,"column":4,"offset":17521}}}],"position":{"start":{"line":391,"column":1,"offset":17402},"end":{"line":394,"column":4,"offset":17521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n  headers: {    'Accept': 'application/json'  },\n"}],"position":{"start":{"line":396,"column":1,"offset":17523},"end":{"line":399,"column":4,"offset":17584}}}],"position":{"start":{"line":396,"column":1,"offset":17523},"end":{"line":399,"column":4,"offset":17584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n  credentials: 'same-origin', // send cookies  credentials: 'include',     // send cookies, even in CORS\n"}],"position":{"start":{"line":401,"column":1,"offset":17586},"end":{"line":404,"column":4,"offset":17703}}}],"position":{"start":{"line":401,"column":1,"offset":17586},"end":{"line":404,"column":4,"offset":17703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n})\n"}],"position":{"start":{"line":406,"column":1,"offset":17705},"end":{"line":409,"column":4,"offset":17720}}}],"position":{"start":{"line":406,"column":1,"offset":17705},"end":{"line":409,"column":4,"offset":17720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Catching errors","position":{"start":{"line":411,"column":5,"offset":17726},"end":{"line":411,"column":20,"offset":17741}}}],"position":{"start":{"line":411,"column":1,"offset":17722},"end":{"line":411,"column":20,"offset":17741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfetch('/data.json')  .then(checkStatus)\n"}],"position":{"start":{"line":413,"column":1,"offset":17743},"end":{"line":416,"column":4,"offset":17795}}}],"position":{"start":{"line":413,"column":1,"offset":17743},"end":{"line":416,"column":4,"offset":17795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nfunction checkStatus (res) {  if (res.status >= 200 && res.status < 300) {    return res  } else {    let err = new Error(res.statusText)    err.response = res    throw err  }}\n"}],"position":{"start":{"line":418,"column":1,"offset":17797},"end":{"line":421,"column":4,"offset":17986}}}],"position":{"start":{"line":418,"column":1,"offset":17797},"end":{"line":421,"column":4,"offset":17986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Non-2xx responses are still successful requests. Use another function to turn them to errors.","position":{"start":{"line":423,"column":1,"offset":17988},"end":{"line":423,"column":94,"offset":18081}}}],"position":{"start":{"line":423,"column":1,"offset":17988},"end":{"line":423,"column":94,"offset":18081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Using with node.js","position":{"start":{"line":425,"column":5,"offset":18087},"end":{"line":425,"column":23,"offset":18105}}}],"position":{"start":{"line":425,"column":1,"offset":18083},"end":{"line":425,"column":23,"offset":18105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nconst fetch = require('isomorphic-fetch')\n"}],"position":{"start":{"line":427,"column":1,"offset":18107},"end":{"line":430,"column":4,"offset":18161}}}],"position":{"start":{"line":427,"column":1,"offset":18107},"end":{"line":430,"column":4,"offset":18161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See: ","position":{"start":{"line":432,"column":1,"offset":18163},"end":{"line":432,"column":6,"offset":18168}}},{"type":"element","tagName":"a","properties":{"href":"https://npmjs.com/package/isomorphic-fetch"},"children":[{"type":"text","value":"isomorphic-fetch","position":{"start":{"line":432,"column":7,"offset":18169},"end":{"line":432,"column":23,"offset":18185}}}],"position":{"start":{"line":432,"column":6,"offset":18168},"end":{"line":432,"column":68,"offset":18230}}},{"type":"text","value":" ","position":{"start":{"line":432,"column":68,"offset":18230},"end":{"line":432,"column":69,"offset":18231}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"(npmjs.com)","position":{"start":{"line":432,"column":70,"offset":18232},"end":{"line":432,"column":81,"offset":18243}}}],"position":{"start":{"line":432,"column":69,"offset":18231},"end":{"line":432,"column":82,"offset":18244}}}],"position":{"start":{"line":432,"column":1,"offset":18163},"end":{"line":432,"column":82,"offset":18244}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":433,"column":1,"offset":18245}}}}