{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-3663b19530f12bed4a4e9c0da7ab0d9e--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Object.create()","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":18,"offset":19},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":18,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1,"offset":21},"end":{"line":5,"column":5,"offset":25},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":5,"column":5,"offset":25},"end":{"line":5,"column":22,"offset":42},"indent":[]}},{"type":"text","value":" method creates a new object, using an existing object as the prototype of the newly created object.","position":{"start":{"line":5,"column":22,"offset":42},"end":{"line":5,"column":122,"offset":142},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":21},"end":{"line":5,"column":122,"offset":142},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":7,"column":4,"offset":147},"end":{"line":7,"column":10,"offset":153},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":144},"end":{"line":7,"column":10,"offset":153},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Object.create(proto)\nObject.create(proto, propertiesObject)","position":{"start":{"line":9,"column":1,"offset":155},"end":{"line":10,"column":43,"offset":222},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":12,"column":5,"offset":228},"end":{"line":12,"column":15,"offset":238},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":224},"end":{"line":12,"column":15,"offset":238},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"proto","position":{"start":{"line":14,"column":1,"offset":240},"end":{"line":14,"column":8,"offset":247},"indent":[]}},{"type":"text","value":"\nThe object which should be the prototype of the newly-created object.","position":{"start":{"line":14,"column":8,"offset":247},"end":{"line":15,"column":70,"offset":317},"indent":[1]}}],"position":{"start":{"line":14,"column":1,"offset":240},"end":{"line":15,"column":70,"offset":317},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"propertiesObject","position":{"start":{"line":17,"column":1,"offset":319},"end":{"line":17,"column":19,"offset":337},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":17,"column":19,"offset":337},"end":{"line":17,"column":20,"offset":338},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":17,"column":20,"offset":338},"end":{"line":17,"column":56,"offset":374},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":17,"column":56,"offset":374},"end":{"line":17,"column":64,"offset":382},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":17,"column":64,"offset":382},"end":{"line":17,"column":71,"offset":389},"indent":[]}},{"type":"text","value":"\nIf specified and not ","position":{"start":{"line":17,"column":71,"offset":389},"end":{"line":18,"column":22,"offset":411},"indent":[1]}},{"type":"link","title":null,"url":"../undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":18,"column":23,"offset":412},"end":{"line":18,"column":34,"offset":423},"indent":[]}}],"position":{"start":{"line":18,"column":22,"offset":411},"end":{"line":18,"column":49,"offset":438},"indent":[]}},{"type":"text","value":", an object whose enumerable own properties (that is, those properties defined upon itself and ","position":{"start":{"line":18,"column":49,"offset":438},"end":{"line":18,"column":144,"offset":533},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":18,"column":145,"offset":534},"end":{"line":18,"column":148,"offset":537},"indent":[]}}],"position":{"start":{"line":18,"column":144,"offset":533},"end":{"line":18,"column":149,"offset":538},"indent":[]}},{"type":"text","value":" enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of ","position":{"start":{"line":18,"column":149,"offset":538},"end":{"line":18,"column":362,"offset":751},"indent":[]}},{"type":"link","title":null,"url":"defineproperties","children":[{"type":"inlineCode","value":"Object.defineProperties()","position":{"start":{"line":18,"column":363,"offset":752},"end":{"line":18,"column":390,"offset":779},"indent":[]}}],"position":{"start":{"line":18,"column":362,"offset":751},"end":{"line":18,"column":409,"offset":798},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":18,"column":409,"offset":798},"end":{"line":18,"column":410,"offset":799},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":319},"end":{"line":18,"column":410,"offset":799},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":20,"column":5,"offset":805},"end":{"line":20,"column":17,"offset":817},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":801},"end":{"line":20,"column":17,"offset":817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new object with the specified prototype object and properties.","position":{"start":{"line":22,"column":1,"offset":819},"end":{"line":22,"column":65,"offset":883},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":819},"end":{"line":22,"column":65,"offset":883},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Exceptions","position":{"start":{"line":24,"column":5,"offset":889},"end":{"line":24,"column":15,"offset":899},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":885},"end":{"line":24,"column":15,"offset":899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":26,"column":1,"offset":901},"end":{"line":26,"column":5,"offset":905},"indent":[]}},{"type":"inlineCode","value":"proto","position":{"start":{"line":26,"column":5,"offset":905},"end":{"line":26,"column":12,"offset":912},"indent":[]}},{"type":"text","value":" parameter has to be either","position":{"start":{"line":26,"column":12,"offset":912},"end":{"line":26,"column":39,"offset":939},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":901},"end":{"line":26,"column":39,"offset":939},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"../null","children":[{"type":"inlineCode","value":"null","position":{"start":{"line":28,"column":4,"offset":944},"end":{"line":28,"column":10,"offset":950},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":943},"end":{"line":28,"column":20,"offset":960},"indent":[]}},{"type":"text","value":" or","position":{"start":{"line":28,"column":20,"offset":960},"end":{"line":28,"column":23,"offset":963},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":943},"end":{"line":28,"column":23,"offset":963},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":941},"end":{"line":28,"column":23,"offset":963},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"an ","position":{"start":{"line":29,"column":3,"offset":966},"end":{"line":29,"column":6,"offset":969},"indent":[]}},{"type":"link","title":null,"url":"../object","children":[{"type":"inlineCode","value":"Object","position":{"start":{"line":29,"column":7,"offset":970},"end":{"line":29,"column":15,"offset":978},"indent":[]}}],"position":{"start":{"line":29,"column":6,"offset":969},"end":{"line":29,"column":27,"offset":990},"indent":[]}},{"type":"text","value":" excluding ","position":{"start":{"line":29,"column":27,"offset":990},"end":{"line":29,"column":38,"offset":1001},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive#primitive_wrapper_objects_in_javascript","children":[{"type":"text","value":"primitive wrapper objects","position":{"start":{"line":29,"column":39,"offset":1002},"end":{"line":29,"column":64,"offset":1027},"indent":[]}}],"position":{"start":{"line":29,"column":38,"offset":1001},"end":{"line":29,"column":166,"offset":1129},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":29,"column":166,"offset":1129},"end":{"line":29,"column":167,"offset":1130},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":966},"end":{"line":29,"column":167,"offset":1130},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":964},"end":{"line":29,"column":167,"offset":1130},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":941},"end":{"line":29,"column":167,"offset":1130},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If ","position":{"start":{"line":31,"column":1,"offset":1132},"end":{"line":31,"column":4,"offset":1135},"indent":[]}},{"type":"inlineCode","value":"proto","position":{"start":{"line":31,"column":4,"offset":1135},"end":{"line":31,"column":11,"offset":1142},"indent":[]}},{"type":"text","value":" is neither of these a ","position":{"start":{"line":31,"column":11,"offset":1142},"end":{"line":31,"column":34,"offset":1165},"indent":[]}},{"type":"link","title":null,"url":"../typeerror","children":[{"type":"inlineCode","value":"TypeError","position":{"start":{"line":31,"column":35,"offset":1166},"end":{"line":31,"column":46,"offset":1177},"indent":[]}}],"position":{"start":{"line":31,"column":34,"offset":1165},"end":{"line":31,"column":61,"offset":1192},"indent":[]}},{"type":"text","value":" is thrown.","position":{"start":{"line":31,"column":61,"offset":1192},"end":{"line":31,"column":72,"offset":1203},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1132},"end":{"line":31,"column":72,"offset":1203},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Custom and Null objects","position":{"start":{"line":33,"column":4,"offset":1208},"end":{"line":33,"column":27,"offset":1231},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1205},"end":{"line":33,"column":27,"offset":1231},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new object created from a completely custom object (especially one created from the ","position":{"start":{"line":35,"column":1,"offset":1233},"end":{"line":35,"column":87,"offset":1319},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":35,"column":87,"offset":1319},"end":{"line":35,"column":93,"offset":1325},"indent":[]}},{"type":"text","value":" object, which is basically a custom object with NO members) can behave in unexpected ways. This is especially true when debugging, since common object-property converting/detecting utility functions may generate errors, or lose information (especially if using silent error-traps that ignore errors). For example, here are two objects:","position":{"start":{"line":35,"column":93,"offset":1325},"end":{"line":35,"column":429,"offset":1661},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1233},"end":{"line":35,"column":429,"offset":1661},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"oco = Object.create( {} );   // create a normal object\nocn = Object.create( null ); // create a \"null\" object\n\n> console.log(oco) // {} -- Seems normal\n> console.log(ocn) // {} -- Seems normal here too, so far\n\noco.p = 1; // create a simple property on normal obj\nocn.p = 0; // create a simple property on \"null\" obj\n\n> console.log(oco) // {p: 1} -- Still seems normal\n> console.log(ocn) // {p: 0} -- Still seems normal here too. BUT WAIT...","position":{"start":{"line":37,"column":1,"offset":1663},"end":{"line":47,"column":77,"offset":2136},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As shown above, all seems normal so far. However, when attempting to actually use these objects, their differences quickly become apparent:","position":{"start":{"line":49,"column":1,"offset":2138},"end":{"line":49,"column":140,"offset":2277},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2138},"end":{"line":49,"column":140,"offset":2277},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> \"oco is: \" + oco // shows \"oco is: [object Object]\"\n\n> \"ocn is: \" + ocn // throws error: Cannot convert object to primitive value","position":{"start":{"line":51,"column":1,"offset":2279},"end":{"line":53,"column":81,"offset":2418},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Testing just a few of the many most basic built-in functions shows the magnitude of the problem more clearly:","position":{"start":{"line":55,"column":1,"offset":2420},"end":{"line":55,"column":110,"offset":2529},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2420},"end":{"line":55,"column":110,"offset":2529},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> alert(oco) // shows [object Object]\n> alert(ocn) // throws error: Cannot convert object to primitive value\n\n> oco.toString() // shows [object Object]\n> ocn.toString() // throws error: ocn.toString is not a function\n\n> oco.valueOf() // shows {}\n> ocn.valueOf() // throws error: ocn.valueOf is not a function\n\n> oco.hasOwnProperty(\"p\") // shows \"true\"\n> ocn.hasOwnProperty(\"p\") // throws error: ocn.hasOwnProperty is not a function\n\n> oco.constructor // shows \"Object() { [native code] }\"\n> ocn.constructor // shows \"undefined\"","position":{"start":{"line":57,"column":1,"offset":2531},"end":{"line":70,"column":43,"offset":3098},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As said, these differences can make debugging even simple-seeming problems quickly go astray. For example:","position":{"start":{"line":72,"column":1,"offset":3100},"end":{"line":72,"column":107,"offset":3206},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3100},"end":{"line":72,"column":107,"offset":3206},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"A simple common debugging function:","position":{"start":{"line":74,"column":2,"offset":3209},"end":{"line":74,"column":37,"offset":3244},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3208},"end":{"line":74,"column":38,"offset":3245},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3208},"end":{"line":74,"column":38,"offset":3245},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// display top-level property name:value pairs of given object\nfunction ShowProperties(obj){\n  for(var prop in obj){\n    console.log(prop + \": \" + obj[prop] + \"\\n\" );\n  }\n}","position":{"start":{"line":76,"column":1,"offset":3247},"end":{"line":81,"column":6,"offset":3443},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Not such simple results: (especially if silent error-trapping had hidden the error messages)","position":{"start":{"line":83,"column":2,"offset":3446},"end":{"line":83,"column":94,"offset":3538},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3445},"end":{"line":83,"column":95,"offset":3539},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3445},"end":{"line":83,"column":95,"offset":3539},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ob={}; ob.po=oco; ob.pn=ocn; // create a compound object using the test objects from above as property values\n\n> ShowProperties( ob ) // display top-level properties\n- po: [object Object]\n- Error: Cannot convert object to primitive value\n\nNote that only first property gets shown.","position":{"start":{"line":85,"column":1,"offset":3541},"end":{"line":91,"column":46,"offset":3841},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"(But if the same object is created in a different order -- at least in some implementations...)","position":{"start":{"line":93,"column":2,"offset":3844},"end":{"line":93,"column":97,"offset":3939},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3843},"end":{"line":93,"column":98,"offset":3940},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3843},"end":{"line":93,"column":98,"offset":3940},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ob={}; ob.pn=ocn; ob.po=oco; // create same compound object again, but create same properties in different order\n\n> ShowProperties( ob ) // display top-level properties\n- Error: Cannot convert object to primitive value\n\nNote that neither property gets shown.","position":{"start":{"line":95,"column":1,"offset":3942},"end":{"line":100,"column":43,"offset":4216},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that such a different order may arise statically via disparate fixed codings such as here, but also dynamically via whatever the order any such property-adding code-branches actually get executed at runtime as depends on inputs and/or random-variables. Then again, the actual iteration order is not guaranteed no matter what the order members are added.","position":{"start":{"line":102,"column":1,"offset":4218},"end":{"line":102,"column":359,"offset":4576},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":4218},"end":{"line":102,"column":359,"offset":4576},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Be aware of, also, that using Object.entries() on an object created via Object.create() will result in an empty array being returned.","position":{"start":{"line":104,"column":1,"offset":4578},"end":{"line":104,"column":134,"offset":4711},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4578},"end":{"line":104,"column":134,"offset":4711},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var obj = Object.create({ a: 1, b: 2 });\n\n> console.log(Object.entries(obj)); // shows \"[]\"","position":{"start":{"line":106,"column":1,"offset":4713},"end":{"line":108,"column":54,"offset":4812},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Some NON-solutions","position":{"start":{"line":110,"column":6,"offset":4819},"end":{"line":110,"column":24,"offset":4837},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4814},"end":{"line":110,"column":24,"offset":4837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A good solution for the missing object-methods is not immediately apparent.","position":{"start":{"line":112,"column":1,"offset":4839},"end":{"line":112,"column":76,"offset":4914},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4839},"end":{"line":112,"column":76,"offset":4914},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method directly from the standard-object does NOT work:","position":{"start":{"line":114,"column":1,"offset":4916},"end":{"line":114,"column":82,"offset":4997},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4916},"end":{"line":114,"column":82,"offset":4997},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.toString = Object.toString; // since new object lacks method then try assigning it directly from standard-object\n\n> ocn.toString // shows \"toString() { [native code] }\" -- missing method seems to be there now\n> ocn.toString == Object.toString // shows \"true\" -- method seems to be same as the standard object-method\n\n> ocn.toString() // error: Function.prototype.toString requires that 'this' be a Function","position":{"start":{"line":116,"column":1,"offset":4999},"end":{"line":123,"column":94,"offset":5500},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method directly to new object's \"prototype\" does not work either, since the new object does not have a real prototype (which is really the cause of ALL these problems) and one cannot be ","position":{"start":{"line":125,"column":1,"offset":5502},"end":{"line":125,"column":213,"offset":5714},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"directly","position":{"start":{"line":125,"column":215,"offset":5716},"end":{"line":125,"column":223,"offset":5724},"indent":[]}}],"position":{"start":{"line":125,"column":213,"offset":5714},"end":{"line":125,"column":225,"offset":5726},"indent":[]}},{"type":"text","value":" added:","position":{"start":{"line":125,"column":225,"offset":5726},"end":{"line":125,"column":232,"offset":5733},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":5502},"end":{"line":125,"column":232,"offset":5733},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.prototype.toString = Object.toString; // Error: Cannot set property 'toString' of undefined\n\nocn.prototype = {};                       // try to create a prototype\nocn.prototype.toString = Object.toString; // since new object lacks method then try assigning it from standard-object\n\n> ocn.toString() // error: ocn.toString is not a function","position":{"start":{"line":127,"column":1,"offset":5735},"end":{"line":134,"column":62,"offset":6170},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method by using the standard-object as new object's prototype does not work either:","position":{"start":{"line":136,"column":1,"offset":6172},"end":{"line":136,"column":110,"offset":6281},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6172},"end":{"line":136,"column":110,"offset":6281},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null );        // create \"null\" object (same as before)\nObject.setPrototypeOf(ocn, Object); // set new object's prototype to the standard-object\n\n> ocn.toString() // error: Function.prototype.toString requires that 'this' be a Function","position":{"start":{"line":138,"column":1,"offset":6283},"end":{"line":141,"column":94,"offset":6551},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Some OK solutions","position":{"start":{"line":143,"column":6,"offset":6558},"end":{"line":143,"column":23,"offset":6575},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":6553},"end":{"line":143,"column":23,"offset":6575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, adding the missing object-method directly from the ","position":{"start":{"line":145,"column":1,"offset":6577},"end":{"line":145,"column":59,"offset":6635},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"standard-object","position":{"start":{"line":145,"column":61,"offset":6637},"end":{"line":145,"column":76,"offset":6652},"indent":[]}}],"position":{"start":{"line":145,"column":59,"offset":6635},"end":{"line":145,"column":78,"offset":6654},"indent":[]}},{"type":"text","value":" does NOT work. However, adding the ","position":{"start":{"line":145,"column":78,"offset":6654},"end":{"line":145,"column":114,"offset":6690},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"generic","position":{"start":{"line":145,"column":116,"offset":6692},"end":{"line":145,"column":123,"offset":6699},"indent":[]}}],"position":{"start":{"line":145,"column":114,"offset":6690},"end":{"line":145,"column":125,"offset":6701},"indent":[]}},{"type":"text","value":" method directly, DOES:","position":{"start":{"line":145,"column":125,"offset":6701},"end":{"line":145,"column":148,"offset":6724},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":6577},"end":{"line":145,"column":148,"offset":6724},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.toString = toString; // since new object lacks method then assign it directly from generic version\n\n> ocn.toString() // shows \"[object Object]\"\n> \"ocn is: \" + ocn // shows \"ocn is: [object Object]\"\n\nob={}; ob.pn=ocn; ob.po=oco; // create a compound object (same as before)\n\n> ShowProperties(ob) // display top-level properties\n- po: [object Object]\n- pn: [object Object]","position":{"start":{"line":147,"column":1,"offset":6726},"end":{"line":158,"column":26,"offset":7203},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"However, setting the generic ","position":{"start":{"line":160,"column":1,"offset":7205},"end":{"line":160,"column":30,"offset":7234},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"prototype","position":{"start":{"line":160,"column":32,"offset":7236},"end":{"line":160,"column":41,"offset":7245},"indent":[]}}],"position":{"start":{"line":160,"column":30,"offset":7234},"end":{"line":160,"column":43,"offset":7247},"indent":[]}},{"type":"text","value":" as the new object's prototype works even better:","position":{"start":{"line":160,"column":43,"offset":7247},"end":{"line":160,"column":92,"offset":7296},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":7205},"end":{"line":160,"column":92,"offset":7296},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null );                  // create \"null\" object (same as before)\nObject.setPrototypeOf(ocn, Object.prototype); // set new object's prototype to the \"generic\" object (NOT standard-object)","position":{"start":{"line":162,"column":1,"offset":7298},"end":{"line":163,"column":126,"offset":7514},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"(In addition to all the string-related functions shown above, this also adds:)","position":{"start":{"line":165,"column":2,"offset":7517},"end":{"line":165,"column":80,"offset":7595},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":7516},"end":{"line":165,"column":81,"offset":7596},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":7516},"end":{"line":165,"column":81,"offset":7596},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> ocn.valueOf() // shows {}\n> ocn.hasOwnProperty(\"x\") // shows \"false\"\n> ocn.constructor // shows \"Object() { [native code] }\"\n\n// ...and all the rest of the properties and methods of Object.prototype.","position":{"start":{"line":167,"column":1,"offset":7598},"end":{"line":171,"column":78,"offset":7815},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As shown, objects modified this way now look very much like ordinary objects.","position":{"start":{"line":173,"column":1,"offset":7817},"end":{"line":173,"column":78,"offset":7894},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":7817},"end":{"line":173,"column":78,"offset":7894},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":175,"column":4,"offset":7899},"end":{"line":175,"column":12,"offset":7907},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":7896},"end":{"line":175,"column":12,"offset":7907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This polyfill covers the main use case, which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.","position":{"start":{"line":177,"column":1,"offset":7909},"end":{"line":177,"column":162,"offset":8070},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":7909},"end":{"line":177,"column":162,"offset":8070},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that while the setting of ","position":{"start":{"line":179,"column":1,"offset":8072},"end":{"line":179,"column":32,"offset":8103},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":179,"column":32,"offset":8103},"end":{"line":179,"column":38,"offset":8109},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":179,"column":38,"offset":8109},"end":{"line":179,"column":42,"offset":8113},"indent":[]}},{"type":"inlineCode","value":"[[Prototype]]","position":{"start":{"line":179,"column":42,"offset":8113},"end":{"line":179,"column":57,"offset":8128},"indent":[]}},{"type":"text","value":" is supported in the real ES5 ","position":{"start":{"line":179,"column":57,"offset":8128},"end":{"line":179,"column":87,"offset":8158},"indent":[]}},{"type":"inlineCode","value":"Object.create","position":{"start":{"line":179,"column":87,"offset":8158},"end":{"line":179,"column":102,"offset":8173},"indent":[]}},{"type":"text","value":", this polyfill cannot support it due to a limitation inherent in versions of ECMAScript lower than 5.","position":{"start":{"line":179,"column":102,"offset":8173},"end":{"line":179,"column":204,"offset":8275},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":8072},"end":{"line":179,"column":204,"offset":8275},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" if (typeof Object.create !== \"function\") {\n    Object.create = function (proto, propertiesObject) {\n        if (typeof proto !== 'object' && typeof proto !== 'function') {\n            throw new TypeError('Object prototype may only be an Object: ' + proto);\n        } else if (proto === null) {\n            throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\");\n        }\n\n        if (typeof propertiesObject != 'undefined') {\n            throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n        }\n\n        function F() {}\n        F.prototype = proto;\n\n        return new F();\n    };\n}","position":{"start":{"line":181,"column":1,"offset":8277},"end":{"line":198,"column":6,"offset":9061},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":200,"column":4,"offset":9066},"end":{"line":200,"column":12,"offset":9074},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":9063},"end":{"line":200,"column":12,"offset":9074},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Classical inheritance with ","position":{"start":{"line":202,"column":5,"offset":9080},"end":{"line":202,"column":32,"offset":9107},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":202,"column":32,"offset":9107},"end":{"line":202,"column":49,"offset":9124},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":9076},"end":{"line":202,"column":49,"offset":9124},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below is an example of how to use ","position":{"start":{"line":204,"column":1,"offset":9126},"end":{"line":204,"column":35,"offset":9160},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":204,"column":35,"offset":9160},"end":{"line":204,"column":52,"offset":9177},"indent":[]}},{"type":"text","value":" to achieve classical inheritance. This is for a single inheritance, which is all that JavaScript supports.","position":{"start":{"line":204,"column":52,"offset":9177},"end":{"line":204,"column":159,"offset":9284},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":9126},"end":{"line":204,"column":159,"offset":9284},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Shape - superclass\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\n// superclass method\nShape.prototype.move = function(x, y) {\n  this.x += x;\n  this.y += y;\n  console.info('Shape moved.');\n};\n\n// Rectangle - subclass\nfunction Rectangle() {\n  Shape.call(this); // call super constructor.\n}\n\n// subclass extends superclass\nRectangle.prototype = Object.create(Shape.prototype);\n\n//If you don't set Rectangle.prototype.constructor to Rectangle,\n//it will take the prototype.constructor of Shape (parent).\n//To avoid that, we set the prototype.constructor to Rectangle (child).\nRectangle.prototype.constructor = Rectangle;\n\nvar rect = new Rectangle();\n\nconsole.log('Is rect an instance of Rectangle?', rect instanceof Rectangle); // true\nconsole.log('Is rect an instance of Shape?', rect instanceof Shape); // true\nrect.move(1, 1); // Outputs, 'Shape moved.'","position":{"start":{"line":206,"column":1,"offset":9286},"end":{"line":236,"column":48,"offset":10245},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you wish to inherit from multiple objects, then mixins are a possibility.","position":{"start":{"line":238,"column":1,"offset":10247},"end":{"line":238,"column":77,"offset":10323},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":10247},"end":{"line":238,"column":77,"offset":10323},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function MyClass() {\n  SuperClass.call(this);\n  OtherSuperClass.call(this);\n}\n\n// inherit one class\nMyClass.prototype = Object.create(SuperClass.prototype);\n// mixin another\nObject.assign(MyClass.prototype, OtherSuperClass.prototype);\n// re-assign constructor\nMyClass.prototype.constructor = MyClass;\n\nMyClass.prototype.myMethod = function() {\n  // do something\n};","position":{"start":{"line":240,"column":1,"offset":10325},"end":{"line":254,"column":7,"offset":10741},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"assign","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":256,"column":2,"offset":10744},"end":{"line":256,"column":19,"offset":10761},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":10743},"end":{"line":256,"column":28,"offset":10770},"indent":[]}},{"type":"text","value":" copies properties from the OtherSuperClass prototype to the MyClass prototype, making them available to all instances of MyClass. ","position":{"start":{"line":256,"column":28,"offset":10770},"end":{"line":256,"column":159,"offset":10901},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":256,"column":159,"offset":10901},"end":{"line":256,"column":176,"offset":10918},"indent":[]}},{"type":"text","value":" was introduced with ES2015 and ","position":{"start":{"line":256,"column":176,"offset":10918},"end":{"line":256,"column":208,"offset":10950},"indent":[]}},{"type":"link","title":null,"url":"assign#polyfill","children":[{"type":"text","value":"can be polyfilled","position":{"start":{"line":256,"column":209,"offset":10951},"end":{"line":256,"column":226,"offset":10968},"indent":[]}}],"position":{"start":{"line":256,"column":208,"offset":10950},"end":{"line":256,"column":244,"offset":10986},"indent":[]}},{"type":"text","value":". If support for older browsers is necessary, ","position":{"start":{"line":256,"column":244,"offset":10986},"end":{"line":256,"column":290,"offset":11032},"indent":[]}},{"type":"inlineCode","value":"jQuery.extend()","position":{"start":{"line":256,"column":290,"offset":11032},"end":{"line":256,"column":307,"offset":11049},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":256,"column":307,"offset":11049},"end":{"line":256,"column":311,"offset":11053},"indent":[]}},{"type":"inlineCode","value":"_.assign()","position":{"start":{"line":256,"column":311,"offset":11053},"end":{"line":256,"column":323,"offset":11065},"indent":[]}},{"type":"text","value":" can be used.","position":{"start":{"line":256,"column":323,"offset":11065},"end":{"line":256,"column":336,"offset":11078},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":10743},"end":{"line":256,"column":336,"offset":11078},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using propertiesObject argument with Object.create()","position":{"start":{"line":258,"column":5,"offset":11084},"end":{"line":258,"column":57,"offset":11136},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":11080},"end":{"line":258,"column":57,"offset":11136},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o;\n\n// create an object with null as prototype\no = Object.create(null);\n\no = {};\n// is equivalent to:\no = Object.create(Object.prototype);\n\n// Example where we create an object with a couple of\n// sample properties. (Note that the second parameter\n// maps keys to *property descriptors*.)\no = Object.create(Object.prototype, {\n  // foo is a regular 'value property'\n  foo: {\n    writable: true,\n    configurable: true,\n    value: 'hello'\n  },\n  // bar is a getter-and-setter (accessor) property\n  bar: {\n    configurable: false,\n    get: function() { return 10; },\n    set: function(value) {\n      console.log('Setting `o.bar` to', value);\n    }\n/* with ES2015 Accessors our code can look like this\n    get() { return 10; },\n    set(value) {\n      console.log('Setting `o.bar` to', value);\n    } */\n  }\n});\n\nfunction Constructor() {}\no = new Constructor();\n// is equivalent to:\no = Object.create(Constructor.prototype);\n// Of course, if there is actual initialization code\n// in the Constructor function,\n// the Object.create() cannot reflect it\n\n// Create a new object whose prototype is a new, empty\n// object and add a single property 'p', with value 42.\no = Object.create({}, { p: { value: 42 } });\n\n// by default properties ARE NOT writable,\n// enumerable or configurable:\no.p = 24;\no.p;\n// 42\n\no.q = 12;\nfor (var prop in o) {\n  console.log(prop);\n}\n// 'q'\n\ndelete o.p;\n// false\n\n// to specify an ES3 property\no2 = Object.create({}, {\n  p: {\n    value: 42,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  }\n});\n/* is not equivalent to:\nThis will create an object with prototype : {p: 42 }\no2 = Object.create({p: 42}) */","position":{"start":{"line":260,"column":1,"offset":11138},"end":{"line":332,"column":35,"offset":13041},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":333,"column":1,"offset":13042}}}}