{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-6c69bf5253852f14235d9fbef80208b2--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Array.prototype.every()","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":26,"offset":27},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":26,"offset":27},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1,"offset":29},"end":{"line":5,"column":5,"offset":33},"indent":[]}},{"type":"inlineCode","value":"every()","position":{"start":{"line":5,"column":5,"offset":33},"end":{"line":5,"column":14,"offset":42},"indent":[]}},{"type":"text","value":" method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.","position":{"start":{"line":5,"column":14,"offset":42},"end":{"line":5,"column":141,"offset":169},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":29},"end":{"line":5,"column":141,"offset":169},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":7,"column":4,"offset":174},"end":{"line":7,"column":10,"offset":180},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":171},"end":{"line":7,"column":10,"offset":180},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Arrow function\nevery((element) => { ... } )\nevery((element, index) => { ... } )\nevery((element, index, array) => { ... } )\n\n// Callback function\nevery(callbackFn)\nevery(callbackFn, thisArg)\n\n// Inline callback function\nevery(function callbackFn(element) { ... })\nevery(function callbackFn(element, index) { ... })\nevery(function callbackFn(element, index, array){ ... })\nevery(function callbackFn(element, index, array) { ... }, thisArg)","position":{"start":{"line":9,"column":1,"offset":182},"end":{"line":22,"column":71,"offset":670},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":24,"column":5,"offset":676},"end":{"line":24,"column":15,"offset":686},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":672},"end":{"line":24,"column":15,"offset":686},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":26,"column":1,"offset":688},"end":{"line":26,"column":13,"offset":700},"indent":[]}},{"type":"text","value":"\nA function to test for each element, taking three arguments:","position":{"start":{"line":26,"column":13,"offset":700},"end":{"line":27,"column":61,"offset":761},"indent":[1]}}],"position":{"start":{"line":26,"column":1,"offset":688},"end":{"line":27,"column":61,"offset":761},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"element","position":{"start":{"line":29,"column":1,"offset":763},"end":{"line":29,"column":10,"offset":772},"indent":[]}},{"type":"text","value":"\nThe current element being processed in the array.","position":{"start":{"line":29,"column":10,"offset":772},"end":{"line":30,"column":50,"offset":822},"indent":[1]}}],"position":{"start":{"line":29,"column":1,"offset":763},"end":{"line":30,"column":50,"offset":822},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"index","position":{"start":{"line":32,"column":1,"offset":824},"end":{"line":32,"column":8,"offset":831},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":32,"column":8,"offset":831},"end":{"line":32,"column":9,"offset":832},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":32,"column":9,"offset":832},"end":{"line":32,"column":45,"offset":868},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":32,"column":45,"offset":868},"end":{"line":32,"column":53,"offset":876},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":32,"column":53,"offset":876},"end":{"line":32,"column":60,"offset":883},"indent":[]}},{"type":"text","value":"\nThe index of the current element being processed in the array.","position":{"start":{"line":32,"column":60,"offset":883},"end":{"line":33,"column":63,"offset":946},"indent":[1]}}],"position":{"start":{"line":32,"column":1,"offset":824},"end":{"line":33,"column":63,"offset":946},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"array","position":{"start":{"line":35,"column":1,"offset":948},"end":{"line":35,"column":8,"offset":955},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":35,"column":8,"offset":955},"end":{"line":35,"column":9,"offset":956},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":35,"column":9,"offset":956},"end":{"line":35,"column":45,"offset":992},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":35,"column":45,"offset":992},"end":{"line":35,"column":53,"offset":1000},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":35,"column":53,"offset":1000},"end":{"line":35,"column":60,"offset":1007},"indent":[]}},{"type":"text","value":"\nThe array ","position":{"start":{"line":35,"column":60,"offset":1007},"end":{"line":36,"column":11,"offset":1018},"indent":[1]}},{"type":"inlineCode","value":"every","position":{"start":{"line":36,"column":11,"offset":1018},"end":{"line":36,"column":18,"offset":1025},"indent":[]}},{"type":"text","value":" was called upon.","position":{"start":{"line":36,"column":18,"offset":1025},"end":{"line":36,"column":35,"offset":1042},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":948},"end":{"line":36,"column":35,"offset":1042},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"thisArg","position":{"start":{"line":38,"column":1,"offset":1044},"end":{"line":38,"column":10,"offset":1053},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":38,"column":10,"offset":1053},"end":{"line":38,"column":11,"offset":1054},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":38,"column":11,"offset":1054},"end":{"line":38,"column":47,"offset":1090},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":38,"column":47,"offset":1090},"end":{"line":38,"column":55,"offset":1098},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":38,"column":55,"offset":1098},"end":{"line":38,"column":62,"offset":1105},"indent":[]}},{"type":"text","value":"\nA value to use as ","position":{"start":{"line":38,"column":62,"offset":1105},"end":{"line":39,"column":19,"offset":1124},"indent":[1]}},{"type":"inlineCode","value":"this","position":{"start":{"line":39,"column":19,"offset":1124},"end":{"line":39,"column":25,"offset":1130},"indent":[]}},{"type":"text","value":" when executing ","position":{"start":{"line":39,"column":25,"offset":1130},"end":{"line":39,"column":41,"offset":1146},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":39,"column":41,"offset":1146},"end":{"line":39,"column":53,"offset":1158},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":39,"column":53,"offset":1158},"end":{"line":39,"column":54,"offset":1159},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1044},"end":{"line":39,"column":54,"offset":1159},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":41,"column":5,"offset":1165},"end":{"line":41,"column":17,"offset":1177},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1161},"end":{"line":41,"column":17,"offset":1177},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"true","position":{"start":{"line":43,"column":1,"offset":1179},"end":{"line":43,"column":7,"offset":1185},"indent":[]}},{"type":"text","value":" if the ","position":{"start":{"line":43,"column":7,"offset":1185},"end":{"line":43,"column":15,"offset":1193},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":43,"column":15,"offset":1193},"end":{"line":43,"column":27,"offset":1205},"indent":[]}},{"type":"text","value":" function returns a ","position":{"start":{"line":43,"column":27,"offset":1205},"end":{"line":43,"column":47,"offset":1225},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Truthy","children":[{"type":"text","value":"truthy","position":{"start":{"line":43,"column":48,"offset":1226},"end":{"line":43,"column":54,"offset":1232},"indent":[]}}],"position":{"start":{"line":43,"column":47,"offset":1225},"end":{"line":43,"column":113,"offset":1291},"indent":[]}},{"type":"text","value":" value for every array element. Otherwise, ","position":{"start":{"line":43,"column":113,"offset":1291},"end":{"line":43,"column":156,"offset":1334},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":43,"column":156,"offset":1334},"end":{"line":43,"column":163,"offset":1341},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":43,"column":163,"offset":1341},"end":{"line":43,"column":164,"offset":1342},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1179},"end":{"line":43,"column":164,"offset":1342},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":45,"column":4,"offset":1347},"end":{"line":45,"column":15,"offset":1358},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1344},"end":{"line":45,"column":15,"offset":1358},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":47,"column":1,"offset":1360},"end":{"line":47,"column":5,"offset":1364},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":47,"column":5,"offset":1364},"end":{"line":47,"column":12,"offset":1371},"indent":[]}},{"type":"text","value":" method executes the provided ","position":{"start":{"line":47,"column":12,"offset":1371},"end":{"line":47,"column":42,"offset":1401},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":47,"column":42,"offset":1401},"end":{"line":47,"column":54,"offset":1413},"indent":[]}},{"type":"text","value":" function once for each element present in the array until it finds the one where ","position":{"start":{"line":47,"column":54,"offset":1413},"end":{"line":47,"column":136,"offset":1495},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":47,"column":136,"offset":1495},"end":{"line":47,"column":148,"offset":1507},"indent":[]}},{"type":"text","value":" returns a ","position":{"start":{"line":47,"column":148,"offset":1507},"end":{"line":47,"column":159,"offset":1518},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Falsy","children":[{"type":"text","value":"falsy","position":{"start":{"line":47,"column":160,"offset":1519},"end":{"line":47,"column":165,"offset":1524},"indent":[]}}],"position":{"start":{"line":47,"column":159,"offset":1518},"end":{"line":47,"column":223,"offset":1582},"indent":[]}},{"type":"text","value":" value. If such an element is found, the ","position":{"start":{"line":47,"column":223,"offset":1582},"end":{"line":47,"column":264,"offset":1623},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":47,"column":264,"offset":1623},"end":{"line":47,"column":271,"offset":1630},"indent":[]}},{"type":"text","value":" method immediately returns ","position":{"start":{"line":47,"column":271,"offset":1630},"end":{"line":47,"column":299,"offset":1658},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":47,"column":299,"offset":1658},"end":{"line":47,"column":306,"offset":1665},"indent":[]}},{"type":"text","value":". Otherwise, if ","position":{"start":{"line":47,"column":306,"offset":1665},"end":{"line":47,"column":322,"offset":1681},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":47,"column":322,"offset":1681},"end":{"line":47,"column":334,"offset":1693},"indent":[]}},{"type":"text","value":" returns a ","position":{"start":{"line":47,"column":334,"offset":1693},"end":{"line":47,"column":345,"offset":1704},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Truthy","children":[{"type":"text","value":"truthy","position":{"start":{"line":47,"column":346,"offset":1705},"end":{"line":47,"column":352,"offset":1711},"indent":[]}}],"position":{"start":{"line":47,"column":345,"offset":1704},"end":{"line":47,"column":411,"offset":1770},"indent":[]}},{"type":"text","value":" value for all elements, ","position":{"start":{"line":47,"column":411,"offset":1770},"end":{"line":47,"column":436,"offset":1795},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":47,"column":436,"offset":1795},"end":{"line":47,"column":443,"offset":1802},"indent":[]}},{"type":"text","value":" returns ","position":{"start":{"line":47,"column":443,"offset":1802},"end":{"line":47,"column":452,"offset":1811},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":47,"column":452,"offset":1811},"end":{"line":47,"column":458,"offset":1817},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":458,"offset":1817},"end":{"line":47,"column":459,"offset":1818},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1360},"end":{"line":47,"column":459,"offset":1818},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":49,"column":3,"offset":1822},"end":{"line":49,"column":8,"offset":1827},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1820},"end":{"line":49,"column":10,"offset":1829},"indent":[]}},{"type":"text","value":" Calling this method on an empty array will return ","position":{"start":{"line":49,"column":10,"offset":1829},"end":{"line":49,"column":61,"offset":1880},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":49,"column":61,"offset":1880},"end":{"line":49,"column":67,"offset":1886},"indent":[]}},{"type":"text","value":" for any condition!","position":{"start":{"line":49,"column":67,"offset":1886},"end":{"line":49,"column":86,"offset":1905},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1820},"end":{"line":49,"column":86,"offset":1905},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":51,"column":1,"offset":1907},"end":{"line":51,"column":13,"offset":1919},"indent":[]}},{"type":"text","value":" is invoked only for array indexes which have assigned values. It is not invoked for indexes which have been deleted, or which have never been assigned values.","position":{"start":{"line":51,"column":13,"offset":1919},"end":{"line":51,"column":172,"offset":2078},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1907},"end":{"line":51,"column":172,"offset":2078},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":53,"column":1,"offset":2080},"end":{"line":53,"column":13,"offset":2092},"indent":[]}},{"type":"text","value":" is invoked with three arguments: the value of the element, the index of the element, and the Array object being traversed.","position":{"start":{"line":53,"column":13,"offset":2092},"end":{"line":53,"column":136,"offset":2215},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2080},"end":{"line":53,"column":136,"offset":2215},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If a ","position":{"start":{"line":55,"column":1,"offset":2217},"end":{"line":55,"column":6,"offset":2222},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":55,"column":6,"offset":2222},"end":{"line":55,"column":15,"offset":2231},"indent":[]}},{"type":"text","value":" parameter is provided to ","position":{"start":{"line":55,"column":15,"offset":2231},"end":{"line":55,"column":41,"offset":2257},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":55,"column":41,"offset":2257},"end":{"line":55,"column":48,"offset":2264},"indent":[]}},{"type":"text","value":", it will be used as callback's ","position":{"start":{"line":55,"column":48,"offset":2264},"end":{"line":55,"column":80,"offset":2296},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":80,"offset":2296},"end":{"line":55,"column":86,"offset":2302},"indent":[]}},{"type":"text","value":" value. Otherwise, the value ","position":{"start":{"line":55,"column":86,"offset":2302},"end":{"line":55,"column":115,"offset":2331},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":55,"column":115,"offset":2331},"end":{"line":55,"column":126,"offset":2342},"indent":[]}},{"type":"text","value":" will be used as its ","position":{"start":{"line":55,"column":126,"offset":2342},"end":{"line":55,"column":147,"offset":2363},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":147,"offset":2363},"end":{"line":55,"column":153,"offset":2369},"indent":[]}},{"type":"text","value":" value. The ","position":{"start":{"line":55,"column":153,"offset":2369},"end":{"line":55,"column":165,"offset":2381},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":165,"offset":2381},"end":{"line":55,"column":171,"offset":2387},"indent":[]}},{"type":"text","value":" value ultimately observable by ","position":{"start":{"line":55,"column":171,"offset":2387},"end":{"line":55,"column":203,"offset":2419},"indent":[]}},{"type":"inlineCode","value":"callback","position":{"start":{"line":55,"column":203,"offset":2419},"end":{"line":55,"column":213,"offset":2429},"indent":[]}},{"type":"text","value":" is determined according to ","position":{"start":{"line":55,"column":213,"offset":2429},"end":{"line":55,"column":241,"offset":2457},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"text","value":"the usual rules for determining the ","position":{"start":{"line":55,"column":242,"offset":2458},"end":{"line":55,"column":278,"offset":2494},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":278,"offset":2494},"end":{"line":55,"column":284,"offset":2500},"indent":[]}},{"type":"text","value":" seen by a function","position":{"start":{"line":55,"column":284,"offset":2500},"end":{"line":55,"column":303,"offset":2519},"indent":[]}}],"position":{"start":{"line":55,"column":241,"offset":2457},"end":{"line":55,"column":326,"offset":2542},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":55,"column":326,"offset":2542},"end":{"line":55,"column":327,"offset":2543},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2217},"end":{"line":55,"column":327,"offset":2543},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"every","position":{"start":{"line":57,"column":1,"offset":2545},"end":{"line":57,"column":8,"offset":2552},"indent":[]}},{"type":"text","value":" does not mutate the array on which it is called.","position":{"start":{"line":57,"column":8,"offset":2552},"end":{"line":57,"column":57,"offset":2601},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2545},"end":{"line":57,"column":57,"offset":2601},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The range of elements processed by ","position":{"start":{"line":59,"column":1,"offset":2603},"end":{"line":59,"column":36,"offset":2638},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":59,"column":36,"offset":2638},"end":{"line":59,"column":43,"offset":2645},"indent":[]}},{"type":"text","value":" is set before the first invocation of ","position":{"start":{"line":59,"column":43,"offset":2645},"end":{"line":59,"column":82,"offset":2684},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":59,"column":82,"offset":2684},"end":{"line":59,"column":94,"offset":2696},"indent":[]}},{"type":"text","value":". Therefore, ","position":{"start":{"line":59,"column":94,"offset":2696},"end":{"line":59,"column":107,"offset":2709},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":59,"column":107,"offset":2709},"end":{"line":59,"column":119,"offset":2721},"indent":[]}},{"type":"text","value":" will not run on elements that are appended to the array after the call to ","position":{"start":{"line":59,"column":119,"offset":2721},"end":{"line":59,"column":194,"offset":2796},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":59,"column":194,"offset":2796},"end":{"line":59,"column":201,"offset":2803},"indent":[]}},{"type":"text","value":" begins. If existing elements of the array are changed, their value as passed to ","position":{"start":{"line":59,"column":201,"offset":2803},"end":{"line":59,"column":282,"offset":2884},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":59,"column":282,"offset":2884},"end":{"line":59,"column":294,"offset":2896},"indent":[]}},{"type":"text","value":" will be the value at the time ","position":{"start":{"line":59,"column":294,"offset":2896},"end":{"line":59,"column":325,"offset":2927},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":59,"column":325,"offset":2927},"end":{"line":59,"column":332,"offset":2934},"indent":[]}},{"type":"text","value":" visits them. Elements that are deleted are not visited.","position":{"start":{"line":59,"column":332,"offset":2934},"end":{"line":59,"column":388,"offset":2990},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2603},"end":{"line":59,"column":388,"offset":2990},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"every","position":{"start":{"line":61,"column":1,"offset":2992},"end":{"line":61,"column":8,"offset":2999},"indent":[]}},{"type":"text","value":" acts like the \"for all\" quantifier in mathematics. In particular, for an empty array, it returns ","position":{"start":{"line":61,"column":8,"offset":2999},"end":{"line":61,"column":106,"offset":3097},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":61,"column":106,"offset":3097},"end":{"line":61,"column":112,"offset":3103},"indent":[]}},{"type":"text","value":". (It is ","position":{"start":{"line":61,"column":112,"offset":3103},"end":{"line":61,"column":121,"offset":3112},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Vacuous_truth","children":[{"type":"text","value":"vacuously true","position":{"start":{"line":61,"column":122,"offset":3113},"end":{"line":61,"column":136,"offset":3127},"indent":[]}}],"position":{"start":{"line":61,"column":121,"offset":3112},"end":{"line":61,"column":182,"offset":3173},"indent":[]}},{"type":"text","value":" that all elements of the ","position":{"start":{"line":61,"column":182,"offset":3173},"end":{"line":61,"column":208,"offset":3199},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Empty_set#Properties","children":[{"type":"text","value":"empty set","position":{"start":{"line":61,"column":209,"offset":3200},"end":{"line":61,"column":218,"offset":3209},"indent":[]}}],"position":{"start":{"line":61,"column":208,"offset":3199},"end":{"line":61,"column":271,"offset":3262},"indent":[]}},{"type":"text","value":" satisfy any given condition.)","position":{"start":{"line":61,"column":271,"offset":3262},"end":{"line":61,"column":301,"offset":3292},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2992},"end":{"line":61,"column":301,"offset":3292},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":63,"column":4,"offset":3297},"end":{"line":63,"column":12,"offset":3305},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3294},"end":{"line":63,"column":12,"offset":3305},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"every","position":{"start":{"line":65,"column":1,"offset":3307},"end":{"line":65,"column":8,"offset":3314},"indent":[]}},{"type":"text","value":" was added to the ECMA-262 standard in the 5","position":{"start":{"line":65,"column":8,"offset":3314},"end":{"line":65,"column":52,"offset":3358},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":65,"column":52,"offset":3358},"end":{"line":65,"column":57,"offset":3363},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":65,"column":57,"offset":3363},"end":{"line":65,"column":59,"offset":3365},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":65,"column":59,"offset":3365},"end":{"line":65,"column":65,"offset":3371},"indent":[]}},{"type":"text","value":" edition, and it may not be present in other implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of ","position":{"start":{"line":65,"column":65,"offset":3371},"end":{"line":65,"column":250,"offset":3556},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":65,"column":250,"offset":3556},"end":{"line":65,"column":257,"offset":3563},"indent":[]}},{"type":"text","value":" in implementations which do not natively support it.","position":{"start":{"line":65,"column":257,"offset":3563},"end":{"line":65,"column":310,"offset":3616},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":3307},"end":{"line":65,"column":310,"offset":3616},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This algorithm is exactly the one specified in ECMA-262, 5","position":{"start":{"line":67,"column":1,"offset":3618},"end":{"line":67,"column":59,"offset":3676},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":67,"column":59,"offset":3676},"end":{"line":67,"column":64,"offset":3681},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":67,"column":64,"offset":3681},"end":{"line":67,"column":66,"offset":3683},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":67,"column":66,"offset":3683},"end":{"line":67,"column":72,"offset":3689},"indent":[]}},{"type":"text","value":" edition, assuming ","position":{"start":{"line":67,"column":72,"offset":3689},"end":{"line":67,"column":91,"offset":3708},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":67,"column":91,"offset":3708},"end":{"line":67,"column":99,"offset":3716},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":67,"column":99,"offset":3716},"end":{"line":67,"column":104,"offset":3721},"indent":[]}},{"type":"inlineCode","value":"TypeError","position":{"start":{"line":67,"column":104,"offset":3721},"end":{"line":67,"column":115,"offset":3732},"indent":[]}},{"type":"text","value":" have their original values, and that ","position":{"start":{"line":67,"column":115,"offset":3732},"end":{"line":67,"column":153,"offset":3770},"indent":[]}},{"type":"inlineCode","value":"callbackfn.call","position":{"start":{"line":67,"column":153,"offset":3770},"end":{"line":67,"column":170,"offset":3787},"indent":[]}},{"type":"text","value":" evaluates to the original value of ","position":{"start":{"line":67,"column":170,"offset":3787},"end":{"line":67,"column":206,"offset":3823},"indent":[]}},{"type":"link","title":null,"url":"../function/call","children":[{"type":"inlineCode","value":"Function.prototype.call","position":{"start":{"line":67,"column":207,"offset":3824},"end":{"line":67,"column":232,"offset":3849},"indent":[]}}],"position":{"start":{"line":67,"column":206,"offset":3823},"end":{"line":67,"column":251,"offset":3868},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":67,"column":251,"offset":3868},"end":{"line":67,"column":252,"offset":3869},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3618},"end":{"line":67,"column":252,"offset":3869},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"if (!Array.prototype.every) {\n  Array.prototype.every = function(callbackfn, thisArg) {\n    'use strict';\n    var T, k;\n\n    if (this == null) {\n      throw new TypeError('this is null or not defined');\n    }\n\n    // 1. Let O be the result of calling ToObject passing the this\n    //    value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get internal method\n    //    of O with the argument \"length\".\n    // 3. Let len be ToUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If IsCallable(callbackfn) is false, throw a TypeError exception.\n    if (typeof callbackfn !== 'function' && Object.prototype.toString.call(callbackfn) !== '[object Function]') {\n      throw new TypeError();\n    }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n    if (arguments.length > 1) {\n      T = thisArg;\n    }\n\n    // 6. Let k be 0.\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //   This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty internal\n      //    method of O with argument Pk.\n      //   This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n        var testResult;\n        // i. Let kValue be the result of calling the Get internal method\n        //    of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Let testResult be the result of calling the Call internal method\n        // of callbackfn with T as the this value if T is not undefined\n        // else is the result of calling callbackfn\n        // and argument list containing kValue, k, and O.\n        if(T) testResult = callbackfn.call(T, kValue, k, O);\n        else testResult = callbackfn(kValue,k,O)\n\n        // iii. If ToBoolean(testResult) is false, return false.\n        if (!testResult) {\n          return false;\n        }\n      }\n      k++;\n    }\n    return true;\n  };\n}","position":{"start":{"line":69,"column":1,"offset":3871},"end":{"line":133,"column":6,"offset":6104},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":135,"column":4,"offset":6109},"end":{"line":135,"column":12,"offset":6117},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":6106},"end":{"line":135,"column":12,"offset":6117},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Testing size of all array elements","position":{"start":{"line":137,"column":5,"offset":6123},"end":{"line":137,"column":39,"offset":6157},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":6119},"end":{"line":137,"column":39,"offset":6157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example tests whether all elements in the array are bigger than 10.","position":{"start":{"line":139,"column":1,"offset":6159},"end":{"line":139,"column":82,"offset":6240},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":6159},"end":{"line":139,"column":82,"offset":6240},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function isBigEnough(element, index, array) {\n  return element >= 10;\n}\n[12, 5, 8, 130, 44].every(isBigEnough);   // false\n[12, 54, 18, 130, 44].every(isBigEnough); // true","position":{"start":{"line":141,"column":1,"offset":6242},"end":{"line":145,"column":54,"offset":6434},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using arrow functions","position":{"start":{"line":147,"column":5,"offset":6440},"end":{"line":147,"column":26,"offset":6461},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":6436},"end":{"line":147,"column":26,"offset":6461},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"../../functions/arrow_functions","children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":149,"column":2,"offset":6464},"end":{"line":149,"column":17,"offset":6479},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":6463},"end":{"line":149,"column":51,"offset":6513},"indent":[]}},{"type":"text","value":" provide a shorter syntax for the same test.","position":{"start":{"line":149,"column":51,"offset":6513},"end":{"line":149,"column":95,"offset":6557},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":6463},"end":{"line":149,"column":95,"offset":6557},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[12, 5, 8, 130, 44].every(x => x >= 10);   // false\n[12, 54, 18, 130, 44].every(x => x >= 10); // true","position":{"start":{"line":151,"column":1,"offset":6559},"end":{"line":152,"column":55,"offset":6669},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Affecting Initial Array (modifying, appending, and deleting)","position":{"start":{"line":154,"column":5,"offset":6675},"end":{"line":154,"column":65,"offset":6735},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":6671},"end":{"line":154,"column":65,"offset":6735},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following examples tests the behavior of the ","position":{"start":{"line":156,"column":1,"offset":6737},"end":{"line":156,"column":50,"offset":6786},"indent":[]}},{"type":"inlineCode","value":"every","position":{"start":{"line":156,"column":50,"offset":6786},"end":{"line":156,"column":57,"offset":6793},"indent":[]}},{"type":"text","value":" method when the array is modified.","position":{"start":{"line":156,"column":57,"offset":6793},"end":{"line":156,"column":92,"offset":6828},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":6737},"end":{"line":156,"column":92,"offset":6828},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// ---------------\n// Modifying items\n// ---------------\nlet arr = [1, 2, 3, 4];\narr.every( (elem, index, arr) => {\n  arr[index+1] -= 1\n  console.log(`[${arr}][${index}] -> ${elem}`)\n  return elem < 2\n})\n\n// Loop runs for 3 iterations, but would\n// have run 2 iterations without any modification\n//\n// 1st iteration: [1,1,3,4][0] -> 1\n// 2nd iteration: [1,1,2,4][1] -> 1\n// 3rd iteration: [1,1,2,3][2] -> 2\n\n// ---------------\n// Appending items\n// ---------------\narr = [1, 2, 3];\narr.every( (elem, index, arr) => {\n  arr.push('new')\n  console.log(`[${arr}][${index}] -> ${elem}`)\n  return elem < 4\n})\n\n// Loop runs for 3 iterations, even after appending new items\n//\n// 1st iteration: [1, 2, 3, new][0] -> 1\n// 2nd iteration: [1, 2, 3, new, new][1] -> 2\n// 3rd iteration: [1, 2, 3, new, new, new][2] -> 3\n\n// ---------------\n// Deleting items\n// ---------------\narr = [1, 2, 3, 4];\narr.every( (elem, index, arr) => {\n  arr.pop()\n  console.log(`[${arr}][${index}] -> ${elem}`)\n  return elem < 4\n})\n\n// Loop runs for 2 iterations only, as the remaining\n// items are `pop()`ed off\n//\n// 1st iteration: [1,2,3][0] -> 1\n// 2nd iteration: [1,2][1] -> 2","position":{"start":{"line":158,"column":1,"offset":6830},"end":{"line":205,"column":36,"offset":8150},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":206,"column":1,"offset":8151}}}}