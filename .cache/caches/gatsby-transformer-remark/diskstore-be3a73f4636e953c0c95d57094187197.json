{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-9e4d4cfc55409987aa64a53697227c4d--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Array.prototype.filter()","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":27,"offset":28},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":27,"offset":28},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1,"offset":30},"end":{"line":5,"column":5,"offset":34},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":5,"column":5,"offset":34},"end":{"line":5,"column":15,"offset":44},"indent":[]}},{"type":"text","value":" method ","position":{"start":{"line":5,"column":15,"offset":44},"end":{"line":5,"column":23,"offset":52},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"creates a new array","position":{"start":{"line":5,"column":25,"offset":54},"end":{"line":5,"column":44,"offset":73},"indent":[]}}],"position":{"start":{"line":5,"column":23,"offset":52},"end":{"line":5,"column":46,"offset":75},"indent":[]}},{"type":"text","value":" with all elements that pass the test implemented by the provided function.","position":{"start":{"line":5,"column":46,"offset":75},"end":{"line":5,"column":121,"offset":150},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":30},"end":{"line":5,"column":121,"offset":150},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":7,"column":4,"offset":155},"end":{"line":7,"column":10,"offset":161},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":152},"end":{"line":7,"column":10,"offset":161},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Arrow function\nfilter((element) => { ... } )\nfilter((element, index) => { ... } )\nfilter((element, index, array) => { ... } )\n\n// Callback function\nfilter(callbackFn)\nfilter(callbackFn, thisArg)\n\n// Inline callback function\nfilter(function callbackFn(element) { ... })\nfilter(function callbackFn(element, index) { ... })\nfilter(function callbackFn(element, index, array){ ... })\nfilter(function callbackFn(element, index, array) { ... }, thisArg)","position":{"start":{"line":9,"column":1,"offset":163},"end":{"line":22,"column":72,"offset":660},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":24,"column":5,"offset":666},"end":{"line":24,"column":15,"offset":676},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":662},"end":{"line":24,"column":15,"offset":676},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":26,"column":1,"offset":678},"end":{"line":26,"column":13,"offset":690},"indent":[]}},{"type":"text","value":"\nFunction is a predicate, to test each element of the array. Return a value that coerces to ","position":{"start":{"line":26,"column":13,"offset":690},"end":{"line":27,"column":92,"offset":782},"indent":[1]}},{"type":"inlineCode","value":"true","position":{"start":{"line":27,"column":92,"offset":782},"end":{"line":27,"column":98,"offset":788},"indent":[]}},{"type":"text","value":" to keep the element, or to ","position":{"start":{"line":27,"column":98,"offset":788},"end":{"line":27,"column":126,"offset":816},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":27,"column":126,"offset":816},"end":{"line":27,"column":133,"offset":823},"indent":[]}},{"type":"text","value":" otherwise.","position":{"start":{"line":27,"column":133,"offset":823},"end":{"line":27,"column":144,"offset":834},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":678},"end":{"line":27,"column":144,"offset":834},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It accepts three arguments:","position":{"start":{"line":29,"column":1,"offset":836},"end":{"line":29,"column":28,"offset":863},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":836},"end":{"line":29,"column":28,"offset":863},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"element","position":{"start":{"line":31,"column":1,"offset":865},"end":{"line":31,"column":10,"offset":874},"indent":[]}},{"type":"text","value":"\nThe current element being processed in the array.","position":{"start":{"line":31,"column":10,"offset":874},"end":{"line":32,"column":50,"offset":924},"indent":[1]}}],"position":{"start":{"line":31,"column":1,"offset":865},"end":{"line":32,"column":50,"offset":924},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"index","position":{"start":{"line":34,"column":1,"offset":926},"end":{"line":34,"column":8,"offset":933},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":34,"column":8,"offset":933},"end":{"line":34,"column":44,"offset":969},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":34,"column":44,"offset":969},"end":{"line":34,"column":52,"offset":977},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":34,"column":52,"offset":977},"end":{"line":34,"column":59,"offset":984},"indent":[]}},{"type":"text","value":"\nThe index of the current element being processed in the array.","position":{"start":{"line":34,"column":59,"offset":984},"end":{"line":35,"column":63,"offset":1047},"indent":[1]}}],"position":{"start":{"line":34,"column":1,"offset":926},"end":{"line":35,"column":63,"offset":1047},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"array","position":{"start":{"line":37,"column":1,"offset":1049},"end":{"line":37,"column":8,"offset":1056},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":37,"column":8,"offset":1056},"end":{"line":37,"column":44,"offset":1092},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":37,"column":44,"offset":1092},"end":{"line":37,"column":52,"offset":1100},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":37,"column":52,"offset":1100},"end":{"line":37,"column":59,"offset":1107},"indent":[]}},{"type":"text","value":"\nThe array ","position":{"start":{"line":37,"column":59,"offset":1107},"end":{"line":38,"column":11,"offset":1118},"indent":[1]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":38,"column":11,"offset":1118},"end":{"line":38,"column":19,"offset":1126},"indent":[]}},{"type":"text","value":" was called upon.","position":{"start":{"line":38,"column":19,"offset":1126},"end":{"line":38,"column":36,"offset":1143},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1049},"end":{"line":38,"column":36,"offset":1143},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"thisArg","position":{"start":{"line":40,"column":1,"offset":1145},"end":{"line":40,"column":10,"offset":1154},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":40,"column":10,"offset":1154},"end":{"line":40,"column":46,"offset":1190},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":40,"column":46,"offset":1190},"end":{"line":40,"column":54,"offset":1198},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":40,"column":54,"offset":1198},"end":{"line":40,"column":61,"offset":1205},"indent":[]}},{"type":"text","value":"\nValue to use as ","position":{"start":{"line":40,"column":61,"offset":1205},"end":{"line":41,"column":17,"offset":1222},"indent":[1]}},{"type":"inlineCode","value":"this","position":{"start":{"line":41,"column":17,"offset":1222},"end":{"line":41,"column":23,"offset":1228},"indent":[]}},{"type":"text","value":" when executing ","position":{"start":{"line":41,"column":23,"offset":1228},"end":{"line":41,"column":39,"offset":1244},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":41,"column":39,"offset":1244},"end":{"line":41,"column":51,"offset":1256},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":41,"column":51,"offset":1256},"end":{"line":41,"column":52,"offset":1257},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1145},"end":{"line":41,"column":52,"offset":1257},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":43,"column":5,"offset":1263},"end":{"line":43,"column":17,"offset":1275},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1259},"end":{"line":43,"column":17,"offset":1275},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.","position":{"start":{"line":45,"column":1,"offset":1277},"end":{"line":45,"column":113,"offset":1389},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1277},"end":{"line":45,"column":113,"offset":1389},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":47,"column":4,"offset":1394},"end":{"line":47,"column":15,"offset":1405},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1391},"end":{"line":47,"column":15,"offset":1405},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":49,"column":1,"offset":1407},"end":{"line":49,"column":11,"offset":1417},"indent":[]}},{"type":"text","value":" calls a provided ","position":{"start":{"line":49,"column":11,"offset":1417},"end":{"line":49,"column":29,"offset":1435},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":49,"column":29,"offset":1435},"end":{"line":49,"column":41,"offset":1447},"indent":[]}},{"type":"text","value":" function once for each element in an array, and constructs a new array of all the values for which ","position":{"start":{"line":49,"column":41,"offset":1447},"end":{"line":49,"column":141,"offset":1547},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":49,"column":141,"offset":1547},"end":{"line":49,"column":153,"offset":1559},"indent":[]}},{"type":"text","value":" returns ","position":{"start":{"line":49,"column":153,"offset":1559},"end":{"line":49,"column":162,"offset":1568},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Truthy","children":[{"type":"text","value":"a value that coerces to ","position":{"start":{"line":49,"column":163,"offset":1569},"end":{"line":49,"column":187,"offset":1593},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":49,"column":187,"offset":1593},"end":{"line":49,"column":193,"offset":1599},"indent":[]}}],"position":{"start":{"line":49,"column":162,"offset":1568},"end":{"line":49,"column":252,"offset":1658},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":49,"column":252,"offset":1658},"end":{"line":49,"column":254,"offset":1660},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":49,"column":254,"offset":1660},"end":{"line":49,"column":266,"offset":1672},"indent":[]}},{"type":"text","value":" is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values. Array elements which do not pass the ","position":{"start":{"line":49,"column":266,"offset":1672},"end":{"line":49,"column":469,"offset":1875},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":49,"column":469,"offset":1875},"end":{"line":49,"column":481,"offset":1887},"indent":[]}},{"type":"text","value":" test are skipped, and are not included in the new array.","position":{"start":{"line":49,"column":481,"offset":1887},"end":{"line":49,"column":538,"offset":1944},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1407},"end":{"line":49,"column":538,"offset":1944},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":51,"column":1,"offset":1946},"end":{"line":51,"column":13,"offset":1958},"indent":[]}},{"type":"text","value":" is invoked with three arguments:","position":{"start":{"line":51,"column":13,"offset":1958},"end":{"line":51,"column":46,"offset":1991},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1946},"end":{"line":51,"column":46,"offset":1991},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the value of the element","position":{"start":{"line":53,"column":5,"offset":1997},"end":{"line":53,"column":29,"offset":2021},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":1997},"end":{"line":53,"column":29,"offset":2021},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1993},"end":{"line":53,"column":29,"offset":2021},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the index of the element","position":{"start":{"line":54,"column":5,"offset":2026},"end":{"line":54,"column":29,"offset":2050},"indent":[]}}],"position":{"start":{"line":54,"column":5,"offset":2026},"end":{"line":54,"column":29,"offset":2050},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2022},"end":{"line":54,"column":29,"offset":2050},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the Array object being traversed","position":{"start":{"line":55,"column":5,"offset":2055},"end":{"line":55,"column":37,"offset":2087},"indent":[]}}],"position":{"start":{"line":55,"column":5,"offset":2055},"end":{"line":55,"column":37,"offset":2087},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2051},"end":{"line":55,"column":37,"offset":2087},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1993},"end":{"line":55,"column":37,"offset":2087},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If a ","position":{"start":{"line":57,"column":1,"offset":2089},"end":{"line":57,"column":6,"offset":2094},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":57,"column":6,"offset":2094},"end":{"line":57,"column":15,"offset":2103},"indent":[]}},{"type":"text","value":" parameter is provided to ","position":{"start":{"line":57,"column":15,"offset":2103},"end":{"line":57,"column":41,"offset":2129},"indent":[]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":57,"column":41,"offset":2129},"end":{"line":57,"column":49,"offset":2137},"indent":[]}},{"type":"text","value":", it will be used as the callback's ","position":{"start":{"line":57,"column":49,"offset":2137},"end":{"line":57,"column":85,"offset":2173},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":57,"column":85,"offset":2173},"end":{"line":57,"column":91,"offset":2179},"indent":[]}},{"type":"text","value":" value. Otherwise, the value ","position":{"start":{"line":57,"column":91,"offset":2179},"end":{"line":57,"column":120,"offset":2208},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":57,"column":120,"offset":2208},"end":{"line":57,"column":131,"offset":2219},"indent":[]}},{"type":"text","value":" will be used as its ","position":{"start":{"line":57,"column":131,"offset":2219},"end":{"line":57,"column":152,"offset":2240},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":57,"column":152,"offset":2240},"end":{"line":57,"column":158,"offset":2246},"indent":[]}},{"type":"text","value":" value. The ","position":{"start":{"line":57,"column":158,"offset":2246},"end":{"line":57,"column":170,"offset":2258},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":57,"column":170,"offset":2258},"end":{"line":57,"column":176,"offset":2264},"indent":[]}},{"type":"text","value":" value ultimately observable by ","position":{"start":{"line":57,"column":176,"offset":2264},"end":{"line":57,"column":208,"offset":2296},"indent":[]}},{"type":"inlineCode","value":"callback","position":{"start":{"line":57,"column":208,"offset":2296},"end":{"line":57,"column":218,"offset":2306},"indent":[]}},{"type":"text","value":" is determined according to ","position":{"start":{"line":57,"column":218,"offset":2306},"end":{"line":57,"column":246,"offset":2334},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"text","value":"the usual rules for determining the ","position":{"start":{"line":57,"column":247,"offset":2335},"end":{"line":57,"column":283,"offset":2371},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":57,"column":283,"offset":2371},"end":{"line":57,"column":289,"offset":2377},"indent":[]}},{"type":"text","value":" seen by a function","position":{"start":{"line":57,"column":289,"offset":2377},"end":{"line":57,"column":308,"offset":2396},"indent":[]}}],"position":{"start":{"line":57,"column":246,"offset":2334},"end":{"line":57,"column":331,"offset":2419},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":57,"column":331,"offset":2419},"end":{"line":57,"column":332,"offset":2420},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2089},"end":{"line":57,"column":332,"offset":2420},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":59,"column":1,"offset":2422},"end":{"line":59,"column":11,"offset":2432},"indent":[]}},{"type":"text","value":" does not mutate the array on which it is called.","position":{"start":{"line":59,"column":11,"offset":2432},"end":{"line":59,"column":60,"offset":2481},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2422},"end":{"line":59,"column":60,"offset":2481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The range of elements processed by ","position":{"start":{"line":61,"column":1,"offset":2483},"end":{"line":61,"column":36,"offset":2518},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":61,"column":36,"offset":2518},"end":{"line":61,"column":46,"offset":2528},"indent":[]}},{"type":"text","value":" is set before the first invocation of ","position":{"start":{"line":61,"column":46,"offset":2528},"end":{"line":61,"column":85,"offset":2567},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":61,"column":85,"offset":2567},"end":{"line":61,"column":97,"offset":2579},"indent":[]}},{"type":"text","value":". Elements which are appended to the array (from ","position":{"start":{"line":61,"column":97,"offset":2579},"end":{"line":61,"column":146,"offset":2628},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":61,"column":146,"offset":2628},"end":{"line":61,"column":158,"offset":2640},"indent":[]}},{"type":"text","value":") after the call to ","position":{"start":{"line":61,"column":158,"offset":2640},"end":{"line":61,"column":178,"offset":2660},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":61,"column":178,"offset":2660},"end":{"line":61,"column":188,"offset":2670},"indent":[]}},{"type":"text","value":" begins will not be visited by ","position":{"start":{"line":61,"column":188,"offset":2670},"end":{"line":61,"column":219,"offset":2701},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":61,"column":219,"offset":2701},"end":{"line":61,"column":231,"offset":2713},"indent":[]}},{"type":"text","value":". If existing elements of the array are deleted in the same way they will not be visited.","position":{"start":{"line":61,"column":231,"offset":2713},"end":{"line":61,"column":320,"offset":2802},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2483},"end":{"line":61,"column":320,"offset":2802},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":63,"column":4,"offset":2807},"end":{"line":63,"column":12,"offset":2815},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2804},"end":{"line":63,"column":12,"offset":2815},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":65,"column":1,"offset":2817},"end":{"line":65,"column":11,"offset":2827},"indent":[]}},{"type":"text","value":" was added to the ECMA-262 standard in the 5th edition. Therefore, it may not be present in all implementations of the standard.","position":{"start":{"line":65,"column":11,"offset":2827},"end":{"line":65,"column":139,"offset":2955},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2817},"end":{"line":65,"column":139,"offset":2955},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can work around this by inserting the following code at the beginning of your scripts, allowing use of ","position":{"start":{"line":67,"column":1,"offset":2957},"end":{"line":67,"column":108,"offset":3064},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":67,"column":108,"offset":3064},"end":{"line":67,"column":118,"offset":3074},"indent":[]}},{"type":"text","value":" in ECMA-262 implementations which do not natively support it. This algorithm is exactly equivalent to the one specified in ECMA-262, 5th edition, assuming that ","position":{"start":{"line":67,"column":118,"offset":3074},"end":{"line":67,"column":279,"offset":3235},"indent":[]}},{"type":"inlineCode","value":"fn.call","position":{"start":{"line":67,"column":279,"offset":3235},"end":{"line":67,"column":288,"offset":3244},"indent":[]}},{"type":"text","value":" evaluates to the original value of ","position":{"start":{"line":67,"column":288,"offset":3244},"end":{"line":67,"column":324,"offset":3280},"indent":[]}},{"type":"link","title":null,"url":"../function/bind","children":[{"type":"inlineCode","value":"Function.prototype.bind()","position":{"start":{"line":67,"column":325,"offset":3281},"end":{"line":67,"column":352,"offset":3308},"indent":[]}}],"position":{"start":{"line":67,"column":324,"offset":3280},"end":{"line":67,"column":371,"offset":3327},"indent":[]}},{"type":"text","value":", and that ","position":{"start":{"line":67,"column":371,"offset":3327},"end":{"line":67,"column":382,"offset":3338},"indent":[]}},{"type":"link","title":null,"url":"push","children":[{"type":"inlineCode","value":"Array.prototype.push()","position":{"start":{"line":67,"column":383,"offset":3339},"end":{"line":67,"column":407,"offset":3363},"indent":[]}}],"position":{"start":{"line":67,"column":382,"offset":3338},"end":{"line":67,"column":414,"offset":3370},"indent":[]}},{"type":"text","value":" has its original value.","position":{"start":{"line":67,"column":414,"offset":3370},"end":{"line":67,"column":438,"offset":3394},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2957},"end":{"line":67,"column":438,"offset":3394},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"if (!Array.prototype.filter){\n  Array.prototype.filter = function(func, thisArg) {\n    'use strict';\n    if ( ! ((typeof func === 'Function' || typeof func === 'function') && this) )\n        throw new TypeError();\n\n    var len = this.length >>> 0,\n        res = new Array(len), // preallocate array\n        t = this, c = 0, i = -1;\n\n    var kValue;\n    if (thisArg === undefined){\n      while (++i !== len){\n        // checks to see if the key was set\n        if (i in this){\n          kValue = t[i]; // in case t is changed in callback\n          if (func(t[i], i, t)){\n            res[c++] = kValue;\n          }\n        }\n      }\n    }\n    else{\n      while (++i !== len){\n        // checks to see if the key was set\n        if (i in this){\n          kValue = t[i];\n          if (func.call(thisArg, t[i], i, t)){\n            res[c++] = kValue;\n          }\n        }\n      }\n    }\n\n    res.length = c; // shrink down array to proper size\n    return res;\n  };\n}","position":{"start":{"line":69,"column":1,"offset":3396},"end":{"line":106,"column":6,"offset":4496},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":108,"column":4,"offset":4501},"end":{"line":108,"column":12,"offset":4509},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4498},"end":{"line":108,"column":12,"offset":4509},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Filtering out all small values","position":{"start":{"line":110,"column":5,"offset":4515},"end":{"line":110,"column":35,"offset":4545},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4511},"end":{"line":110,"column":35,"offset":4545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example uses ","position":{"start":{"line":112,"column":1,"offset":4547},"end":{"line":112,"column":28,"offset":4574},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":112,"column":28,"offset":4574},"end":{"line":112,"column":38,"offset":4584},"indent":[]}},{"type":"text","value":" to create a filtered array that has all elements with values less than ","position":{"start":{"line":112,"column":38,"offset":4584},"end":{"line":112,"column":110,"offset":4656},"indent":[]}},{"type":"inlineCode","value":"10","position":{"start":{"line":112,"column":110,"offset":4656},"end":{"line":112,"column":114,"offset":4660},"indent":[]}},{"type":"text","value":" removed.","position":{"start":{"line":112,"column":114,"offset":4660},"end":{"line":112,"column":123,"offset":4669},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4547},"end":{"line":112,"column":123,"offset":4669},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function isBigEnough(value) {\n  return value >= 10\n}\n\nlet filtered = [12, 5, 8, 130, 44].filter(isBigEnough)\n// filtered is [12, 130, 44]","position":{"start":{"line":114,"column":1,"offset":4671},"end":{"line":119,"column":33,"offset":4828},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Find all prime numbers in an array","position":{"start":{"line":121,"column":5,"offset":4834},"end":{"line":121,"column":39,"offset":4868},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4830},"end":{"line":121,"column":39,"offset":4868},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example returns all prime numbers in the array:","position":{"start":{"line":123,"column":1,"offset":4870},"end":{"line":123,"column":62,"offset":4931},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4870},"end":{"line":123,"column":62,"offset":4931},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const array = [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\nfunction isPrime(num) {\n  for (let i = 2; num > i; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return num > 1;\n}\n\nconsole.log(array.filter(isPrime)); // [2, 3, 5, 7, 11, 13]","position":{"start":{"line":125,"column":1,"offset":4933},"end":{"line":136,"column":64,"offset":5240},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Filtering invalid entries from JSON","position":{"start":{"line":138,"column":5,"offset":5246},"end":{"line":138,"column":40,"offset":5281},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":5242},"end":{"line":138,"column":40,"offset":5281},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example uses ","position":{"start":{"line":140,"column":1,"offset":5283},"end":{"line":140,"column":28,"offset":5310},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":140,"column":28,"offset":5310},"end":{"line":140,"column":38,"offset":5320},"indent":[]}},{"type":"text","value":" to create a filtered json of all elements with non-zero, numeric ","position":{"start":{"line":140,"column":38,"offset":5320},"end":{"line":140,"column":104,"offset":5386},"indent":[]}},{"type":"inlineCode","value":"id","position":{"start":{"line":140,"column":104,"offset":5386},"end":{"line":140,"column":108,"offset":5390},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":140,"column":108,"offset":5390},"end":{"line":140,"column":109,"offset":5391},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5283},"end":{"line":140,"column":109,"offset":5391},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let arr = [\n  { id: 15 },\n  { id: -1 },\n  { id: 0 },\n  { id: 3 },\n  { id: 12.2 },\n  { },\n  { id: null },\n  { id: NaN },\n  { id: 'undefined' }\n]\n\nlet invalidEntries = 0\n\nfunction filterByID(item) {\n  if (Number.isFinite(item.id) && item.id !== 0) {\n    return true\n  }\n  invalidEntries++\n  return false;\n}\n\nlet arrByID = arr.filter(filterByID)\n\nconsole.log('Filtered Array\\n', arrByID)\n// Filtered Array\n// [{ id: 15 }, { id: -1 }, { id: 3 }, { id: 12.2 }]\n\nconsole.log('Number of Invalid Entries = ', invalidEntries)\n// Number of Invalid Entries = 5","position":{"start":{"line":142,"column":1,"offset":5393},"end":{"line":171,"column":37,"offset":6042},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Searching in array","position":{"start":{"line":173,"column":5,"offset":6048},"end":{"line":173,"column":23,"offset":6066},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":6044},"end":{"line":173,"column":23,"offset":6066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Following example uses ","position":{"start":{"line":175,"column":1,"offset":6068},"end":{"line":175,"column":24,"offset":6091},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":175,"column":24,"offset":6091},"end":{"line":175,"column":34,"offset":6101},"indent":[]}},{"type":"text","value":" to filter array content based on search criteria.","position":{"start":{"line":175,"column":34,"offset":6101},"end":{"line":175,"column":84,"offset":6151},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":6068},"end":{"line":175,"column":84,"offset":6151},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let fruits = ['apple', 'banana', 'grapes', 'mango', 'orange']\n\n/**\n * Filter array items based on search criteria (query)\n */\nfunction filterItems(arr, query) {\n  return arr.filter(function(el) {\n      return el.toLowerCase().indexOf(query.toLowerCase()) !== -1\n  })\n}\n\nconsole.log(filterItems(fruits, 'ap'))  // ['apple', 'grapes']\nconsole.log(filterItems(fruits, 'an'))  // ['banana', 'mango', 'orange']","position":{"start":{"line":177,"column":1,"offset":6153},"end":{"line":189,"column":77,"offset":6602},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ES2015 Implementation","position":{"start":{"line":191,"column":6,"offset":6609},"end":{"line":191,"column":27,"offset":6630},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6604},"end":{"line":191,"column":27,"offset":6630},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const fruits = ['apple', 'banana', 'grapes', 'mango', 'orange']\n\n/**\n * Filter array items based on search criteria (query)\n */\nconst filterItems = (arr, query) => {\n  return arr.filter(el => el.toLowerCase().indexOf(query.toLowerCase()) !== -1)\n}\n\nconsole.log(filterItems(fruits, 'ap'))  // ['apple', 'grapes']\nconsole.log(filterItems(fruits, 'an'))  // ['banana', 'mango', 'orange']","position":{"start":{"line":193,"column":1,"offset":6632},"end":{"line":203,"column":77,"offset":7052},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Affecting Initial Array (modifying, appending and deleting)","position":{"start":{"line":205,"column":5,"offset":7058},"end":{"line":205,"column":64,"offset":7117},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":7054},"end":{"line":205,"column":64,"offset":7117},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following examples tests the behavior of the ","position":{"start":{"line":207,"column":1,"offset":7119},"end":{"line":207,"column":50,"offset":7168},"indent":[]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":207,"column":50,"offset":7168},"end":{"line":207,"column":58,"offset":7176},"indent":[]}},{"type":"text","value":" method when the array is modified.","position":{"start":{"line":207,"column":58,"offset":7176},"end":{"line":207,"column":93,"offset":7211},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":7119},"end":{"line":207,"column":93,"offset":7211},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Modifying each words\nlet words = ['spray', 'limit', 'exuberant', 'destruction','elite', 'present']\n\nconst modifiedWords = words.filter( (word, index, arr) => {\n  arr[index+1] +=' extra'\n  return word.length < 6\n})\n\nconsole.log(modifiedWords)\n// Notice there are three words below length 6, but since they've been modified one is returned\n// [\"spray\"]\n\n// Appending new words\nwords = ['spray', 'limit', 'exuberant', 'destruction','elite', 'present']\nconst appendedWords = words.filter( (word, index, arr) => {\n  arr.push('new')\n  return word.length < 6\n})\n\nconsole.log(appendedWords)\n// Only three fits the condition even though the `words` itself now has a lot more words with character length less than 6\n// [\"spray\" ,\"limit\" ,\"elite\"]\n\n// Deleting words\nwords = ['spray', 'limit', 'exuberant', 'destruction', 'elite', 'present']\nconst deleteWords = words.filter( (word, index, arr) => {\n  arr.pop()\n  return word.length < 6\n})\n\nconsole.log(deleteWords)\n// Notice 'elite' is not even obtained as its been popped off `words` before filter can even get there\n// [\"spray\" ,\"limit\"]","position":{"start":{"line":209,"column":1,"offset":7213},"end":{"line":241,"column":26,"offset":8403},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":242,"column":1,"offset":8404}}}}