{"expireTime":9007200914465210000,"key":"transformer-remark-markdown-html-ast-d1d715b6ccdf774571de60f795d4e509--","val":{"type":"root","children":[{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-py"]},"children":[{"type":"text","value":"abs()           #Returns the absolute value of a number\nall()           #Returns True if all items in an iterable object are true\nany()           #Returns True if any item in an iterable object is true\nascii()         #Returns a readable version of an object. Replaces none-ascii characters with escape character\nbin()           #Returns the binary version of a number\nbool()          #Returns the boolean value of the specified object\nbytearray()     #Returns an array of bytes\nbytes()         #Returns a bytes object\ncallable()      #Returns True if the specified object is callable, otherwise False\nchr()           #Returns a character from the specified Unicode code.\nclassmethod()   #Converts a method into a class method\ncompile()       #Returns the specified source as an object, ready to be executed\ncomplex()       #Returns a complex number\ndelattr()       #Deletes the specified attribute (property or method) from the specified object\ndict()          #Returns a dictionary (Array)\ndir()           #Returns a list of the specified object's properties and methods\ndivmod()        #Returns the quotient and the remainder when argument1 is divided by argument2\nenumerate()     #Takes a collection (e.g. a tuple) and returns it as an enumerate object\neval()          #Evaluates and executes an expression\nexec()          #Executes the specified code (or object)\nfilter()        #Use a filter function to exclude items in an iterable object\nfloat()         #Returns a floating point number\nformat()        #Formats a specified value\nfrozenset()     #Returns a frozenset object\ngetattr()       #Returns the value of the specified attribute (property or method)\nglobals()       #Returns the current global symbol table as a dictionary\nhasattr()       #Returns True if the specified object has the specified attribute (property/method)\nhash()          #Returns the hash value of a specified object\nhelp()          #Executes the built-in help system\nhex()           #Converts a number into a hexadecimal value\nid()            #Returns the id of an object\ninput()         #Allowing user input\nint()           #Returns an integer number\nisinstance()    #Returns True if a specified object is an instance of a specified object\nissubclass()    #Returns True if a specified class is a subclass of a specified object\niter()          #Returns an iterator object\nlen()           #Returns the length of an object\nlist()          #Returns a list\nlocals()        #Returns an updated dictionary of the current local symbol table\nmap()           #Returns the specified iterator with the specified function applied to each item\nmax()           #Returns the largest item in an iterable\nmemoryview()    #Returns a memory view object\nmin()           #Returns the smallest item in an iterable\nnext()          #Returns the next item in an iterable\nobject()        #Returns a new object\noct()           #Converts a number into an octal\nopen()          #Opens a file and returns a file object\nord()           #Convert an integer representing the Unicode of the specified character\npow()           #Returns the value of x to the power of y\nprint()         #Prints to the standard output device\nproperty()      #Gets, sets, deletes a property\nrange()         #Returns a sequence of numbers, starting from 0 and increments by 1 (by default)\nrepr()          #Returns a readable version of an object\nreversed()      #Returns a reversed iterator\nround()         #Rounds a numbers\nset()           #Returns a new set object\nsetattr()       #Sets an attribute (property/method) of an object\nslice()         #Returns a slice object\nsorted()        #Returns a sorted list\nstaticmethod()  #Converts a method into a static method\nstr()           #Returns a string object\nsum()           #Sums the items of an iterator\nsuper()         #Returns an object that represents the parent class\ntuple()         #Returns a tuple\ntype()          #Returns the type of an object\nvars()          #Returns the __dict__ property of an object\nzip()           #Returns an iterator, from two or more iterators\n"}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":72,"column":4,"offset":3654}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":72,"column":4,"offset":3654}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":73,"column":1,"offset":3655}}}}