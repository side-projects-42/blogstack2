{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-133a3640859c479d08f4ac323f65690c--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Promise.allSettled()","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":23,"offset":24},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":23,"offset":24},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":5,"offset":30},"indent":[]}},{"type":"inlineCode","value":"Promise.allSettled()","position":{"start":{"line":5,"column":5,"offset":30},"end":{"line":5,"column":27,"offset":52},"indent":[]}},{"type":"text","value":" method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.","position":{"start":{"line":5,"column":27,"offset":52},"end":{"line":5,"column":207,"offset":232},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":207,"offset":232},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is typically used when you have multiple asynchronous tasks that are not dependent on one another to complete successfully, or you'd always like to know the result of each promise.","position":{"start":{"line":7,"column":1,"offset":234},"end":{"line":7,"column":184,"offset":417},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":234},"end":{"line":7,"column":184,"offset":417},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In comparison, the Promise returned by ","position":{"start":{"line":9,"column":1,"offset":419},"end":{"line":9,"column":40,"offset":458},"indent":[]}},{"type":"link","title":null,"url":"all","children":[{"type":"inlineCode","value":"Promise.all()","position":{"start":{"line":9,"column":41,"offset":459},"end":{"line":9,"column":56,"offset":474},"indent":[]}}],"position":{"start":{"line":9,"column":40,"offset":458},"end":{"line":9,"column":62,"offset":480},"indent":[]}},{"type":"text","value":" may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting.","position":{"start":{"line":9,"column":62,"offset":480},"end":{"line":9,"column":193,"offset":611},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":419},"end":{"line":9,"column":193,"offset":611},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":11,"column":4,"offset":616},"end":{"line":11,"column":10,"offset":622},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":613},"end":{"line":11,"column":10,"offset":622},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Promise.allSettled(iterable);","position":{"start":{"line":13,"column":1,"offset":624},"end":{"line":13,"column":34,"offset":657},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":15,"column":5,"offset":663},"end":{"line":15,"column":15,"offset":673},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":659},"end":{"line":15,"column":15,"offset":673},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"iterable","position":{"start":{"line":17,"column":1,"offset":675},"end":{"line":17,"column":11,"offset":685},"indent":[]}},{"type":"text","value":"\nAn ","position":{"start":{"line":17,"column":11,"offset":685},"end":{"line":18,"column":4,"offset":689},"indent":[1]}},{"type":"link","title":null,"url":"../../iteration_protocols","children":[{"type":"text","value":"iterable","position":{"start":{"line":18,"column":5,"offset":690},"end":{"line":18,"column":13,"offset":698},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":689},"end":{"line":18,"column":41,"offset":726},"indent":[]}},{"type":"text","value":" object, such as an ","position":{"start":{"line":18,"column":41,"offset":726},"end":{"line":18,"column":61,"offset":746},"indent":[]}},{"type":"link","title":null,"url":"../array","children":[{"type":"inlineCode","value":"Array","position":{"start":{"line":18,"column":62,"offset":747},"end":{"line":18,"column":69,"offset":754},"indent":[]}}],"position":{"start":{"line":18,"column":61,"offset":746},"end":{"line":18,"column":80,"offset":765},"indent":[]}},{"type":"text","value":", in which each member is a ","position":{"start":{"line":18,"column":80,"offset":765},"end":{"line":18,"column":108,"offset":793},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":18,"column":108,"offset":793},"end":{"line":18,"column":117,"offset":802},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":18,"column":117,"offset":802},"end":{"line":18,"column":118,"offset":803},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":675},"end":{"line":18,"column":118,"offset":803},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":20,"column":5,"offset":809},"end":{"line":20,"column":17,"offset":821},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":805},"end":{"line":20,"column":17,"offset":821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":22,"column":1,"offset":823},"end":{"line":22,"column":3,"offset":825},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"pending","position":{"start":{"line":22,"column":5,"offset":827},"end":{"line":22,"column":12,"offset":834},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":825},"end":{"line":22,"column":14,"offset":836},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":22,"column":14,"offset":836},"end":{"line":22,"column":15,"offset":837},"indent":[]}},{"type":"link","title":null,"url":"../promise","children":[{"type":"inlineCode","value":"Promise","position":{"start":{"line":22,"column":16,"offset":838},"end":{"line":22,"column":25,"offset":847},"indent":[]}}],"position":{"start":{"line":22,"column":15,"offset":837},"end":{"line":22,"column":38,"offset":860},"indent":[]}},{"type":"text","value":" that will be ","position":{"start":{"line":22,"column":38,"offset":860},"end":{"line":22,"column":52,"offset":874},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"asynchronously","position":{"start":{"line":22,"column":54,"offset":876},"end":{"line":22,"column":68,"offset":890},"indent":[]}}],"position":{"start":{"line":22,"column":52,"offset":874},"end":{"line":22,"column":70,"offset":892},"indent":[]}},{"type":"text","value":" fulfilled once every promise in the specified collection of promises has completed, either by successfully being fulfilled or by being rejected. At that time, the returned promise's handler is passed as input an array containing the outcome of each promise in the original set of promises.","position":{"start":{"line":22,"column":70,"offset":892},"end":{"line":22,"column":360,"offset":1182},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":823},"end":{"line":22,"column":360,"offset":1182},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, ","position":{"start":{"line":24,"column":1,"offset":1184},"end":{"line":24,"column":10,"offset":1193},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"if and only if","position":{"start":{"line":24,"column":12,"offset":1195},"end":{"line":24,"column":26,"offset":1209},"indent":[]}}],"position":{"start":{"line":24,"column":10,"offset":1193},"end":{"line":24,"column":28,"offset":1211},"indent":[]}},{"type":"text","value":" an empty iterable is passed as an argument, ","position":{"start":{"line":24,"column":28,"offset":1211},"end":{"line":24,"column":73,"offset":1256},"indent":[]}},{"type":"inlineCode","value":"Promise.allSettled()","position":{"start":{"line":24,"column":73,"offset":1256},"end":{"line":24,"column":95,"offset":1278},"indent":[]}},{"type":"text","value":" returns a ","position":{"start":{"line":24,"column":95,"offset":1278},"end":{"line":24,"column":106,"offset":1289},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":24,"column":106,"offset":1289},"end":{"line":24,"column":115,"offset":1298},"indent":[]}},{"type":"text","value":" object that has ","position":{"start":{"line":24,"column":115,"offset":1298},"end":{"line":24,"column":132,"offset":1315},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"already been resolved","position":{"start":{"line":24,"column":134,"offset":1317},"end":{"line":24,"column":155,"offset":1338},"indent":[]}}],"position":{"start":{"line":24,"column":132,"offset":1315},"end":{"line":24,"column":157,"offset":1340},"indent":[]}},{"type":"text","value":" as an empty array.","position":{"start":{"line":24,"column":157,"offset":1340},"end":{"line":24,"column":176,"offset":1359},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1184},"end":{"line":24,"column":176,"offset":1359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For each outcome object, a ","position":{"start":{"line":26,"column":1,"offset":1361},"end":{"line":26,"column":28,"offset":1388},"indent":[]}},{"type":"inlineCode","value":"status","position":{"start":{"line":26,"column":28,"offset":1388},"end":{"line":26,"column":36,"offset":1396},"indent":[]}},{"type":"text","value":" string is present. If the status is ","position":{"start":{"line":26,"column":36,"offset":1396},"end":{"line":26,"column":73,"offset":1433},"indent":[]}},{"type":"inlineCode","value":"fulfilled","position":{"start":{"line":26,"column":73,"offset":1433},"end":{"line":26,"column":84,"offset":1444},"indent":[]}},{"type":"text","value":", then a ","position":{"start":{"line":26,"column":84,"offset":1444},"end":{"line":26,"column":93,"offset":1453},"indent":[]}},{"type":"inlineCode","value":"value","position":{"start":{"line":26,"column":93,"offset":1453},"end":{"line":26,"column":100,"offset":1460},"indent":[]}},{"type":"text","value":" is present. If the status is ","position":{"start":{"line":26,"column":100,"offset":1460},"end":{"line":26,"column":130,"offset":1490},"indent":[]}},{"type":"inlineCode","value":"rejected","position":{"start":{"line":26,"column":130,"offset":1490},"end":{"line":26,"column":140,"offset":1500},"indent":[]}},{"type":"text","value":", then a ","position":{"start":{"line":26,"column":140,"offset":1500},"end":{"line":26,"column":149,"offset":1509},"indent":[]}},{"type":"inlineCode","value":"reason","position":{"start":{"line":26,"column":149,"offset":1509},"end":{"line":26,"column":157,"offset":1517},"indent":[]}},{"type":"text","value":" is present. The value (or reason) reflects what value each promise was fulfilled (or rejected) with.","position":{"start":{"line":26,"column":157,"offset":1517},"end":{"line":26,"column":258,"offset":1618},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1361},"end":{"line":26,"column":258,"offset":1618},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":28,"column":4,"offset":1623},"end":{"line":28,"column":12,"offset":1631},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1620},"end":{"line":28,"column":12,"offset":1631},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using Promise.allSettled","position":{"start":{"line":30,"column":5,"offset":1637},"end":{"line":30,"column":29,"offset":1661},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1633},"end":{"line":30,"column":29,"offset":1661},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Promise.allSettled([\n  Promise.resolve(33),\n  new Promise(resolve => setTimeout(() => resolve(66), 0)),\n  99,\n  Promise.reject(new Error('an error'))\n])\n.then(values => console.log(values));\n\n// [\n//   {status: \"fulfilled\", value: 33},\n//   {status: \"fulfilled\", value: 66},\n//   {status: \"fulfilled\", value: 99},\n//   {status: \"rejected\",  reason: Error: an error}\n// ]","position":{"start":{"line":32,"column":1,"offset":1663},"end":{"line":45,"column":9,"offset":2085},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":46,"column":1,"offset":2086}}}}