{"expireTime":9007200914465212000,"key":"transformer-remark-markdown-html-3b8ba56b5b0c397d140ae00c75fdbcbf--","val":"<p>Like many C-like programming languages, most operators JavaScript are binary or\nunary, and written in infix notation, i.e. <code>a op b</code>.</p>\n<p>Here is list of typical operations:</p>\n<ul>\n<li><strong>[Assignment][]</strong>: <code>a = b</code>, <code>a += b</code>, <code>a |= b</code>, and more</li>\n<li></li>\n<li><strong>[Arithmetic][]</strong>: <code>a + b</code>, `a - b</li>\n<li></li>\n<li><strong>String concatenation:</strong> <code>a + b</code></li>\n<li></li>\n<li><strong>[Boolean][]:</strong> <code>a &#x26;&#x26; b</code>, <code>a || b</code>, <code>!a</code></li>\n<li></li>\n<li><strong>[Bitwise][]:</strong> <code>a &#x26; b</code>, <code>a | b</code>, <code>a ^ b</code>, <code>~a</code>, <code>a &#x3C;&#x3C; b</code>, <code>a >> b</code>, <code>a >>> b</code></li>\n<li><strong>Function calls</strong>: <code>foo()</code>, <code>foo(a, b, c)</code></li>\n<li><strong>Increment/Decrement</strong>: <code>a++</code>, <code>++a</code>, <code>a--</code>, <code>--a</code></li>\n<li><strong>[Conditional][]</strong>: <code>foo ? bar : baz</code></li>\n<li>Others: [<code>in</code>][in], [<code>instanceof</code>][instanceof], [<code>typeof</code>][typeof],\n[<code>new</code>][new]</li>\n</ul>\n<p>JavaScript also has <strong>comparison</strong> operators and <strong>property accessors</strong>,\nboth of which are explained in more detail in the next slides.</p>\n<div class=\"callout secondary\">\n<i class=\"fa fa-info-circle\" aria-hidden=\"true\">\n</i> **ES2016**\n<p>ES2016 introduces the <em>[exponentiation operator][pow]</em>:</p>\n<pre><code class=\"language-js\">//\nvar result = 5 ** 2; // equivalent to Math.pow(5, 2)\n</code></pre>\n</div>"}