{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-9c27a3cdef5ddef66184dc0e2f948321--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"What is a buffer?","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":21,"offset":22},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":21,"offset":22},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers (or any programmer that uses a system programming language), which interact with memory every day.","position":{"start":{"line":5,"column":1,"offset":24},"end":{"line":5,"column":227,"offset":250},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":24},"end":{"line":5,"column":227,"offset":250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It represents a fixed-size chunk of memory (can't be resized) allocated outside of the V8 JavaScript engine.","position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":109,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":109,"offset":360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can think of a buffer like an array of integers, which each represent a byte of data.","position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":90,"offset":451},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":90,"offset":451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is implemented by the Node.js ","position":{"start":{"line":11,"column":1,"offset":453},"end":{"line":11,"column":34,"offset":486},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html","children":[{"type":"text","value":"Buffer class","position":{"start":{"line":11,"column":35,"offset":487},"end":{"line":11,"column":47,"offset":499},"indent":[]}}],"position":{"start":{"line":11,"column":34,"offset":486},"end":{"line":11,"column":84,"offset":536},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11,"column":84,"offset":536},"end":{"line":11,"column":85,"offset":537},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":453},"end":{"line":11,"column":85,"offset":537},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Why do we need a buffer?","position":{"start":{"line":13,"column":4,"offset":542},"end":{"line":13,"column":28,"offset":566},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":539},"end":{"line":13,"column":28,"offset":566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Buffers were introduced to help developers deal with binary data, in an ecosystem that traditionally only dealt with strings rather than binaries.","position":{"start":{"line":15,"column":1,"offset":568},"end":{"line":15,"column":147,"offset":714},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":568},"end":{"line":15,"column":147,"offset":714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Buffers are deeply linked with streams. When a stream processor receives data faster than it can digest, it puts the data in a buffer.","position":{"start":{"line":17,"column":1,"offset":716},"end":{"line":17,"column":135,"offset":850},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":716},"end":{"line":17,"column":135,"offset":850},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A simple visualization of a buffer is when you are watching a YouTube video and the red line goes beyond your visualization point: you are downloading data faster than you're viewing it, and your browser buffers it.","position":{"start":{"line":19,"column":1,"offset":852},"end":{"line":19,"column":216,"offset":1067},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":852},"end":{"line":19,"column":216,"offset":1067},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to create a buffer","position":{"start":{"line":21,"column":4,"offset":1072},"end":{"line":21,"column":26,"offset":1094},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1069},"end":{"line":21,"column":26,"offset":1094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer is created using the ","position":{"start":{"line":23,"column":1,"offset":1096},"end":{"line":23,"column":31,"offset":1126},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe","children":[{"type":"inlineCode","value":"Buffer.from()","position":{"start":{"line":23,"column":32,"offset":1127},"end":{"line":23,"column":47,"offset":1142},"indent":[]}}],"position":{"start":{"line":23,"column":31,"offset":1126},"end":{"line":23,"column":139,"offset":1234},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":23,"column":139,"offset":1234},"end":{"line":23,"column":141,"offset":1236},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding","children":[{"type":"inlineCode","value":"Buffer.alloc()","position":{"start":{"line":23,"column":142,"offset":1237},"end":{"line":23,"column":158,"offset":1253},"indent":[]}}],"position":{"start":{"line":23,"column":141,"offset":1236},"end":{"line":23,"column":247,"offset":1342},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":23,"column":247,"offset":1342},"end":{"line":23,"column":253,"offset":1348},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size","children":[{"type":"inlineCode","value":"Buffer.allocUnsafe()","position":{"start":{"line":23,"column":254,"offset":1349},"end":{"line":23,"column":276,"offset":1371},"indent":[]}}],"position":{"start":{"line":23,"column":253,"offset":1348},"end":{"line":23,"column":357,"offset":1452},"indent":[]}},{"type":"text","value":" methods.","position":{"start":{"line":23,"column":357,"offset":1452},"end":{"line":23,"column":366,"offset":1461},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1096},"end":{"line":23,"column":366,"offset":1461},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');","position":{"start":{"line":25,"column":1,"offset":1463},"end":{"line":28,"column":4,"offset":1508},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array","children":[{"type":"inlineCode","value":"Buffer.from(array)","position":{"start":{"line":30,"column":4,"offset":1513},"end":{"line":30,"column":24,"offset":1533},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1512},"end":{"line":30,"column":99,"offset":1608},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1512},"end":{"line":30,"column":99,"offset":1608},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1510},"end":{"line":30,"column":99,"offset":1608},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length","children":[{"type":"inlineCode","value":"Buffer.from(arrayBuffer[, byteOffset[, length]])","position":{"start":{"line":31,"column":4,"offset":1612},"end":{"line":31,"column":54,"offset":1662},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1611},"end":{"line":31,"column":153,"offset":1761},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1611},"end":{"line":31,"column":153,"offset":1761},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1609},"end":{"line":31,"column":153,"offset":1761},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer","children":[{"type":"inlineCode","value":"Buffer.from(buffer)","position":{"start":{"line":32,"column":4,"offset":1765},"end":{"line":32,"column":25,"offset":1786},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1764},"end":{"line":32,"column":101,"offset":1862},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1764},"end":{"line":32,"column":101,"offset":1862},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1762},"end":{"line":32,"column":101,"offset":1862},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding","children":[{"type":"inlineCode","value":"Buffer.from(string[, encoding])","position":{"start":{"line":33,"column":4,"offset":1866},"end":{"line":33,"column":37,"offset":1899},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":1865},"end":{"line":33,"column":122,"offset":1984},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":1865},"end":{"line":33,"column":122,"offset":1984},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1863},"end":{"line":33,"column":122,"offset":1984},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1510},"end":{"line":33,"column":122,"offset":1984},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also just initialize the buffer passing the size. This creates a 1KB buffer:","position":{"start":{"line":35,"column":1,"offset":1986},"end":{"line":35,"column":85,"offset":2070},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1986},"end":{"line":35,"column":85,"offset":2070},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.alloc(1024);\n//or\nconst buf = Buffer.allocUnsafe(1024);","position":{"start":{"line":37,"column":1,"offset":2072},"end":{"line":42,"column":4,"offset":2159},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"While both ","position":{"start":{"line":44,"column":1,"offset":2161},"end":{"line":44,"column":12,"offset":2172},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":44,"column":12,"offset":2172},"end":{"line":44,"column":19,"offset":2179},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":44,"column":19,"offset":2179},"end":{"line":44,"column":24,"offset":2184},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":44,"column":24,"offset":2184},"end":{"line":44,"column":37,"offset":2197},"indent":[]}},{"type":"text","value":" allocate a ","position":{"start":{"line":44,"column":37,"offset":2197},"end":{"line":44,"column":49,"offset":2209},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":44,"column":49,"offset":2209},"end":{"line":44,"column":57,"offset":2217},"indent":[]}},{"type":"text","value":" of the specified size in bytes, the ","position":{"start":{"line":44,"column":57,"offset":2217},"end":{"line":44,"column":94,"offset":2254},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":44,"column":94,"offset":2254},"end":{"line":44,"column":102,"offset":2262},"indent":[]}},{"type":"text","value":" created by ","position":{"start":{"line":44,"column":102,"offset":2262},"end":{"line":44,"column":114,"offset":2274},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":44,"column":114,"offset":2274},"end":{"line":44,"column":121,"offset":2281},"indent":[]}},{"type":"text","value":" will be ","position":{"start":{"line":44,"column":121,"offset":2281},"end":{"line":44,"column":130,"offset":2290},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"initialized","position":{"start":{"line":44,"column":131,"offset":2291},"end":{"line":44,"column":142,"offset":2302},"indent":[]}}],"position":{"start":{"line":44,"column":130,"offset":2290},"end":{"line":44,"column":143,"offset":2303},"indent":[]}},{"type":"text","value":" with zeroes and the one created by ","position":{"start":{"line":44,"column":143,"offset":2303},"end":{"line":44,"column":179,"offset":2339},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":44,"column":179,"offset":2339},"end":{"line":44,"column":192,"offset":2352},"indent":[]}},{"type":"text","value":" will be ","position":{"start":{"line":44,"column":192,"offset":2352},"end":{"line":44,"column":201,"offset":2361},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"uninitialized","position":{"start":{"line":44,"column":202,"offset":2362},"end":{"line":44,"column":215,"offset":2375},"indent":[]}}],"position":{"start":{"line":44,"column":201,"offset":2361},"end":{"line":44,"column":216,"offset":2376},"indent":[]}},{"type":"text","value":". This means that while ","position":{"start":{"line":44,"column":216,"offset":2376},"end":{"line":44,"column":240,"offset":2400},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":44,"column":240,"offset":2400},"end":{"line":44,"column":253,"offset":2413},"indent":[]}},{"type":"text","value":" would be quite fast in comparison to ","position":{"start":{"line":44,"column":253,"offset":2413},"end":{"line":44,"column":291,"offset":2451},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":44,"column":291,"offset":2451},"end":{"line":44,"column":298,"offset":2458},"indent":[]}},{"type":"text","value":", the allocated segment of memory may contain old data which could potentially be sensitive.","position":{"start":{"line":44,"column":298,"offset":2458},"end":{"line":44,"column":390,"offset":2550},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2161},"end":{"line":44,"column":390,"offset":2550},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Older data, if present in the memory, can be accessed or leaked when the ","position":{"start":{"line":46,"column":1,"offset":2552},"end":{"line":46,"column":74,"offset":2625},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":46,"column":74,"offset":2625},"end":{"line":46,"column":82,"offset":2633},"indent":[]}},{"type":"text","value":" memory is read. This is what really makes ","position":{"start":{"line":46,"column":82,"offset":2633},"end":{"line":46,"column":125,"offset":2676},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":46,"column":125,"offset":2676},"end":{"line":46,"column":138,"offset":2689},"indent":[]}},{"type":"text","value":" unsafe and extra care must be taken while using it.","position":{"start":{"line":46,"column":138,"offset":2689},"end":{"line":46,"column":190,"offset":2741},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2552},"end":{"line":46,"column":190,"offset":2741},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using a buffer","position":{"start":{"line":48,"column":4,"offset":2746},"end":{"line":48,"column":18,"offset":2760},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2743},"end":{"line":48,"column":18,"offset":2760},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Access the content of a buffer","position":{"start":{"line":50,"column":5,"offset":2766},"end":{"line":50,"column":35,"offset":2796},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2762},"end":{"line":50,"column":35,"offset":2796},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer, being an array of bytes, can be accessed like an array:","position":{"start":{"line":52,"column":1,"offset":2798},"end":{"line":52,"column":66,"offset":2863},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2798},"end":{"line":52,"column":66,"offset":2863},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nconsole.log(buf[0]); //72\nconsole.log(buf[1]); //101\nconsole.log(buf[2]); //121","position":{"start":{"line":54,"column":1,"offset":2865},"end":{"line":60,"column":4,"offset":2990},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Those numbers are the Unicode Code that identifies the character in the buffer position (H => 72, e => 101, y => 121)","position":{"start":{"line":62,"column":1,"offset":2992},"end":{"line":62,"column":118,"offset":3109},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2992},"end":{"line":62,"column":118,"offset":3109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can print the full content of the buffer using the ","position":{"start":{"line":64,"column":1,"offset":3111},"end":{"line":64,"column":56,"offset":3166},"indent":[]}},{"type":"inlineCode","value":"toString()","position":{"start":{"line":64,"column":56,"offset":3166},"end":{"line":64,"column":68,"offset":3178},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":64,"column":68,"offset":3178},"end":{"line":64,"column":76,"offset":3186},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":3111},"end":{"line":64,"column":76,"offset":3186},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconsole.log(buf.toString());","position":{"start":{"line":66,"column":1,"offset":3188},"end":{"line":69,"column":4,"offset":3229},"indent":[1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Notice that if you initialize a buffer with a number that sets its size, you'll get access to pre-initialized memory that will contain random data, not an empty buffer!","position":{"start":{"line":71,"column":3,"offset":3233},"end":{"line":71,"column":171,"offset":3401},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":3233},"end":{"line":71,"column":171,"offset":3401},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3231},"end":{"line":71,"column":171,"offset":3401},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Get the length of a buffer","position":{"start":{"line":73,"column":5,"offset":3407},"end":{"line":73,"column":31,"offset":3433},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3403},"end":{"line":73,"column":31,"offset":3433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":75,"column":1,"offset":3435},"end":{"line":75,"column":9,"offset":3443},"indent":[]}},{"type":"inlineCode","value":"length","position":{"start":{"line":75,"column":9,"offset":3443},"end":{"line":75,"column":17,"offset":3451},"indent":[]}},{"type":"text","value":" property:","position":{"start":{"line":75,"column":17,"offset":3451},"end":{"line":75,"column":27,"offset":3461},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3435},"end":{"line":75,"column":27,"offset":3461},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nconsole.log(buf.length);","position":{"start":{"line":77,"column":1,"offset":3463},"end":{"line":81,"column":4,"offset":3533},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Iterate over the contents of a buffer","position":{"start":{"line":83,"column":5,"offset":3539},"end":{"line":83,"column":42,"offset":3576},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3535},"end":{"line":83,"column":42,"offset":3576},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nfor (const item of buf) {\n    console.log(item); //72 101 121 33\n}","position":{"start":{"line":85,"column":1,"offset":3578},"end":{"line":91,"column":4,"offset":3690},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Changing the content of a buffer","position":{"start":{"line":93,"column":5,"offset":3696},"end":{"line":93,"column":37,"offset":3728},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":3692},"end":{"line":93,"column":37,"offset":3728},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can write to a buffer a whole string of data by using the ","position":{"start":{"line":95,"column":1,"offset":3730},"end":{"line":95,"column":63,"offset":3792},"indent":[]}},{"type":"inlineCode","value":"write()","position":{"start":{"line":95,"column":63,"offset":3792},"end":{"line":95,"column":72,"offset":3801},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":95,"column":72,"offset":3801},"end":{"line":95,"column":80,"offset":3809},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3730},"end":{"line":95,"column":80,"offset":3809},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.alloc(4);\nbuf.write('Hey!');","position":{"start":{"line":97,"column":1,"offset":3811},"end":{"line":101,"column":4,"offset":3871},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Just like you can access a buffer with an array syntax, you can also set the contents of the buffer in the same way:","position":{"start":{"line":103,"column":1,"offset":3873},"end":{"line":103,"column":117,"offset":3989},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3873},"end":{"line":103,"column":117,"offset":3989},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nbuf[1] = 111; //o\nconsole.log(buf.toString()); //Hoy!","position":{"start":{"line":105,"column":1,"offset":3991},"end":{"line":110,"column":4,"offset":4090},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copy a buffer","position":{"start":{"line":112,"column":5,"offset":4096},"end":{"line":112,"column":18,"offset":4109},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4092},"end":{"line":112,"column":18,"offset":4109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Copying a buffer is possible using the ","position":{"start":{"line":114,"column":1,"offset":4111},"end":{"line":114,"column":40,"offset":4150},"indent":[]}},{"type":"inlineCode","value":"copy()","position":{"start":{"line":114,"column":40,"offset":4150},"end":{"line":114,"column":48,"offset":4158},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":114,"column":48,"offset":4158},"end":{"line":114,"column":56,"offset":4166},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4111},"end":{"line":114,"column":56,"offset":4166},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(4); //allocate 4 bytes\nbuf.copy(bufcopy);","position":{"start":{"line":116,"column":1,"offset":4168},"end":{"line":121,"column":4,"offset":4282},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default you copy the whole buffer. 3 more parameters let you define the starting position, the ending position, and the new buffer length:","position":{"start":{"line":123,"column":1,"offset":4284},"end":{"line":123,"column":142,"offset":4425},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4284},"end":{"line":123,"column":142,"offset":4425},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(2); //allocate 2 bytes\nbuf.copy(bufcopy, 0, 0, 2);\nbufcopy.toString(); //'He'","position":{"start":{"line":125,"column":1,"offset":4427},"end":{"line":131,"column":4,"offset":4577},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Slice a buffer","position":{"start":{"line":133,"column":5,"offset":4583},"end":{"line":133,"column":19,"offset":4597},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4579},"end":{"line":133,"column":19,"offset":4597},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to create a partial visualization of a buffer, you can create a slice. A slice is not a copy: the original buffer is still the source of truth. If that changes, your slice changes.","position":{"start":{"line":135,"column":1,"offset":4599},"end":{"line":135,"column":193,"offset":4791},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4599},"end":{"line":135,"column":193,"offset":4791},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":137,"column":1,"offset":4793},"end":{"line":137,"column":9,"offset":4801},"indent":[]}},{"type":"inlineCode","value":"slice()","position":{"start":{"line":137,"column":9,"offset":4801},"end":{"line":137,"column":18,"offset":4810},"indent":[]}},{"type":"text","value":" method to create it. The first parameter is the starting position, and you can specify an optional second parameter with the end position:","position":{"start":{"line":137,"column":18,"offset":4810},"end":{"line":137,"column":157,"offset":4949},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4793},"end":{"line":137,"column":157,"offset":4949},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nconst buf = Buffer.from('Hey!');\nbuf.slice(0).toString(); //Hey!\nconst slice = buf.slice(0, 2);\nconsole.log(slice.toString()); //He\nbuf[1] = 111; //o\nconsole.log(slice.toString()); //Ho","position":{"start":{"line":139,"column":1,"offset":4951},"end":{"line":147,"column":4,"offset":5149},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":148,"column":1,"offset":5150}}}}