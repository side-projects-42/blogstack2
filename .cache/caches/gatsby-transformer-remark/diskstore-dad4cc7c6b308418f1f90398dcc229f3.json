{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-6b8c10cdca3b856cbdb8c007f5770b11--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"this","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":7,"offset":8},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":7,"offset":8},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":5,"column":1,"offset":10},"end":{"line":5,"column":3,"offset":12},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":5,"column":3,"offset":12},"end":{"line":5,"column":9,"offset":18},"indent":[]}},{"type":"text","value":" behaves a little differently in JavaScript compared to other languages. It also has some differences between ","position":{"start":{"line":5,"column":9,"offset":18},"end":{"line":5,"column":119,"offset":128},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":5,"column":120,"offset":129},"end":{"line":5,"column":131,"offset":140},"indent":[]}}],"position":{"start":{"line":5,"column":119,"offset":128},"end":{"line":5,"column":148,"offset":157},"indent":[]}},{"type":"text","value":" and non-strict mode.","position":{"start":{"line":5,"column":148,"offset":157},"end":{"line":5,"column":169,"offset":178},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":10},"end":{"line":5,"column":169,"offset":178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In most cases, the value of ","position":{"start":{"line":7,"column":1,"offset":180},"end":{"line":7,"column":29,"offset":208},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":7,"column":29,"offset":208},"end":{"line":7,"column":35,"offset":214},"indent":[]}},{"type":"text","value":" is determined by how a function is called (runtime binding). It can't be set by assignment during execution, and it may be different each time the function is called. ES5 introduced the ","position":{"start":{"line":7,"column":35,"offset":214},"end":{"line":7,"column":222,"offset":401},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/bind","children":[{"type":"inlineCode","value":"bind()","position":{"start":{"line":7,"column":223,"offset":402},"end":{"line":7,"column":231,"offset":410},"indent":[]}}],"position":{"start":{"line":7,"column":222,"offset":401},"end":{"line":7,"column":265,"offset":444},"indent":[]}},{"type":"text","value":" method to ","position":{"start":{"line":7,"column":265,"offset":444},"end":{"line":7,"column":276,"offset":455},"indent":[]}},{"type":"link","title":null,"url":"#The_bind_method","children":[{"type":"text","value":"set the value of a function's ","position":{"start":{"line":7,"column":277,"offset":456},"end":{"line":7,"column":307,"offset":486},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":7,"column":307,"offset":486},"end":{"line":7,"column":313,"offset":492},"indent":[]}},{"type":"text","value":" regardless of how it's called","position":{"start":{"line":7,"column":313,"offset":492},"end":{"line":7,"column":343,"offset":522},"indent":[]}}],"position":{"start":{"line":7,"column":276,"offset":455},"end":{"line":7,"column":362,"offset":541},"indent":[]}},{"type":"text","value":", and ES2015 introduced ","position":{"start":{"line":7,"column":362,"offset":541},"end":{"line":7,"column":386,"offset":565},"indent":[]}},{"type":"link","title":null,"url":"../functions/arrow_functions","children":[{"type":"text","value":"arrow functions","position":{"start":{"line":7,"column":387,"offset":566},"end":{"line":7,"column":402,"offset":581},"indent":[]}}],"position":{"start":{"line":7,"column":386,"offset":565},"end":{"line":7,"column":433,"offset":612},"indent":[]}},{"type":"text","value":" which don't provide their own ","position":{"start":{"line":7,"column":433,"offset":612},"end":{"line":7,"column":464,"offset":643},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":7,"column":464,"offset":643},"end":{"line":7,"column":470,"offset":649},"indent":[]}},{"type":"text","value":" binding (it retains the ","position":{"start":{"line":7,"column":470,"offset":649},"end":{"line":7,"column":495,"offset":674},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":7,"column":495,"offset":674},"end":{"line":7,"column":501,"offset":680},"indent":[]}},{"type":"text","value":" value of the enclosing lexical context).","position":{"start":{"line":7,"column":501,"offset":680},"end":{"line":7,"column":542,"offset":721},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":180},"end":{"line":7,"column":542,"offset":721},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":9,"column":4,"offset":726},"end":{"line":9,"column":10,"offset":732},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":723},"end":{"line":9,"column":10,"offset":732},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"this","position":{"start":{"line":11,"column":1,"offset":734},"end":{"line":11,"column":9,"offset":742},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Value","position":{"start":{"line":13,"column":5,"offset":748},"end":{"line":13,"column":10,"offset":753},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":744},"end":{"line":13,"column":10,"offset":753},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A property of an execution context (global, function or eval) that, in non-strict mode, is always a reference to an object and in strict mode can be any value.","position":{"start":{"line":15,"column":1,"offset":755},"end":{"line":15,"column":160,"offset":914},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":755},"end":{"line":15,"column":160,"offset":914},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":17,"column":4,"offset":919},"end":{"line":17,"column":15,"offset":930},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":916},"end":{"line":17,"column":15,"offset":930},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Global context","position":{"start":{"line":19,"column":5,"offset":936},"end":{"line":19,"column":19,"offset":950},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":932},"end":{"line":19,"column":19,"offset":950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the global execution context (outside of any function), ","position":{"start":{"line":21,"column":1,"offset":952},"end":{"line":21,"column":60,"offset":1011},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":21,"column":60,"offset":1011},"end":{"line":21,"column":66,"offset":1017},"indent":[]}},{"type":"text","value":" refers to the global object whether in strict mode or not.","position":{"start":{"line":21,"column":66,"offset":1017},"end":{"line":21,"column":125,"offset":1076},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":952},"end":{"line":21,"column":125,"offset":1076},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// In web browsers, the window object is also the global object:\nconsole.log(this === window); // true\n\na = 37;\nconsole.log(window.a); // 37\n\nthis.b = \"MDN\";\nconsole.log(window.b)  // \"MDN\"\nconsole.log(b)         // \"MDN\"","position":{"start":{"line":23,"column":1,"offset":1078},"end":{"line":31,"column":36,"offset":1327},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":33,"column":3,"offset":1331},"end":{"line":33,"column":8,"offset":1336},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1329},"end":{"line":33,"column":10,"offset":1338},"indent":[]}},{"type":"text","value":" You can always easily get the global object using the global ","position":{"start":{"line":33,"column":10,"offset":1338},"end":{"line":33,"column":72,"offset":1400},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/globalthis","children":[{"type":"inlineCode","value":"globalThis","position":{"start":{"line":33,"column":73,"offset":1401},"end":{"line":33,"column":85,"offset":1413},"indent":[]}}],"position":{"start":{"line":33,"column":72,"offset":1400},"end":{"line":33,"column":116,"offset":1444},"indent":[]}},{"type":"text","value":" property, regardless of the current context in which your code is running.","position":{"start":{"line":33,"column":116,"offset":1444},"end":{"line":33,"column":191,"offset":1519},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1329},"end":{"line":33,"column":191,"offset":1519},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Function context","position":{"start":{"line":35,"column":5,"offset":1525},"end":{"line":35,"column":21,"offset":1541},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1521},"end":{"line":35,"column":21,"offset":1541},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside a function, the value of ","position":{"start":{"line":37,"column":1,"offset":1543},"end":{"line":37,"column":33,"offset":1575},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":37,"column":33,"offset":1575},"end":{"line":37,"column":39,"offset":1581},"indent":[]}},{"type":"text","value":" depends on how the function is called.","position":{"start":{"line":37,"column":39,"offset":1581},"end":{"line":37,"column":78,"offset":1620},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1543},"end":{"line":37,"column":78,"offset":1620},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Since the following code is not in ","position":{"start":{"line":39,"column":1,"offset":1622},"end":{"line":39,"column":36,"offset":1657},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":39,"column":37,"offset":1658},"end":{"line":39,"column":48,"offset":1669},"indent":[]}}],"position":{"start":{"line":39,"column":36,"offset":1657},"end":{"line":39,"column":65,"offset":1686},"indent":[]}},{"type":"text","value":", and because the value of ","position":{"start":{"line":39,"column":65,"offset":1686},"end":{"line":39,"column":92,"offset":1713},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":39,"column":92,"offset":1713},"end":{"line":39,"column":98,"offset":1719},"indent":[]}},{"type":"text","value":" is not set by the call, ","position":{"start":{"line":39,"column":98,"offset":1719},"end":{"line":39,"column":123,"offset":1744},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":39,"column":123,"offset":1744},"end":{"line":39,"column":129,"offset":1750},"indent":[]}},{"type":"text","value":" will default to the global object, which is ","position":{"start":{"line":39,"column":129,"offset":1750},"end":{"line":39,"column":174,"offset":1795},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Window","children":[{"type":"inlineCode","value":"window","position":{"start":{"line":39,"column":175,"offset":1796},"end":{"line":39,"column":183,"offset":1804},"indent":[]}}],"position":{"start":{"line":39,"column":174,"offset":1795},"end":{"line":39,"column":241,"offset":1862},"indent":[]}},{"type":"text","value":" in a browser.","position":{"start":{"line":39,"column":241,"offset":1862},"end":{"line":39,"column":255,"offset":1876},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1622},"end":{"line":39,"column":255,"offset":1876},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f1() {\n  return this;\n}\n\n// In a browser:\nf1() === window; // true\n\n// In Node:\nf1() === globalThis; // true","position":{"start":{"line":41,"column":1,"offset":1878},"end":{"line":49,"column":33,"offset":2023},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In strict mode, however, if the value of ","position":{"start":{"line":51,"column":1,"offset":2025},"end":{"line":51,"column":42,"offset":2066},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":51,"column":42,"offset":2066},"end":{"line":51,"column":48,"offset":2072},"indent":[]}},{"type":"text","value":" is not set when entering an execution context, it remains as ","position":{"start":{"line":51,"column":48,"offset":2072},"end":{"line":51,"column":110,"offset":2134},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":51,"column":110,"offset":2134},"end":{"line":51,"column":121,"offset":2145},"indent":[]}},{"type":"text","value":", as shown in the following example:","position":{"start":{"line":51,"column":121,"offset":2145},"end":{"line":51,"column":157,"offset":2181},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2025},"end":{"line":51,"column":157,"offset":2181},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f2() {\n  'use strict'; // see strict mode\n  return this;\n}\n\nf2() === undefined; // true","position":{"start":{"line":53,"column":1,"offset":2183},"end":{"line":58,"column":32,"offset":2299},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":60,"column":3,"offset":2303},"end":{"line":60,"column":8,"offset":2308},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2301},"end":{"line":60,"column":10,"offset":2310},"indent":[]}},{"type":"text","value":" In the second example, ","position":{"start":{"line":60,"column":10,"offset":2310},"end":{"line":60,"column":34,"offset":2334},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":60,"column":34,"offset":2334},"end":{"line":60,"column":40,"offset":2340},"indent":[]}},{"type":"text","value":" should be ","position":{"start":{"line":60,"column":40,"offset":2340},"end":{"line":60,"column":51,"offset":2351},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":60,"column":52,"offset":2352},"end":{"line":60,"column":63,"offset":2363},"indent":[]}}],"position":{"start":{"line":60,"column":51,"offset":2351},"end":{"line":60,"column":93,"offset":2393},"indent":[]}},{"type":"text","value":", because ","position":{"start":{"line":60,"column":93,"offset":2393},"end":{"line":60,"column":103,"offset":2403},"indent":[]}},{"type":"inlineCode","value":"f2","position":{"start":{"line":60,"column":103,"offset":2403},"end":{"line":60,"column":107,"offset":2407},"indent":[]}},{"type":"text","value":" was called directly and not as a method or property of an object (e.g. ","position":{"start":{"line":60,"column":107,"offset":2407},"end":{"line":60,"column":179,"offset":2479},"indent":[]}},{"type":"inlineCode","value":"window.f2()","position":{"start":{"line":60,"column":179,"offset":2479},"end":{"line":60,"column":192,"offset":2492},"indent":[]}},{"type":"text","value":"). This feature wasn't implemented in some browsers when they first started to support ","position":{"start":{"line":60,"column":192,"offset":2492},"end":{"line":60,"column":279,"offset":2579},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":60,"column":280,"offset":2580},"end":{"line":60,"column":291,"offset":2591},"indent":[]}}],"position":{"start":{"line":60,"column":279,"offset":2579},"end":{"line":60,"column":308,"offset":2608},"indent":[]}},{"type":"text","value":". As a result, they incorrectly returned the ","position":{"start":{"line":60,"column":308,"offset":2608},"end":{"line":60,"column":353,"offset":2653},"indent":[]}},{"type":"inlineCode","value":"window","position":{"start":{"line":60,"column":353,"offset":2653},"end":{"line":60,"column":361,"offset":2661},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":60,"column":361,"offset":2661},"end":{"line":60,"column":369,"offset":2669},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2301},"end":{"line":60,"column":369,"offset":2669},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To set the value of ","position":{"start":{"line":62,"column":1,"offset":2671},"end":{"line":62,"column":21,"offset":2691},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":62,"column":21,"offset":2691},"end":{"line":62,"column":27,"offset":2697},"indent":[]}},{"type":"text","value":" to a particular value when calling a function, use ","position":{"start":{"line":62,"column":27,"offset":2697},"end":{"line":62,"column":79,"offset":2749},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/call","children":[{"type":"inlineCode","value":"call()","position":{"start":{"line":62,"column":80,"offset":2750},"end":{"line":62,"column":88,"offset":2758},"indent":[]}}],"position":{"start":{"line":62,"column":79,"offset":2749},"end":{"line":62,"column":122,"offset":2792},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":62,"column":122,"offset":2792},"end":{"line":62,"column":127,"offset":2797},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/apply","children":[{"type":"inlineCode","value":"apply()","position":{"start":{"line":62,"column":128,"offset":2798},"end":{"line":62,"column":137,"offset":2807},"indent":[]}}],"position":{"start":{"line":62,"column":127,"offset":2797},"end":{"line":62,"column":172,"offset":2842},"indent":[]}},{"type":"text","value":" as in the examples below.","position":{"start":{"line":62,"column":172,"offset":2842},"end":{"line":62,"column":198,"offset":2868},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2671},"end":{"line":62,"column":198,"offset":2868},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Class context","position":{"start":{"line":64,"column":5,"offset":2874},"end":{"line":64,"column":18,"offset":2887},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2870},"end":{"line":64,"column":18,"offset":2887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The behavior of ","position":{"start":{"line":66,"column":1,"offset":2889},"end":{"line":66,"column":17,"offset":2905},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":66,"column":17,"offset":2905},"end":{"line":66,"column":23,"offset":2911},"indent":[]}},{"type":"text","value":" in ","position":{"start":{"line":66,"column":23,"offset":2911},"end":{"line":66,"column":27,"offset":2915},"indent":[]}},{"type":"link","title":null,"url":"../classes","children":[{"type":"text","value":"classes","position":{"start":{"line":66,"column":28,"offset":2916},"end":{"line":66,"column":35,"offset":2923},"indent":[]}}],"position":{"start":{"line":66,"column":27,"offset":2915},"end":{"line":66,"column":48,"offset":2936},"indent":[]}},{"type":"text","value":" and functions is similar, since classes are functions under the hood. But there are some differences and caveats.","position":{"start":{"line":66,"column":48,"offset":2936},"end":{"line":66,"column":162,"offset":3050},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2889},"end":{"line":66,"column":162,"offset":3050},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Within a class constructor, ","position":{"start":{"line":68,"column":1,"offset":3052},"end":{"line":68,"column":29,"offset":3080},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":68,"column":29,"offset":3080},"end":{"line":68,"column":35,"offset":3086},"indent":[]}},{"type":"text","value":" is a regular object. All non-static methods within the class are added to the prototype of ","position":{"start":{"line":68,"column":35,"offset":3086},"end":{"line":68,"column":127,"offset":3178},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":68,"column":127,"offset":3178},"end":{"line":68,"column":133,"offset":3184},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":68,"column":133,"offset":3184},"end":{"line":68,"column":134,"offset":3185},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3052},"end":{"line":68,"column":134,"offset":3185},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Example {\n  constructor() {\n    const proto = Object.getPrototypeOf(this);\n    console.log(Object.getOwnPropertyNames(proto));\n  }\n  first(){}\n  second(){}\n  static third(){}\n}\n\nnew Example(); // ['constructor', 'first', 'second']","position":{"start":{"line":70,"column":1,"offset":3187},"end":{"line":80,"column":57,"offset":3463},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":82,"column":3,"offset":3467},"end":{"line":82,"column":8,"offset":3472},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3465},"end":{"line":82,"column":10,"offset":3474},"indent":[]}},{"type":"text","value":" Static methods are not properties of ","position":{"start":{"line":82,"column":10,"offset":3474},"end":{"line":82,"column":48,"offset":3512},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":82,"column":48,"offset":3512},"end":{"line":82,"column":54,"offset":3518},"indent":[]}},{"type":"text","value":". They are properties of the class itself.","position":{"start":{"line":82,"column":54,"offset":3518},"end":{"line":82,"column":96,"offset":3560},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3465},"end":{"line":82,"column":96,"offset":3560},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Derived classes","position":{"start":{"line":84,"column":5,"offset":3566},"end":{"line":84,"column":20,"offset":3581},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":3562},"end":{"line":84,"column":20,"offset":3581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unlike base class constructors, derived constructors have no initial ","position":{"start":{"line":86,"column":1,"offset":3583},"end":{"line":86,"column":70,"offset":3652},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":86,"column":70,"offset":3652},"end":{"line":86,"column":76,"offset":3658},"indent":[]}},{"type":"text","value":" binding. Calling ","position":{"start":{"line":86,"column":76,"offset":3658},"end":{"line":86,"column":94,"offset":3676},"indent":[]}},{"type":"link","title":null,"url":"super","children":[{"type":"inlineCode","value":"super()","position":{"start":{"line":86,"column":95,"offset":3677},"end":{"line":86,"column":104,"offset":3686},"indent":[]}}],"position":{"start":{"line":86,"column":94,"offset":3676},"end":{"line":86,"column":112,"offset":3694},"indent":[]}},{"type":"text","value":" creates a ","position":{"start":{"line":86,"column":112,"offset":3694},"end":{"line":86,"column":123,"offset":3705},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":86,"column":123,"offset":3705},"end":{"line":86,"column":129,"offset":3711},"indent":[]}},{"type":"text","value":" binding within the constructor and essentially has the effect of evaluating the following line of code, where Base is the inherited class:","position":{"start":{"line":86,"column":129,"offset":3711},"end":{"line":86,"column":268,"offset":3850},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3583},"end":{"line":86,"column":268,"offset":3850},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"this = new Base();","position":{"start":{"line":88,"column":1,"offset":3852},"end":{"line":88,"column":23,"offset":3874},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Warning:","position":{"start":{"line":90,"column":3,"offset":3878},"end":{"line":90,"column":11,"offset":3886},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3876},"end":{"line":90,"column":13,"offset":3888},"indent":[]}},{"type":"text","value":" Referring to ","position":{"start":{"line":90,"column":13,"offset":3888},"end":{"line":90,"column":27,"offset":3902},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":90,"column":27,"offset":3902},"end":{"line":90,"column":33,"offset":3908},"indent":[]}},{"type":"text","value":" before calling ","position":{"start":{"line":90,"column":33,"offset":3908},"end":{"line":90,"column":49,"offset":3924},"indent":[]}},{"type":"inlineCode","value":"super()","position":{"start":{"line":90,"column":49,"offset":3924},"end":{"line":90,"column":58,"offset":3933},"indent":[]}},{"type":"text","value":" will throw an error.","position":{"start":{"line":90,"column":58,"offset":3933},"end":{"line":90,"column":79,"offset":3954},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3876},"end":{"line":90,"column":79,"offset":3954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Derived classes must not return before calling ","position":{"start":{"line":92,"column":1,"offset":3956},"end":{"line":92,"column":48,"offset":4003},"indent":[]}},{"type":"inlineCode","value":"super()","position":{"start":{"line":92,"column":48,"offset":4003},"end":{"line":92,"column":57,"offset":4012},"indent":[]}},{"type":"text","value":", unless they return an ","position":{"start":{"line":92,"column":57,"offset":4012},"end":{"line":92,"column":81,"offset":4036},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":92,"column":81,"offset":4036},"end":{"line":92,"column":89,"offset":4044},"indent":[]}},{"type":"text","value":" or have no constructor at all.","position":{"start":{"line":92,"column":89,"offset":4044},"end":{"line":92,"column":120,"offset":4075},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3956},"end":{"line":92,"column":120,"offset":4075},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Base {}\nclass Good extends Base {}\nclass AlsoGood extends Base {\n  constructor() {\n    return {a: 5};\n  }\n}\nclass Bad extends Base {\n  constructor() {}\n}\n\nnew Good();\nnew AlsoGood();\nnew Bad(); // ReferenceError","position":{"start":{"line":94,"column":1,"offset":4077},"end":{"line":107,"column":33,"offset":4346},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":109,"column":4,"offset":4351},"end":{"line":109,"column":12,"offset":4359},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4348},"end":{"line":109,"column":12,"offset":4359},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this in function contexts","position":{"start":{"line":111,"column":5,"offset":4365},"end":{"line":111,"column":30,"offset":4390},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4361},"end":{"line":111,"column":30,"offset":4390},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// An object can be passed as the first argument to call or apply and this will be bound to it.\nvar obj = {a: 'Custom'};\n\n// We declare a variable and the variable is assigned to the global window as its property.\nvar a = 'Global';\n\nfunction whatsThis() {\n  return this.a;  // The value of this is dependent on how the function is called\n}\n\nwhatsThis();          // 'Global' as this in the function isn't set, so it defaults to the global/window object\nwhatsThis.call(obj);  // 'Custom' as this in the function is set to obj\nwhatsThis.apply(obj); // 'Custom' as this in the function is set to obj","position":{"start":{"line":113,"column":1,"offset":4392},"end":{"line":125,"column":76,"offset":5028},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this and object conversion","position":{"start":{"line":127,"column":5,"offset":5034},"end":{"line":127,"column":31,"offset":5060},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5030},"end":{"line":127,"column":31,"offset":5060},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function add(c, d) {\n  return this.a + this.b + c + d;\n}\n\nvar o = {a: 1, b: 3};\n\n// The first parameter is the object to use as\n// 'this', subsequent parameters are passed as\n// arguments in the function call\nadd.call(o, 5, 7); // 16\n\n// The first parameter is the object to use as\n// 'this', the second is an array whose\n// members are used as the arguments in the function call\nadd.apply(o, [10, 20]); // 34","position":{"start":{"line":129,"column":1,"offset":5062},"end":{"line":143,"column":34,"offset":5519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that in non-strict mode, with ","position":{"start":{"line":145,"column":1,"offset":5521},"end":{"line":145,"column":36,"offset":5556},"indent":[]}},{"type":"inlineCode","value":"call","position":{"start":{"line":145,"column":36,"offset":5556},"end":{"line":145,"column":42,"offset":5562},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":145,"column":42,"offset":5562},"end":{"line":145,"column":47,"offset":5567},"indent":[]}},{"type":"inlineCode","value":"apply","position":{"start":{"line":145,"column":47,"offset":5567},"end":{"line":145,"column":54,"offset":5574},"indent":[]}},{"type":"text","value":", if the value passed as ","position":{"start":{"line":145,"column":54,"offset":5574},"end":{"line":145,"column":79,"offset":5599},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":145,"column":79,"offset":5599},"end":{"line":145,"column":85,"offset":5605},"indent":[]}},{"type":"text","value":" is not an object, an attempt will be made to convert it to an object. Values ","position":{"start":{"line":145,"column":85,"offset":5605},"end":{"line":145,"column":163,"offset":5683},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":145,"column":163,"offset":5683},"end":{"line":145,"column":169,"offset":5689},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":145,"column":169,"offset":5689},"end":{"line":145,"column":174,"offset":5694},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":145,"column":174,"offset":5694},"end":{"line":145,"column":185,"offset":5705},"indent":[]}},{"type":"text","value":" become the global object. Primitives like ","position":{"start":{"line":145,"column":185,"offset":5705},"end":{"line":145,"column":228,"offset":5748},"indent":[]}},{"type":"inlineCode","value":"7","position":{"start":{"line":145,"column":228,"offset":5748},"end":{"line":145,"column":231,"offset":5751},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":145,"column":231,"offset":5751},"end":{"line":145,"column":235,"offset":5755},"indent":[]}},{"type":"inlineCode","value":"'foo'","position":{"start":{"line":145,"column":235,"offset":5755},"end":{"line":145,"column":242,"offset":5762},"indent":[]}},{"type":"text","value":" will be converted to an Object using the related constructor, so the primitive number ","position":{"start":{"line":145,"column":242,"offset":5762},"end":{"line":145,"column":329,"offset":5849},"indent":[]}},{"type":"inlineCode","value":"7","position":{"start":{"line":145,"column":329,"offset":5849},"end":{"line":145,"column":332,"offset":5852},"indent":[]}},{"type":"text","value":" is converted to an object as if by ","position":{"start":{"line":145,"column":332,"offset":5852},"end":{"line":145,"column":368,"offset":5888},"indent":[]}},{"type":"inlineCode","value":"new Number(7)","position":{"start":{"line":145,"column":368,"offset":5888},"end":{"line":145,"column":383,"offset":5903},"indent":[]}},{"type":"text","value":" and the string ","position":{"start":{"line":145,"column":383,"offset":5903},"end":{"line":145,"column":399,"offset":5919},"indent":[]}},{"type":"inlineCode","value":"'foo'","position":{"start":{"line":145,"column":399,"offset":5919},"end":{"line":145,"column":406,"offset":5926},"indent":[]}},{"type":"text","value":" to an object as if by ","position":{"start":{"line":145,"column":406,"offset":5926},"end":{"line":145,"column":429,"offset":5949},"indent":[]}},{"type":"inlineCode","value":"new String('foo')","position":{"start":{"line":145,"column":429,"offset":5949},"end":{"line":145,"column":448,"offset":5968},"indent":[]}},{"type":"text","value":", e.g.","position":{"start":{"line":145,"column":448,"offset":5968},"end":{"line":145,"column":454,"offset":5974},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":5521},"end":{"line":145,"column":454,"offset":5974},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function bar() {\n  console.log(Object.prototype.toString.call(this));\n}\n\nbar.call(7);     // [object Number]\nbar.call('foo'); // [object String]\nbar.call(undefined); // [object global]","position":{"start":{"line":147,"column":1,"offset":5976},"end":{"line":153,"column":44,"offset":6184},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The ","position":{"start":{"line":155,"column":5,"offset":6190},"end":{"line":155,"column":9,"offset":6194},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":155,"column":9,"offset":6194},"end":{"line":155,"column":15,"offset":6200},"indent":[]}},{"type":"text","value":" method","position":{"start":{"line":155,"column":15,"offset":6200},"end":{"line":155,"column":22,"offset":6207},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":6186},"end":{"line":155,"column":22,"offset":6207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ECMAScript 5 introduced ","position":{"start":{"line":157,"column":1,"offset":6209},"end":{"line":157,"column":25,"offset":6233},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/bind","children":[{"type":"inlineCode","value":"Function.prototype.bind()","position":{"start":{"line":157,"column":26,"offset":6234},"end":{"line":157,"column":53,"offset":6261},"indent":[]}}],"position":{"start":{"line":157,"column":25,"offset":6233},"end":{"line":157,"column":87,"offset":6295},"indent":[]}},{"type":"text","value":". Calling ","position":{"start":{"line":157,"column":87,"offset":6295},"end":{"line":157,"column":97,"offset":6305},"indent":[]}},{"type":"inlineCode","value":"f.bind(someObject)","position":{"start":{"line":157,"column":97,"offset":6305},"end":{"line":157,"column":117,"offset":6325},"indent":[]}},{"type":"text","value":" creates a new function with the same body and scope as ","position":{"start":{"line":157,"column":117,"offset":6325},"end":{"line":157,"column":173,"offset":6381},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":157,"column":173,"offset":6381},"end":{"line":157,"column":176,"offset":6384},"indent":[]}},{"type":"text","value":", but where ","position":{"start":{"line":157,"column":176,"offset":6384},"end":{"line":157,"column":188,"offset":6396},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":157,"column":188,"offset":6396},"end":{"line":157,"column":194,"offset":6402},"indent":[]}},{"type":"text","value":" occurs in the original function, in the new function it is permanently bound to the first argument of ","position":{"start":{"line":157,"column":194,"offset":6402},"end":{"line":157,"column":297,"offset":6505},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":157,"column":297,"offset":6505},"end":{"line":157,"column":303,"offset":6511},"indent":[]}},{"type":"text","value":", regardless of how the function is being used.","position":{"start":{"line":157,"column":303,"offset":6511},"end":{"line":157,"column":350,"offset":6558},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":6209},"end":{"line":157,"column":350,"offset":6558},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f() {\n  return this.a;\n}\n\nvar g = f.bind({a: 'azerty'});\nconsole.log(g()); // azerty\n\nvar h = g.bind({a: 'yoo'}); // bind only works once!\nconsole.log(h()); // azerty\n\nvar o = {a: 37, f: f, g: g, h: h};\nconsole.log(o.a, o.f(), o.g(), o.h()); // 37,37, azerty, azerty","position":{"start":{"line":159,"column":1,"offset":6560},"end":{"line":170,"column":68,"offset":6871},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":172,"column":5,"offset":6877},"end":{"line":172,"column":20,"offset":6892},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":6873},"end":{"line":172,"column":20,"offset":6892},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":174,"column":1,"offset":6894},"end":{"line":174,"column":4,"offset":6897},"indent":[]}},{"type":"link","title":null,"url":"../functions/arrow_functions","children":[{"type":"text","value":"arrow functions","position":{"start":{"line":174,"column":5,"offset":6898},"end":{"line":174,"column":20,"offset":6913},"indent":[]}}],"position":{"start":{"line":174,"column":4,"offset":6897},"end":{"line":174,"column":51,"offset":6944},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":174,"column":51,"offset":6944},"end":{"line":174,"column":53,"offset":6946},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":174,"column":53,"offset":6946},"end":{"line":174,"column":59,"offset":6952},"indent":[]}},{"type":"text","value":" retains the value of the enclosing lexical context's ","position":{"start":{"line":174,"column":59,"offset":6952},"end":{"line":174,"column":113,"offset":7006},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":174,"column":113,"offset":7006},"end":{"line":174,"column":119,"offset":7012},"indent":[]}},{"type":"text","value":". In global code, it will be set to the global object:","position":{"start":{"line":174,"column":119,"offset":7012},"end":{"line":174,"column":173,"offset":7066},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":6894},"end":{"line":174,"column":173,"offset":7066},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var globalObject = this;\nvar foo = (() => this);\nconsole.log(foo() === globalObject); // true","position":{"start":{"line":176,"column":1,"offset":7068},"end":{"line":178,"column":49,"offset":7173},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":180,"column":3,"offset":7177},"end":{"line":180,"column":8,"offset":7182},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7175},"end":{"line":180,"column":10,"offset":7184},"indent":[]}},{"type":"text","value":" If ","position":{"start":{"line":180,"column":10,"offset":7184},"end":{"line":180,"column":14,"offset":7188},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":180,"column":14,"offset":7188},"end":{"line":180,"column":20,"offset":7194},"indent":[]}},{"type":"text","value":" arg is passed to ","position":{"start":{"line":180,"column":20,"offset":7194},"end":{"line":180,"column":38,"offset":7212},"indent":[]}},{"type":"inlineCode","value":"call","position":{"start":{"line":180,"column":38,"offset":7212},"end":{"line":180,"column":44,"offset":7218},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":180,"column":44,"offset":7218},"end":{"line":180,"column":46,"offset":7220},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":180,"column":46,"offset":7220},"end":{"line":180,"column":52,"offset":7226},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":180,"column":52,"offset":7226},"end":{"line":180,"column":57,"offset":7231},"indent":[]}},{"type":"inlineCode","value":"apply","position":{"start":{"line":180,"column":57,"offset":7231},"end":{"line":180,"column":64,"offset":7238},"indent":[]}},{"type":"text","value":" on invocation of an arrow function it will be ignored. You can still prepend arguments to the call, but the first argument (","position":{"start":{"line":180,"column":64,"offset":7238},"end":{"line":180,"column":189,"offset":7363},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":180,"column":189,"offset":7363},"end":{"line":180,"column":198,"offset":7372},"indent":[]}},{"type":"text","value":") should be set to ","position":{"start":{"line":180,"column":198,"offset":7372},"end":{"line":180,"column":217,"offset":7391},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":180,"column":217,"offset":7391},"end":{"line":180,"column":223,"offset":7397},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":180,"column":223,"offset":7397},"end":{"line":180,"column":224,"offset":7398},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7175},"end":{"line":180,"column":224,"offset":7398},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Call as a method of an object\nvar obj = {func: foo};\nconsole.log(obj.func() === globalObject); // true\n\n// Attempt to set this using call\nconsole.log(foo.call(obj) === globalObject); // true\n\n// Attempt to set this using bind\nfoo = foo.bind(obj);\nconsole.log(foo() === globalObject); // true","position":{"start":{"line":182,"column":1,"offset":7400},"end":{"line":191,"column":49,"offset":7726},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"No matter what, ","position":{"start":{"line":193,"column":1,"offset":7728},"end":{"line":193,"column":17,"offset":7744},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":193,"column":17,"offset":7744},"end":{"line":193,"column":22,"offset":7749},"indent":[]}},{"type":"text","value":"'s ","position":{"start":{"line":193,"column":22,"offset":7749},"end":{"line":193,"column":25,"offset":7752},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":193,"column":25,"offset":7752},"end":{"line":193,"column":31,"offset":7758},"indent":[]}},{"type":"text","value":" is set to what it was when it was created (in the example above, the global object). The same applies to arrow functions created inside other functions: their ","position":{"start":{"line":193,"column":31,"offset":7758},"end":{"line":193,"column":191,"offset":7918},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":193,"column":191,"offset":7918},"end":{"line":193,"column":197,"offset":7924},"indent":[]}},{"type":"text","value":" remains that of the enclosing lexical context.","position":{"start":{"line":193,"column":197,"offset":7924},"end":{"line":193,"column":244,"offset":7971},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":7728},"end":{"line":193,"column":244,"offset":7971},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Create obj with a method bar that returns a function that\n// returns its this. The returned function is created as\n// an arrow function, so its this is permanently bound to the\n// this of its enclosing function. The value of bar can be set\n// in the call, which in turn sets the value of the\n// returned function.\nvar obj = {\n  bar: function() {\n    var x = (() => this);\n    return x;\n  }\n};\n\n// Call bar as a method of obj, setting its this to obj\n// Assign a reference to the returned function to fn\nvar fn = obj.bar();\n\n// Call fn without setting this, would normally default\n// to the global object or undefined in strict mode\nconsole.log(fn() === obj); // true\n\n// But caution if you reference the method of obj without calling it\nvar fn2 = obj.bar;\n// Calling the arrow function's this from inside the bar method()\n// will now return window, because it follows the this from fn2.\nconsole.log(fn2()() == window); // true","position":{"start":{"line":195,"column":1,"offset":7973},"end":{"line":220,"column":44,"offset":8994},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the above, the function (call it anonymous function A) assigned to ","position":{"start":{"line":222,"column":1,"offset":8996},"end":{"line":222,"column":71,"offset":9066},"indent":[]}},{"type":"inlineCode","value":"obj.bar","position":{"start":{"line":222,"column":71,"offset":9066},"end":{"line":222,"column":80,"offset":9075},"indent":[]}},{"type":"text","value":" returns another function (call it anonymous function B) that is created as an arrow function. As a result, function B's ","position":{"start":{"line":222,"column":80,"offset":9075},"end":{"line":222,"column":201,"offset":9196},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":201,"offset":9196},"end":{"line":222,"column":207,"offset":9202},"indent":[]}},{"type":"text","value":" is permanently set to the ","position":{"start":{"line":222,"column":207,"offset":9202},"end":{"line":222,"column":234,"offset":9229},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":234,"offset":9229},"end":{"line":222,"column":240,"offset":9235},"indent":[]}},{"type":"text","value":" of ","position":{"start":{"line":222,"column":240,"offset":9235},"end":{"line":222,"column":244,"offset":9239},"indent":[]}},{"type":"inlineCode","value":"obj.bar","position":{"start":{"line":222,"column":244,"offset":9239},"end":{"line":222,"column":253,"offset":9248},"indent":[]}},{"type":"text","value":" (function A) when called. When the returned function (function B) is called, its ","position":{"start":{"line":222,"column":253,"offset":9248},"end":{"line":222,"column":335,"offset":9330},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":335,"offset":9330},"end":{"line":222,"column":341,"offset":9336},"indent":[]}},{"type":"text","value":" will always be what it was set to initially. In the above code example, function B's ","position":{"start":{"line":222,"column":341,"offset":9336},"end":{"line":222,"column":427,"offset":9422},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":427,"offset":9422},"end":{"line":222,"column":433,"offset":9428},"indent":[]}},{"type":"text","value":" is set to function A's ","position":{"start":{"line":222,"column":433,"offset":9428},"end":{"line":222,"column":457,"offset":9452},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":457,"offset":9452},"end":{"line":222,"column":463,"offset":9458},"indent":[]}},{"type":"text","value":" which is ","position":{"start":{"line":222,"column":463,"offset":9458},"end":{"line":222,"column":473,"offset":9468},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":222,"column":473,"offset":9468},"end":{"line":222,"column":478,"offset":9473},"indent":[]}},{"type":"text","value":", so it remains set to ","position":{"start":{"line":222,"column":478,"offset":9473},"end":{"line":222,"column":501,"offset":9496},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":222,"column":501,"offset":9496},"end":{"line":222,"column":506,"offset":9501},"indent":[]}},{"type":"text","value":" even when called in a manner that would normally set its ","position":{"start":{"line":222,"column":506,"offset":9501},"end":{"line":222,"column":564,"offset":9559},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":222,"column":564,"offset":9559},"end":{"line":222,"column":570,"offset":9565},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":222,"column":570,"offset":9565},"end":{"line":222,"column":574,"offset":9569},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":222,"column":574,"offset":9569},"end":{"line":222,"column":585,"offset":9580},"indent":[]}},{"type":"text","value":" or the global object (or any other method as in the previous example in the global execution context).","position":{"start":{"line":222,"column":585,"offset":9580},"end":{"line":222,"column":688,"offset":9683},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":8996},"end":{"line":222,"column":688,"offset":9683},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As an object method","position":{"start":{"line":224,"column":5,"offset":9689},"end":{"line":224,"column":24,"offset":9708},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":9685},"end":{"line":224,"column":24,"offset":9708},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is called as a method of an object, its ","position":{"start":{"line":226,"column":1,"offset":9710},"end":{"line":226,"column":57,"offset":9766},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":226,"column":57,"offset":9766},"end":{"line":226,"column":63,"offset":9772},"indent":[]}},{"type":"text","value":" is set to the object the method is called on.","position":{"start":{"line":226,"column":63,"offset":9772},"end":{"line":226,"column":109,"offset":9818},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":9710},"end":{"line":226,"column":109,"offset":9818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the following example, when ","position":{"start":{"line":228,"column":1,"offset":9820},"end":{"line":228,"column":32,"offset":9851},"indent":[]}},{"type":"inlineCode","value":"o.f()","position":{"start":{"line":228,"column":32,"offset":9851},"end":{"line":228,"column":39,"offset":9858},"indent":[]}},{"type":"text","value":" is invoked, inside the function ","position":{"start":{"line":228,"column":39,"offset":9858},"end":{"line":228,"column":72,"offset":9891},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":228,"column":72,"offset":9891},"end":{"line":228,"column":78,"offset":9897},"indent":[]}},{"type":"text","value":" is bound to the ","position":{"start":{"line":228,"column":78,"offset":9897},"end":{"line":228,"column":95,"offset":9914},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":228,"column":95,"offset":9914},"end":{"line":228,"column":98,"offset":9917},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":228,"column":98,"offset":9917},"end":{"line":228,"column":106,"offset":9925},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":9820},"end":{"line":228,"column":106,"offset":9925},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {\n  prop: 37,\n  f: function() {\n    return this.prop;\n  }\n};\n\nconsole.log(o.f()); // 37","position":{"start":{"line":230,"column":1,"offset":9927},"end":{"line":237,"column":30,"offset":10050},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that this behavior is not at all affected by how or where the function was defined. In the previous example, we defined the function inline as the ","position":{"start":{"line":239,"column":1,"offset":10052},"end":{"line":239,"column":153,"offset":10204},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":239,"column":153,"offset":10204},"end":{"line":239,"column":156,"offset":10207},"indent":[]}},{"type":"text","value":" member during the definition of ","position":{"start":{"line":239,"column":156,"offset":10207},"end":{"line":239,"column":189,"offset":10240},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":239,"column":189,"offset":10240},"end":{"line":239,"column":192,"offset":10243},"indent":[]}},{"type":"text","value":". However, we could have just as easily defined the function first and later attached it to ","position":{"start":{"line":239,"column":192,"offset":10243},"end":{"line":239,"column":284,"offset":10335},"indent":[]}},{"type":"inlineCode","value":"o.f","position":{"start":{"line":239,"column":284,"offset":10335},"end":{"line":239,"column":289,"offset":10340},"indent":[]}},{"type":"text","value":". Doing so results in the same behavior:","position":{"start":{"line":239,"column":289,"offset":10340},"end":{"line":239,"column":329,"offset":10380},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":10052},"end":{"line":239,"column":329,"offset":10380},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {prop: 37};\n\nfunction independent() {\n  return this.prop;\n}\n\no.f = independent;\n\nconsole.log(o.f()); // 37","position":{"start":{"line":241,"column":1,"offset":10382},"end":{"line":249,"column":30,"offset":10520},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This demonstrates that it matters only that the function was invoked from the ","position":{"start":{"line":251,"column":1,"offset":10522},"end":{"line":251,"column":79,"offset":10600},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":251,"column":79,"offset":10600},"end":{"line":251,"column":82,"offset":10603},"indent":[]}},{"type":"text","value":" member of ","position":{"start":{"line":251,"column":82,"offset":10603},"end":{"line":251,"column":93,"offset":10614},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":251,"column":93,"offset":10614},"end":{"line":251,"column":96,"offset":10617},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":251,"column":96,"offset":10617},"end":{"line":251,"column":97,"offset":10618},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":10522},"end":{"line":251,"column":97,"offset":10618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Similarly, the ","position":{"start":{"line":253,"column":1,"offset":10620},"end":{"line":253,"column":16,"offset":10635},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":253,"column":16,"offset":10635},"end":{"line":253,"column":22,"offset":10641},"indent":[]}},{"type":"text","value":" binding is only affected by the most immediate member reference. In the following example, when we invoke the function, we call it as a method ","position":{"start":{"line":253,"column":22,"offset":10641},"end":{"line":253,"column":166,"offset":10785},"indent":[]}},{"type":"inlineCode","value":"g","position":{"start":{"line":253,"column":166,"offset":10785},"end":{"line":253,"column":169,"offset":10788},"indent":[]}},{"type":"text","value":" of the object ","position":{"start":{"line":253,"column":169,"offset":10788},"end":{"line":253,"column":184,"offset":10803},"indent":[]}},{"type":"inlineCode","value":"o.b","position":{"start":{"line":253,"column":184,"offset":10803},"end":{"line":253,"column":189,"offset":10808},"indent":[]}},{"type":"text","value":". This time during execution, ","position":{"start":{"line":253,"column":189,"offset":10808},"end":{"line":253,"column":219,"offset":10838},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":253,"column":219,"offset":10838},"end":{"line":253,"column":225,"offset":10844},"indent":[]}},{"type":"text","value":" inside the function will refer to ","position":{"start":{"line":253,"column":225,"offset":10844},"end":{"line":253,"column":260,"offset":10879},"indent":[]}},{"type":"inlineCode","value":"o.b","position":{"start":{"line":253,"column":260,"offset":10879},"end":{"line":253,"column":265,"offset":10884},"indent":[]}},{"type":"text","value":". The fact that the object is itself a member of ","position":{"start":{"line":253,"column":265,"offset":10884},"end":{"line":253,"column":314,"offset":10933},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":253,"column":314,"offset":10933},"end":{"line":253,"column":317,"offset":10936},"indent":[]}},{"type":"text","value":" has no consequence; the most immediate reference is all that matters.","position":{"start":{"line":253,"column":317,"offset":10936},"end":{"line":253,"column":387,"offset":11006},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":10620},"end":{"line":253,"column":387,"offset":11006},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"o.b = {g: independent, prop: 42};\nconsole.log(o.b.g()); // 42","position":{"start":{"line":255,"column":1,"offset":11008},"end":{"line":256,"column":32,"offset":11077},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"this","position":{"start":{"line":258,"column":6,"offset":11084},"end":{"line":258,"column":12,"offset":11090},"indent":[]}},{"type":"text","value":" on the object's prototype chain","position":{"start":{"line":258,"column":12,"offset":11090},"end":{"line":258,"column":44,"offset":11122},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":11079},"end":{"line":258,"column":44,"offset":11122},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The same notion holds true for methods defined somewhere on the object's prototype chain. If the method is on an object's prototype chain, ","position":{"start":{"line":260,"column":1,"offset":11124},"end":{"line":260,"column":140,"offset":11263},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":260,"column":140,"offset":11263},"end":{"line":260,"column":146,"offset":11269},"indent":[]}},{"type":"text","value":" refers to the object the method was called on, as if the method were on the object.","position":{"start":{"line":260,"column":146,"offset":11269},"end":{"line":260,"column":230,"offset":11353},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":11124},"end":{"line":260,"column":230,"offset":11353},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {f: function() { return this.a + this.b; }};\nvar p = Object.create(o);\np.a = 1;\np.b = 4;\n\nconsole.log(p.f()); // 5","position":{"start":{"line":262,"column":1,"offset":11355},"end":{"line":267,"column":29,"offset":11497},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, the object assigned to the variable ","position":{"start":{"line":269,"column":1,"offset":11499},"end":{"line":269,"column":54,"offset":11552},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":269,"column":54,"offset":11552},"end":{"line":269,"column":57,"offset":11555},"indent":[]}},{"type":"text","value":" doesn't have its own ","position":{"start":{"line":269,"column":57,"offset":11555},"end":{"line":269,"column":79,"offset":11577},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":269,"column":79,"offset":11577},"end":{"line":269,"column":82,"offset":11580},"indent":[]}},{"type":"text","value":" property, it inherits it from its prototype. But it doesn't matter that the lookup for ","position":{"start":{"line":269,"column":82,"offset":11580},"end":{"line":269,"column":170,"offset":11668},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":269,"column":170,"offset":11668},"end":{"line":269,"column":173,"offset":11671},"indent":[]}},{"type":"text","value":" eventually finds a member with that name on ","position":{"start":{"line":269,"column":173,"offset":11671},"end":{"line":269,"column":218,"offset":11716},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":269,"column":218,"offset":11716},"end":{"line":269,"column":221,"offset":11719},"indent":[]}},{"type":"text","value":"; the lookup began as a reference to ","position":{"start":{"line":269,"column":221,"offset":11719},"end":{"line":269,"column":258,"offset":11756},"indent":[]}},{"type":"inlineCode","value":"p.f","position":{"start":{"line":269,"column":258,"offset":11756},"end":{"line":269,"column":263,"offset":11761},"indent":[]}},{"type":"text","value":", so ","position":{"start":{"line":269,"column":263,"offset":11761},"end":{"line":269,"column":268,"offset":11766},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":269,"column":268,"offset":11766},"end":{"line":269,"column":274,"offset":11772},"indent":[]}},{"type":"text","value":" inside the function takes the value of the object referred to as ","position":{"start":{"line":269,"column":274,"offset":11772},"end":{"line":269,"column":340,"offset":11838},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":269,"column":340,"offset":11838},"end":{"line":269,"column":343,"offset":11841},"indent":[]}},{"type":"text","value":". That is, since ","position":{"start":{"line":269,"column":343,"offset":11841},"end":{"line":269,"column":360,"offset":11858},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":269,"column":360,"offset":11858},"end":{"line":269,"column":363,"offset":11861},"indent":[]}},{"type":"text","value":" is called as a method of ","position":{"start":{"line":269,"column":363,"offset":11861},"end":{"line":269,"column":389,"offset":11887},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":269,"column":389,"offset":11887},"end":{"line":269,"column":392,"offset":11890},"indent":[]}},{"type":"text","value":", its ","position":{"start":{"line":269,"column":392,"offset":11890},"end":{"line":269,"column":398,"offset":11896},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":269,"column":398,"offset":11896},"end":{"line":269,"column":404,"offset":11902},"indent":[]}},{"type":"text","value":" refers to ","position":{"start":{"line":269,"column":404,"offset":11902},"end":{"line":269,"column":415,"offset":11913},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":269,"column":415,"offset":11913},"end":{"line":269,"column":418,"offset":11916},"indent":[]}},{"type":"text","value":". This is an interesting feature of JavaScript's prototype inheritance.","position":{"start":{"line":269,"column":418,"offset":11916},"end":{"line":269,"column":489,"offset":11987},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":11499},"end":{"line":269,"column":489,"offset":11987},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"this","position":{"start":{"line":271,"column":6,"offset":11994},"end":{"line":271,"column":12,"offset":12000},"indent":[]}},{"type":"text","value":" with a getter or setter","position":{"start":{"line":271,"column":12,"offset":12000},"end":{"line":271,"column":36,"offset":12024},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":11989},"end":{"line":271,"column":36,"offset":12024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, the same notion holds true when a function is invoked from a getter or a setter. A function used as getter or setter has its ","position":{"start":{"line":273,"column":1,"offset":12026},"end":{"line":273,"column":133,"offset":12158},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":273,"column":133,"offset":12158},"end":{"line":273,"column":139,"offset":12164},"indent":[]}},{"type":"text","value":" bound to the object from which the property is being set or gotten.","position":{"start":{"line":273,"column":139,"offset":12164},"end":{"line":273,"column":207,"offset":12232},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":12026},"end":{"line":273,"column":207,"offset":12232},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function sum() {\n  return this.a + this.b + this.c;\n}\n\nvar o = {\n  a: 1,\n  b: 2,\n  c: 3,\n  get average() {\n    return (this.a + this.b + this.c) / 3;\n  }\n};\n\nObject.defineProperty(o, 'sum', {\n    get: sum, enumerable: true, configurable: true});\n\nconsole.log(o.average, o.sum); // 2, 6","position":{"start":{"line":275,"column":1,"offset":12234},"end":{"line":291,"column":43,"offset":12575},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As a constructor","position":{"start":{"line":293,"column":5,"offset":12581},"end":{"line":293,"column":21,"offset":12597},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":12577},"end":{"line":293,"column":21,"offset":12597},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is used as a constructor (with the ","position":{"start":{"line":295,"column":1,"offset":12599},"end":{"line":295,"column":52,"offset":12650},"indent":[]}},{"type":"link","title":null,"url":"new","children":[{"type":"inlineCode","value":"new","position":{"start":{"line":295,"column":53,"offset":12651},"end":{"line":295,"column":58,"offset":12656},"indent":[]}}],"position":{"start":{"line":295,"column":52,"offset":12650},"end":{"line":295,"column":64,"offset":12662},"indent":[]}},{"type":"text","value":" keyword), its ","position":{"start":{"line":295,"column":64,"offset":12662},"end":{"line":295,"column":79,"offset":12677},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":295,"column":79,"offset":12677},"end":{"line":295,"column":85,"offset":12683},"indent":[]}},{"type":"text","value":" is bound to the new object being constructed.","position":{"start":{"line":295,"column":85,"offset":12683},"end":{"line":295,"column":131,"offset":12729},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":12599},"end":{"line":295,"column":131,"offset":12729},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":297,"column":3,"offset":12733},"end":{"line":297,"column":8,"offset":12738},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":12731},"end":{"line":297,"column":10,"offset":12740},"indent":[]}},{"type":"text","value":" While the default for a constructor is to return the object referenced by ","position":{"start":{"line":297,"column":10,"offset":12740},"end":{"line":297,"column":85,"offset":12815},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":297,"column":85,"offset":12815},"end":{"line":297,"column":91,"offset":12821},"indent":[]}},{"type":"text","value":", it can instead return some other object (if the return value isn't an object, then the ","position":{"start":{"line":297,"column":91,"offset":12821},"end":{"line":297,"column":180,"offset":12910},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":297,"column":180,"offset":12910},"end":{"line":297,"column":186,"offset":12916},"indent":[]}},{"type":"text","value":" object is returned).","position":{"start":{"line":297,"column":186,"offset":12916},"end":{"line":297,"column":207,"offset":12937},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":12731},"end":{"line":297,"column":207,"offset":12937},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"/*\n * Constructors work like this:\n *\n * function MyConstructor(){\n *   // Actual function body code goes here.\n *   // Create properties on |this| as\n *   // desired by assigning to them.  E.g.,\n *   this.fum = \"nom\";\n *   // et cetera...\n *\n *   // If the function has a return statement that\n *   // returns an object, that object will be the\n *   // result of the |new| expression.  Otherwise,\n *   // the result of the expression is the object\n *   // currently bound to |this|\n *   // (i.e., the common case most usually seen).\n * }\n */\n\nfunction C() {\n  this.a = 37;\n}\n\nvar o = new C();\nconsole.log(o.a); // 37\n\nfunction C2() {\n  this.a = 37;\n  return {a: 38};\n}\n\no = new C2();\nconsole.log(o.a); // 38","position":{"start":{"line":299,"column":1,"offset":12939},"end":{"line":331,"column":28,"offset":13763},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the last example (","position":{"start":{"line":333,"column":1,"offset":13765},"end":{"line":333,"column":22,"offset":13786},"indent":[]}},{"type":"inlineCode","value":"C2","position":{"start":{"line":333,"column":22,"offset":13786},"end":{"line":333,"column":26,"offset":13790},"indent":[]}},{"type":"text","value":"), because an object was returned during construction, the new object that ","position":{"start":{"line":333,"column":26,"offset":13790},"end":{"line":333,"column":101,"offset":13865},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":333,"column":101,"offset":13865},"end":{"line":333,"column":107,"offset":13871},"indent":[]}},{"type":"text","value":" was bound to gets discarded. (This essentially makes the statement \"","position":{"start":{"line":333,"column":107,"offset":13871},"end":{"line":333,"column":176,"offset":13940},"indent":[]}},{"type":"inlineCode","value":"this.a = 37;","position":{"start":{"line":333,"column":176,"offset":13940},"end":{"line":333,"column":190,"offset":13954},"indent":[]}},{"type":"text","value":"\" dead code. It's not exactly dead because it gets executed, but it can be eliminated with no outside effects.)","position":{"start":{"line":333,"column":190,"offset":13954},"end":{"line":333,"column":301,"offset":14065},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":13765},"end":{"line":333,"column":301,"offset":14065},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As a DOM event handler","position":{"start":{"line":335,"column":5,"offset":14071},"end":{"line":335,"column":27,"offset":14093},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":14067},"end":{"line":335,"column":27,"offset":14093},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is used as an event handler, its ","position":{"start":{"line":337,"column":1,"offset":14095},"end":{"line":337,"column":50,"offset":14144},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":337,"column":50,"offset":14144},"end":{"line":337,"column":56,"offset":14150},"indent":[]}},{"type":"text","value":" is set to the element on which the listener is placed (some browsers do not follow this convention for listeners added dynamically with methods other than ","position":{"start":{"line":337,"column":56,"offset":14150},"end":{"line":337,"column":212,"offset":14306},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener","children":[{"type":"inlineCode","value":"addEventListener()","position":{"start":{"line":337,"column":213,"offset":14307},"end":{"line":337,"column":233,"offset":14327},"indent":[]}}],"position":{"start":{"line":337,"column":212,"offset":14306},"end":{"line":337,"column":313,"offset":14407},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":337,"column":313,"offset":14407},"end":{"line":337,"column":315,"offset":14409},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":14095},"end":{"line":337,"column":315,"offset":14409},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// When called as a listener, turns the related element blue\nfunction bluify(e) {\n  // Always true\n  console.log(this === e.currentTarget);\n  // true when currentTarget and target are the same object\n  console.log(this === e.target);\n  this.style.backgroundColor = '#A5D9F3';\n}\n\n// Get a list of every element in the document\nvar elements = document.getElementsByTagName('*');\n\n// Add bluify as a click listener so when the\n// element is clicked on, it turns blue\nfor (var i = 0; i < elements.length; i++) {\n  elements[i].addEventListener('click', bluify, false);\n}","position":{"start":{"line":339,"column":1,"offset":14411},"end":{"line":355,"column":6,"offset":15036},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"In an inline event handler","position":{"start":{"line":357,"column":5,"offset":15042},"end":{"line":357,"column":31,"offset":15068},"indent":[]}}],"position":{"start":{"line":357,"column":1,"offset":15038},"end":{"line":357,"column":31,"offset":15068},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the code is called from an inline ","position":{"start":{"line":359,"column":1,"offset":15070},"end":{"line":359,"column":40,"offset":15109},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/Events/Event_handlers","children":[{"type":"text","value":"on-event handler","position":{"start":{"line":359,"column":41,"offset":15110},"end":{"line":359,"column":57,"offset":15126},"indent":[]}}],"position":{"start":{"line":359,"column":40,"offset":15109},"end":{"line":359,"column":126,"offset":15195},"indent":[]}},{"type":"text","value":", its ","position":{"start":{"line":359,"column":126,"offset":15195},"end":{"line":359,"column":132,"offset":15201},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":359,"column":132,"offset":15201},"end":{"line":359,"column":138,"offset":15207},"indent":[]}},{"type":"text","value":" is set to the DOM element on which the listener is placed:","position":{"start":{"line":359,"column":138,"offset":15207},"end":{"line":359,"column":197,"offset":15266},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":15070},"end":{"line":359,"column":197,"offset":15266},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<button onclick=\"alert(this.tagName.toLowerCase());\">\n  Show this\n</button>","position":{"start":{"line":361,"column":1,"offset":15268},"end":{"line":363,"column":14,"offset":15355},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The above alert shows ","position":{"start":{"line":365,"column":1,"offset":15357},"end":{"line":365,"column":23,"offset":15379},"indent":[]}},{"type":"inlineCode","value":"button","position":{"start":{"line":365,"column":23,"offset":15379},"end":{"line":365,"column":31,"offset":15387},"indent":[]}},{"type":"text","value":". Note however that only the outer code has its ","position":{"start":{"line":365,"column":31,"offset":15387},"end":{"line":365,"column":79,"offset":15435},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":365,"column":79,"offset":15435},"end":{"line":365,"column":85,"offset":15441},"indent":[]}},{"type":"text","value":" set this way:","position":{"start":{"line":365,"column":85,"offset":15441},"end":{"line":365,"column":99,"offset":15455},"indent":[]}}],"position":{"start":{"line":365,"column":1,"offset":15357},"end":{"line":365,"column":99,"offset":15455},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<button onclick=\"alert((function() { return this; })());\">\n  Show inner this\n</button>","position":{"start":{"line":367,"column":1,"offset":15457},"end":{"line":369,"column":14,"offset":15555},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, the inner function's ","position":{"start":{"line":371,"column":1,"offset":15557},"end":{"line":371,"column":36,"offset":15592},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":371,"column":36,"offset":15592},"end":{"line":371,"column":42,"offset":15598},"indent":[]}},{"type":"text","value":" isn't set so it returns the global/window object (i.e. the default object in non-strict mode where ","position":{"start":{"line":371,"column":42,"offset":15598},"end":{"line":371,"column":142,"offset":15698},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":371,"column":142,"offset":15698},"end":{"line":371,"column":148,"offset":15704},"indent":[]}},{"type":"text","value":" isn't set by the call).","position":{"start":{"line":371,"column":148,"offset":15704},"end":{"line":371,"column":172,"offset":15728},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":15557},"end":{"line":371,"column":172,"offset":15728},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this in classes","position":{"start":{"line":373,"column":5,"offset":15734},"end":{"line":373,"column":20,"offset":15749},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":15730},"end":{"line":373,"column":20,"offset":15749},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like with regular functions, the value of ","position":{"start":{"line":375,"column":1,"offset":15751},"end":{"line":375,"column":48,"offset":15798},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":375,"column":48,"offset":15798},"end":{"line":375,"column":54,"offset":15804},"indent":[]}},{"type":"text","value":" within methods depends on how they are called. Sometimes it is useful to override this behavior so that ","position":{"start":{"line":375,"column":54,"offset":15804},"end":{"line":375,"column":159,"offset":15909},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":375,"column":159,"offset":15909},"end":{"line":375,"column":165,"offset":15915},"indent":[]}},{"type":"text","value":" within classes always refers to the class instance. To achieve this, bind the class methods in the constructor:","position":{"start":{"line":375,"column":165,"offset":15915},"end":{"line":375,"column":277,"offset":16027},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":15751},"end":{"line":375,"column":277,"offset":16027},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Car {\n  constructor() {\n    // Bind sayBye but not sayHi to show the difference\n    this.sayBye = this.sayBye.bind(this);\n  }\n  sayHi() {\n    console.log(`Hello from ${this.name}`);\n  }\n  sayBye() {\n    console.log(`Bye from ${this.name}`);\n  }\n  get name() {\n    return 'Ferrari';\n  }\n}\n\nclass Bird {\n  get name() {\n    return 'Tweety';\n  }\n}\n\nconst car = new Car();\nconst bird = new Bird();\n\n// The value of 'this' in methods depends on their caller\ncar.sayHi(); // Hello from Ferrari\nbird.sayHi = car.sayHi;\nbird.sayHi(); // Hello from Tweety\n\n// For bound methods, 'this' doesn't depend on the caller\nbird.sayBye = car.sayBye;\nbird.sayBye();  // Bye from Ferrari","position":{"start":{"line":377,"column":1,"offset":16029},"end":{"line":409,"column":40,"offset":16817},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":411,"column":3,"offset":16821},"end":{"line":411,"column":8,"offset":16826},"indent":[]}}],"position":{"start":{"line":411,"column":1,"offset":16819},"end":{"line":411,"column":10,"offset":16828},"indent":[]}},{"type":"text","value":" Classes are always strict mode code. Calling methods with an undefined ","position":{"start":{"line":411,"column":10,"offset":16828},"end":{"line":411,"column":82,"offset":16900},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":411,"column":82,"offset":16900},"end":{"line":411,"column":88,"offset":16906},"indent":[]}},{"type":"text","value":" will throw an error.","position":{"start":{"line":411,"column":88,"offset":16906},"end":{"line":411,"column":109,"offset":16927},"indent":[]}}],"position":{"start":{"line":411,"column":1,"offset":16819},"end":{"line":411,"column":109,"offset":16927},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":412,"column":1,"offset":16928}}}}