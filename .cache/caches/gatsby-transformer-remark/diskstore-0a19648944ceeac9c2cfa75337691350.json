{"expireTime":9007200914465210000,"key":"transformer-remark-markdown-html-ast-19c9ecad3ac7f61661ea4ebb544d5a7c--","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Data structures","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<br>","position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":5,"offset":22}}},{"type":"element","tagName":"a","properties":{"href":"https://ds-unit-5-lambda.netlify.app/#"},"children":[{"type":"text","value":"https://ds-unit-5-lambda.netlify.app/#","position":{"start":{"line":4,"column":5,"offset":22},"end":{"line":4,"column":43,"offset":60}}}],"position":{"start":{"line":4,"column":5,"offset":22},"end":{"line":4,"column":43,"offset":60}}},{"type":"text","value":".\n","position":{"start":{"line":4,"column":43,"offset":60},"end":{"line":5,"column":1,"offset":62}}},{"type":"raw","value":"<br>","position":{"start":{"line":5,"column":1,"offset":62},"end":{"line":5,"column":5,"offset":66}}},{"type":"text","value":"\n","position":{"start":{"line":5,"column":5,"offset":66},"end":{"line":6,"column":1,"offset":67}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":1,"offset":67},"end":{"line":6,"column":5,"offset":71}}},{"type":"text","value":"\n","position":{"start":{"line":6,"column":5,"offset":71},"end":{"line":7,"column":1,"offset":72}}},{"type":"raw","value":"<br>","position":{"start":{"line":7,"column":1,"offset":72},"end":{"line":7,"column":5,"offset":76}}}],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":7,"column":5,"offset":76}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>   Algorithms </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz-branch-the-algos.vercel.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":9,"column":1,"offset":78},"end":{"line":16,"column":5,"offset":483}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>  The Algos Bgoonz Branch </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://thealgorithms.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":18,"column":1,"offset":485},"end":{"line":26,"column":5,"offset":898}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":28,"column":1,"offset":900},"end":{"line":31,"column":5,"offset":919}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>","position":{"start":{"line":33,"column":1,"offset":921},"end":{"line":35,"column":5,"offset":935}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h1>  Python Data Structures</h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://ds-unit-5-lambda.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":37,"column":1,"offset":937},"end":{"line":47,"column":5,"offset":1361}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>","position":{"start":{"line":49,"column":1,"offset":1363},"end":{"line":52,"column":5,"offset":1382}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<br>\n<h1>   Leetcode </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz.github.io/Leetcode-JS-PY-MD/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":54,"column":1,"offset":1384},"end":{"line":65,"column":5,"offset":1807}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<br>\n<br>\n<h1>   Algorithms </h1>\n<br>\n<iframe style=\"resize:both; overflow:scroll;\"  sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"     style=\"z-index:-1!important; overflow:scroll;resize:both;\"  src=\"https://bgoonz-branch-the-algos.vercel.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" >\n</iframe>\n<br>\n<br>\n<br>\n<br>","position":{"start":{"line":67,"column":1,"offset":1809},"end":{"line":77,"column":5,"offset":2229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Data structures in JavaScript","position":{"start":{"line":79,"column":5,"offset":2235},"end":{"line":79,"column":34,"offset":2264}}}],"position":{"start":{"line":79,"column":1,"offset":2231},"end":{"line":79,"column":34,"offset":2264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":81,"column":1,"offset":2266},"end":{"line":81,"column":28,"offset":2293}}},{"type":"text","value":"H","position":{"start":{"line":81,"column":28,"offset":2293},"end":{"line":81,"column":29,"offset":2294}}},{"type":"raw","value":"</span>","position":{"start":{"line":81,"column":29,"offset":2294},"end":{"line":81,"column":36,"offset":2301}}},{"type":"text","value":"ere's a website I created to practice data structures!","position":{"start":{"line":81,"column":36,"offset":2301},"end":{"line":81,"column":90,"offset":2355}}}],"position":{"start":{"line":81,"column":1,"offset":2266},"end":{"line":81,"column":90,"offset":2355}}},{"type":"text","value":"\n"},{"type":"raw","value":"<a href=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\">\n<strong>directory</strong>\n<br />\n<em>Edit description</em>ds-algo-official-c3dw6uapg-bgoonz.vercel.app</a>\n<a href=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\">\n</a>","position":{"start":{"line":83,"column":1,"offset":2357},"end":{"line":88,"column":5,"offset":2783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":90,"column":1,"offset":2785},"end":{"line":90,"column":28,"offset":2812}}},{"type":"text","value":"H","position":{"start":{"line":90,"column":28,"offset":2812},"end":{"line":90,"column":29,"offset":2813}}},{"type":"raw","value":"</span>","position":{"start":{"line":90,"column":29,"offset":2813},"end":{"line":90,"column":36,"offset":2820}}},{"type":"text","value":"ere's the repo that the website is built on:","position":{"start":{"line":90,"column":36,"offset":2820},"end":{"line":90,"column":80,"offset":2864}}}],"position":{"start":{"line":90,"column":1,"offset":2785},"end":{"line":90,"column":80,"offset":2864}}},{"type":"text","value":"\n"},{"type":"raw","value":"<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\">\n<strong>bgoonz/DS-ALGO-OFFICIAL</strong>\n<br />\n<em>Navigation ####Author:Bryan Guner Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a>\n<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\">\n</a>","position":{"start":{"line":92,"column":1,"offset":2866},"end":{"line":97,"column":5,"offset":3321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<span class=\"graf-dropCap\">","position":{"start":{"line":99,"column":1,"offset":3323},"end":{"line":99,"column":28,"offset":3350}}},{"type":"text","value":"H","position":{"start":{"line":99,"column":28,"offset":3350},"end":{"line":99,"column":29,"offset":3351}}},{"type":"raw","value":"</span>","position":{"start":{"line":99,"column":29,"offset":3351},"end":{"line":99,"column":36,"offset":3358}}},{"type":"text","value":"ere's a live code editor where you can mess with any of the examples…","position":{"start":{"line":99,"column":36,"offset":3358},"end":{"line":99,"column":105,"offset":3427}}}],"position":{"start":{"line":99,"column":1,"offset":3323},"end":{"line":99,"column":105,"offset":3427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Resources (article content below):","position":{"start":{"line":101,"column":5,"offset":3433},"end":{"line":101,"column":39,"offset":3467}}}],"position":{"start":{"line":101,"column":1,"offset":3429},"end":{"line":101,"column":39,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Videos","position":{"start":{"line":103,"column":6,"offset":3474},"end":{"line":103,"column":12,"offset":3480}}}],"position":{"start":{"line":103,"column":1,"offset":3469},"end":{"line":103,"column":12,"offset":3480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"53c4\">\n<a href=\"https://www.youtube.com/watch?v=0IAPZzGSbME&amp;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&amp;index=2&amp;t=0s\" class=\"markup--anchor markup--li-anchor\">Abdul Bari: YouTubeChannel for Algorithms</a>\n</span>","position":{"start":{"line":105,"column":5,"offset":3486},"end":{"line":107,"column":8,"offset":3716}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":3482},"end":{"line":107,"column":8,"offset":3716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"ab93\">\n<a href=\"https://www.youtube.com/watch?v=lxja8wBwN0k&amp;list=PLKKfKV1b9e8ps6dD3QA5KFfHdiWj9cB1s\" class=\"markup--anchor markup--li-anchor\">Data Structures and algorithms</a>\n</span>","position":{"start":{"line":108,"column":5,"offset":3721},"end":{"line":110,"column":8,"offset":3919}}},{"type":"text","value":"\n"}],"position":{"start":{"line":108,"column":1,"offset":3717},"end":{"line":110,"column":8,"offset":3919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e614\">\n<a href=\"https://www.youtube.com/playlist?list=PLmGElG-9wxc9Us6IK6Qy-KHlG_F3IS6Q9\" class=\"markup--anchor markup--li-anchor\">Data Structures and algorithms Course</a>\n</span>","position":{"start":{"line":111,"column":5,"offset":3924},"end":{"line":113,"column":8,"offset":4114}}},{"type":"text","value":"\n"}],"position":{"start":{"line":111,"column":1,"offset":3920},"end":{"line":113,"column":8,"offset":4114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3d48\">\n<a href=\"https://www.khanacademy.org/computing/computer-science/algorithms\" class=\"markup--anchor markup--li-anchor\">Khan Academy</a>\n</span>","position":{"start":{"line":114,"column":5,"offset":4119},"end":{"line":116,"column":8,"offset":4277}}},{"type":"text","value":"\n"}],"position":{"start":{"line":114,"column":1,"offset":4115},"end":{"line":116,"column":8,"offset":4277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"ac90\">\n<a href=\"https://www.youtube.com/playlist?list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P\" class=\"markup--anchor markup--li-anchor\">Data structures by mycodeschool</a>Pre-requisite for this lesson is good understanding of pointers in C.</span>","position":{"start":{"line":117,"column":5,"offset":4282},"end":{"line":118,"column":236,"offset":4534}}},{"type":"text","value":"\n"}],"position":{"start":{"line":117,"column":1,"offset":4278},"end":{"line":118,"column":236,"offset":4534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"9bd9\">\n<a href=\"https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb\" class=\"markup--anchor markup--li-anchor\">MIT 6.006: Intro to Algorithms(2011)</a>\n</span>","position":{"start":{"line":119,"column":5,"offset":4539},"end":{"line":121,"column":8,"offset":4743}}},{"type":"text","value":"\n"}],"position":{"start":{"line":119,"column":1,"offset":4535},"end":{"line":121,"column":8,"offset":4743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"71f0\">\n<a href=\"https://www.youtube.com/watch?v=5_5oE5lgrhw&amp;list=PLu0W_9lII9ahIappRPN0MCAgtOu3lQjQi\" class=\"markup--anchor markup--li-anchor\">Data Structures and Algorithms by Codewithharry</a>\n</span>","position":{"start":{"line":122,"column":5,"offset":4748},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"}],"position":{"start":{"line":122,"column":1,"offset":4744},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"}],"position":{"start":{"line":105,"column":1,"offset":3482},"end":{"line":124,"column":8,"offset":4963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Books","position":{"start":{"line":126,"column":6,"offset":4970},"end":{"line":126,"column":11,"offset":4975}}}],"position":{"start":{"line":126,"column":1,"offset":4965},"end":{"line":126,"column":11,"offset":4975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"2eac\">\n<a href=\"https://edutechlearners.com/download/Introduction_to_algorithms-3rd%20Edition.pdf\" class=\"markup--anchor markup--li-anchor\">Introduction to Algorithms</a> by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein</span>","position":{"start":{"line":128,"column":5,"offset":4981},"end":{"line":129,"column":251,"offset":5248}}},{"type":"text","value":"\n"}],"position":{"start":{"line":128,"column":1,"offset":4977},"end":{"line":129,"column":251,"offset":5248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3e8d\">\n<a href=\"http://www.sso.sy/sites/default/files/competitive%20programming%203_1.pdf\" class=\"markup--anchor markup--li-anchor\">Competitive Programming 3</a> by Steven Halim and Felix Halim</span>","position":{"start":{"line":130,"column":5,"offset":5253},"end":{"line":131,"column":194,"offset":5463}}},{"type":"text","value":"\n"}],"position":{"start":{"line":130,"column":1,"offset":5249},"end":{"line":131,"column":194,"offset":5463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3aa3\">\n<a href=\"https://cses.fi/book/book.pdf\" class=\"markup--anchor markup--li-anchor\">Competitive Programmers Hand Book</a> Beginner friendly hand book for competitive programmers.</span>","position":{"start":{"line":132,"column":5,"offset":5468},"end":{"line":133,"column":183,"offset":5667}}},{"type":"text","value":"\n"}],"position":{"start":{"line":132,"column":1,"offset":5464},"end":{"line":133,"column":183,"offset":5667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"3c02\">\n<a href=\"https://github.com/Amchuz/My-Data-Structures-and-Algorithms-Resources/raw/master/Books/Data%20Structures%20and%20Algorithms%20-%20Narasimha%20Karumanchi.pdf\" class=\"markup--anchor markup--li-anchor\">Data Structures and Algorithms Made Easy</a> by Narasimha Karumanchi</span>","position":{"start":{"line":134,"column":5,"offset":5672},"end":{"line":135,"column":284,"offset":5972}}},{"type":"text","value":"\n"}],"position":{"start":{"line":134,"column":1,"offset":5668},"end":{"line":135,"column":284,"offset":5972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"93ec\">\n<a href=\"https://github.com/Amchuz/My-Data-Structures-and-Algorithms-Resources/raw/master/Books/Learning%20Algorithms%20Through%20Programming%20and%20Puzzle%20Solving.pdf\" class=\"markup--anchor markup--li-anchor\">Learning Algorithms Through Programming and Puzzle Solving</a> by Alexander Kulikov and Pavel Pevzner</span>","position":{"start":{"line":136,"column":5,"offset":5977},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":136,"column":1,"offset":5973},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":128,"column":1,"offset":4977},"end":{"line":137,"column":322,"offset":6315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Coding practice","position":{"start":{"line":139,"column":6,"offset":6322},"end":{"line":139,"column":21,"offset":6337}}}],"position":{"start":{"line":139,"column":1,"offset":6317},"end":{"line":139,"column":21,"offset":6337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"824c\">\n<a href=\"https://leetcode.com/\" class=\"markup--anchor markup--li-anchor\">LeetCode</a>\n</span>","position":{"start":{"line":141,"column":5,"offset":6343},"end":{"line":143,"column":8,"offset":6453}}},{"type":"text","value":"\n"}],"position":{"start":{"line":141,"column":1,"offset":6339},"end":{"line":143,"column":8,"offset":6453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a528\">\n<a href=\"https://www.interviewbit.com/\" class=\"markup--anchor markup--li-anchor\">InterviewBit</a>\n</span>","position":{"start":{"line":144,"column":5,"offset":6458},"end":{"line":146,"column":8,"offset":6580}}},{"type":"text","value":"\n"}],"position":{"start":{"line":144,"column":1,"offset":6454},"end":{"line":146,"column":8,"offset":6580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"fa41\">\n<a href=\"https://codility.com/\" class=\"markup--anchor markup--li-anchor\">Codility</a>\n</span>","position":{"start":{"line":147,"column":5,"offset":6585},"end":{"line":149,"column":8,"offset":6695}}},{"type":"text","value":"\n"}],"position":{"start":{"line":147,"column":1,"offset":6581},"end":{"line":149,"column":8,"offset":6695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"6c61\">\n<a href=\"https://www.hackerrank.com/\" class=\"markup--anchor markup--li-anchor\">HackerRank</a>\n</span>","position":{"start":{"line":150,"column":5,"offset":6700},"end":{"line":152,"column":8,"offset":6818}}},{"type":"text","value":"\n"}],"position":{"start":{"line":150,"column":1,"offset":6696},"end":{"line":152,"column":8,"offset":6818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"dff6\">\n<a href=\"https://projecteuler.net/\" class=\"markup--anchor markup--li-anchor\">Project Euler</a>\n</span>","position":{"start":{"line":153,"column":5,"offset":6823},"end":{"line":155,"column":8,"offset":6942}}},{"type":"text","value":"\n"}],"position":{"start":{"line":153,"column":1,"offset":6819},"end":{"line":155,"column":8,"offset":6942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"b2dd\">\n<a href=\"https://spoj.com/\" class=\"markup--anchor markup--li-anchor\">Spoj</a>\n</span>","position":{"start":{"line":156,"column":5,"offset":6947},"end":{"line":158,"column":8,"offset":7049}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":6943},"end":{"line":158,"column":8,"offset":7049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"c8e8\">\n<a href=\"https://code.google.com/codejam/contests.html\" class=\"markup--anchor markup--li-anchor\">Google Code Jam practice problems</a>\n</span>","position":{"start":{"line":159,"column":5,"offset":7054},"end":{"line":161,"column":8,"offset":7213}}},{"type":"text","value":"\n"}],"position":{"start":{"line":159,"column":1,"offset":7050},"end":{"line":161,"column":8,"offset":7213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e8bb\">\n<a href=\"https://www.hackerearth.com/\" class=\"markup--anchor markup--li-anchor\">HackerEarth</a>\n</span>","position":{"start":{"line":162,"column":5,"offset":7218},"end":{"line":164,"column":8,"offset":7338}}},{"type":"text","value":"\n"}],"position":{"start":{"line":162,"column":1,"offset":7214},"end":{"line":164,"column":8,"offset":7338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e803\">\n<a href=\"https://www.topcoder.com/\" class=\"markup--anchor markup--li-anchor\">Top Coder</a>\n</span>","position":{"start":{"line":165,"column":5,"offset":7343},"end":{"line":167,"column":8,"offset":7458}}},{"type":"text","value":"\n"}],"position":{"start":{"line":165,"column":1,"offset":7339},"end":{"line":167,"column":8,"offset":7458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"294e\">\n<a href=\"https://www.codechef.com/\" class=\"markup--anchor markup--li-anchor\">CodeChef</a>\n</span>","position":{"start":{"line":168,"column":5,"offset":7463},"end":{"line":170,"column":8,"offset":7577}}},{"type":"text","value":"\n"}],"position":{"start":{"line":168,"column":1,"offset":7459},"end":{"line":170,"column":8,"offset":7577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"9c05\">\n<a href=\"https://www.codewars.com/\" class=\"markup--anchor markup--li-anchor\">Codewars</a>\n</span>","position":{"start":{"line":171,"column":5,"offset":7582},"end":{"line":173,"column":8,"offset":7696}}},{"type":"text","value":"\n"}],"position":{"start":{"line":171,"column":1,"offset":7578},"end":{"line":173,"column":8,"offset":7696}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"356e\">\n<a href=\"https://codesignal.com/\" class=\"markup--anchor markup--li-anchor\">CodeSignal</a>\n</span>","position":{"start":{"line":174,"column":5,"offset":7701},"end":{"line":176,"column":8,"offset":7815}}},{"type":"text","value":"\n"}],"position":{"start":{"line":174,"column":1,"offset":7697},"end":{"line":176,"column":8,"offset":7815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"2d20\">\n<a href=\"http://codekata.com/\" class=\"markup--anchor markup--li-anchor\">CodeKata</a>\n</span>","position":{"start":{"line":177,"column":5,"offset":7820},"end":{"line":179,"column":8,"offset":7929}}},{"type":"text","value":"\n"}],"position":{"start":{"line":177,"column":1,"offset":7816},"end":{"line":179,"column":8,"offset":7929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"d3bf\">\n<a href=\"https://www.firecode.io/\" class=\"markup--anchor markup--li-anchor\">Firecode</a>\n</span>","position":{"start":{"line":180,"column":5,"offset":7934},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"}],"position":{"start":{"line":180,"column":1,"offset":7930},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"}],"position":{"start":{"line":141,"column":1,"offset":6339},"end":{"line":182,"column":8,"offset":8047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Courses","position":{"start":{"line":184,"column":6,"offset":8054},"end":{"line":184,"column":13,"offset":8061}}}],"position":{"start":{"line":184,"column":1,"offset":8049},"end":{"line":184,"column":13,"offset":8061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"eac2\">\n<a href=\"https://academy.zerotomastery.io/p/master-the-coding-interview-faang-interview-prep\" class=\"markup--anchor markup--li-anchor\">Master the Coding Interview: Big Tech (FAANG) Interviews</a> Course by Andrei and his team.</span>","position":{"start":{"line":186,"column":5,"offset":8067},"end":{"line":187,"column":234,"offset":8317}}},{"type":"text","value":"\n"}],"position":{"start":{"line":186,"column":1,"offset":8063},"end":{"line":187,"column":234,"offset":8317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"36ca\">\n<a href=\"https://realpython.com/python-data-structures\" class=\"markup--anchor markup--li-anchor\">Common Python Data Structures</a> Data structures are the fundamental constructs around which you build your programs. Each data structure provides a particular way of organizing data so it can be accessed efficiently, depending on your use case. Python ships with an extensive set of data structures in its standard library.</span>","position":{"start":{"line":188,"column":5,"offset":8322},"end":{"line":189,"column":430,"offset":8768}}},{"type":"text","value":"\n"}],"position":{"start":{"line":188,"column":1,"offset":8318},"end":{"line":189,"column":430,"offset":8768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"cdc9\">\n<a href=\"https://www.geeksforgeeks.org/fork-cpp-course-structure\" class=\"markup--anchor markup--li-anchor\">Fork CPP</a> A good course for beginners.</span>","position":{"start":{"line":190,"column":5,"offset":8773},"end":{"line":191,"column":156,"offset":8945}}},{"type":"text","value":"\n"}],"position":{"start":{"line":190,"column":1,"offset":8769},"end":{"line":191,"column":156,"offset":8945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"6d47\">\n<a href=\"https://codeforces.com/edu/course/2\" class=\"markup--anchor markup--li-anchor\">EDU</a> Advanced course.</span>","position":{"start":{"line":192,"column":5,"offset":8950},"end":{"line":193,"column":119,"offset":9085}}},{"type":"text","value":"\n"}],"position":{"start":{"line":192,"column":1,"offset":8946},"end":{"line":193,"column":119,"offset":9085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"8bb5\">\n<a href=\"https://www.udacity.com/course/c-for-programmers--ud210\" class=\"markup--anchor markup--li-anchor\">C++ For Programmers</a> Learn features and constructs for C++.</span>","position":{"start":{"line":194,"column":5,"offset":9090},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"}],"position":{"start":{"line":194,"column":1,"offset":9086},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"}],"position":{"start":{"line":186,"column":1,"offset":8063},"end":{"line":195,"column":177,"offset":9283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Guides","position":{"start":{"line":197,"column":6,"offset":9290},"end":{"line":197,"column":12,"offset":9296}}}],"position":{"start":{"line":197,"column":1,"offset":9285},"end":{"line":197,"column":12,"offset":9296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"e9e9\">\n<a href=\"http://www.geeksforgeeks.org/\" class=\"markup--anchor markup--li-anchor\">GeeksForGeeks — A CS portal for geeks</a>\n</span>","position":{"start":{"line":199,"column":5,"offset":9302},"end":{"line":201,"column":8,"offset":9449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":199,"column":1,"offset":9298},"end":{"line":201,"column":8,"offset":9449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a228\">\n<a href=\"https://www.learneroo.com/subjects/8\" class=\"markup--anchor markup--li-anchor\">Learneroo — Algorithms</a>\n</span>","position":{"start":{"line":202,"column":5,"offset":9454},"end":{"line":204,"column":8,"offset":9593}}},{"type":"text","value":"\n"}],"position":{"start":{"line":202,"column":1,"offset":9450},"end":{"line":204,"column":8,"offset":9593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"a2f0\">\n<a href=\"http://www.topcoder.com/tc?d1=tutorials&amp;d2=alg_index&amp;module=Static\" class=\"markup--anchor markup--li-anchor\">Top Coder tutorials</a>\n</span>","position":{"start":{"line":205,"column":5,"offset":9598},"end":{"line":207,"column":8,"offset":9772}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":9594},"end":{"line":207,"column":8,"offset":9772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"raw","value":"<span id=\"f3ec\">\n<a href=\"http://www.infoarena.ro/training-path\" class=\"markup--anchor markup--li-anchor\">Infoarena training path</a> (RO)</span>","position":{"start":{"line":208,"column":5,"offset":9777},"end":{"line":209,"column":129,"offset":9922}}},{"type":"text","value":"\n"}],"position":{"start":{"line":208,"column":1,"offset":9773},"end":{"line":209,"column":129,"offset":9922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"ec93\">","position":{"start":{"line":210,"column":5,"offset":9927},"end":{"line":210,"column":21,"offset":9943}}},{"type":"text","value":"Steven & Felix Halim — ","position":{"start":{"line":210,"column":21,"offset":9943},"end":{"line":210,"column":44,"offset":9966}}},{"type":"raw","value":"<a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=118\" class=\"markup--anchor markup--li-anchor\">","position":{"start":{"line":210,"column":44,"offset":9966},"end":{"line":210,"column":186,"offset":10108}}},{"type":"text","value":"Increasing the Lower Bound of Programming Contests","position":{"start":{"line":210,"column":186,"offset":10108},"end":{"line":210,"column":236,"offset":10158}}},{"type":"raw","value":"</a>","position":{"start":{"line":210,"column":236,"offset":10158},"end":{"line":210,"column":240,"offset":10162}}},{"type":"text","value":" (UVA Online Judge)","position":{"start":{"line":210,"column":240,"offset":10162},"end":{"line":210,"column":259,"offset":10181}}},{"type":"raw","value":"</span>","position":{"start":{"line":210,"column":259,"offset":10181},"end":{"line":210,"column":266,"offset":10188}}}],"position":{"start":{"line":210,"column":1,"offset":9923},"end":{"line":210,"column":266,"offset":10188}}},{"type":"text","value":"\n"}],"position":{"start":{"line":199,"column":1,"offset":9298},"end":{"line":210,"column":266,"offset":10188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"space","position":{"start":{"line":212,"column":8,"offset":10197},"end":{"line":212,"column":13,"offset":10202}}}],"position":{"start":{"line":212,"column":7,"offset":10196},"end":{"line":212,"column":14,"offset":10203}}}],"position":{"start":{"line":212,"column":5,"offset":10194},"end":{"line":212,"column":16,"offset":10205}}}],"position":{"start":{"line":212,"column":1,"offset":10190},"end":{"line":212,"column":16,"offset":10205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The space complexity represents the memory consumption of a data structure. As for most of the things in life, you can't have it all, so it is with the data structures. You will generally need to trade some time for space or the other way around.","position":{"start":{"line":214,"column":4,"offset":10210},"end":{"line":214,"column":250,"offset":10456}}}],"position":{"start":{"line":214,"column":3,"offset":10209},"end":{"line":214,"column":251,"offset":10457}}}],"position":{"start":{"line":214,"column":3,"offset":10209},"end":{"line":214,"column":251,"offset":10457}}},{"type":"text","value":"\n"}],"position":{"start":{"line":214,"column":1,"offset":10207},"end":{"line":214,"column":251,"offset":10457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"time","position":{"start":{"line":216,"column":6,"offset":10464},"end":{"line":216,"column":10,"offset":10468}}}],"position":{"start":{"line":216,"column":5,"offset":10463},"end":{"line":216,"column":11,"offset":10469}}}],"position":{"start":{"line":216,"column":1,"offset":10459},"end":{"line":216,"column":11,"offset":10469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The time complexity for a data structure is in general more diverse than its space complexity.","position":{"start":{"line":218,"column":4,"offset":10474},"end":{"line":218,"column":98,"offset":10568}}}],"position":{"start":{"line":218,"column":3,"offset":10473},"end":{"line":218,"column":99,"offset":10569}}}],"position":{"start":{"line":218,"column":3,"offset":10473},"end":{"line":218,"column":99,"offset":10569}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":10471},"end":{"line":218,"column":99,"offset":10569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Several operations","position":{"start":{"line":220,"column":6,"offset":10576},"end":{"line":220,"column":24,"offset":10594}}}],"position":{"start":{"line":220,"column":5,"offset":10575},"end":{"line":220,"column":25,"offset":10595}}}],"position":{"start":{"line":220,"column":1,"offset":10571},"end":{"line":220,"column":25,"offset":10595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"In contrary to algorithms, when you look at the time complexity for data structures you need to express it for several operations that you can do with data structures. It can be adding elements, deleting elements, accessing an element or even searching for an element.","position":{"start":{"line":222,"column":4,"offset":10600},"end":{"line":222,"column":272,"offset":10868}}}],"position":{"start":{"line":222,"column":3,"offset":10599},"end":{"line":222,"column":273,"offset":10869}}}],"position":{"start":{"line":222,"column":3,"offset":10599},"end":{"line":222,"column":273,"offset":10869}}},{"type":"text","value":"\n"}],"position":{"start":{"line":222,"column":1,"offset":10597},"end":{"line":222,"column":273,"offset":10869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Dependent on data","position":{"start":{"line":224,"column":6,"offset":10876},"end":{"line":224,"column":23,"offset":10893}}}],"position":{"start":{"line":224,"column":5,"offset":10875},"end":{"line":224,"column":24,"offset":10894}}}],"position":{"start":{"line":224,"column":1,"offset":10871},"end":{"line":224,"column":24,"offset":10894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Something that data structure and algorithms have in common when talking about time complexity is that they are both dealing with data. When you deal with data you become dependent on them and as a result the time complexity is also dependent of the data that you received. To solve this problem we talk about 3 different time complexity.","position":{"start":{"line":226,"column":4,"offset":10899},"end":{"line":226,"column":342,"offset":11237}}}],"position":{"start":{"line":226,"column":3,"offset":10898},"end":{"line":226,"column":343,"offset":11238}}}],"position":{"start":{"line":226,"column":3,"offset":10898},"end":{"line":226,"column":343,"offset":11238}}},{"type":"text","value":"\n"}],"position":{"start":{"line":226,"column":1,"offset":10896},"end":{"line":226,"column":343,"offset":11238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"bc8d\">","position":{"start":{"line":228,"column":5,"offset":11244},"end":{"line":228,"column":21,"offset":11260}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The best-case complexity: when the data looks the best","position":{"start":{"line":228,"column":23,"offset":11262},"end":{"line":228,"column":77,"offset":11316}}}],"position":{"start":{"line":228,"column":21,"offset":11260},"end":{"line":228,"column":79,"offset":11318}}},{"type":"raw","value":"</span>","position":{"start":{"line":228,"column":79,"offset":11318},"end":{"line":228,"column":86,"offset":11325}}}],"position":{"start":{"line":228,"column":1,"offset":11240},"end":{"line":228,"column":86,"offset":11325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"8b06\">","position":{"start":{"line":229,"column":5,"offset":11330},"end":{"line":229,"column":21,"offset":11346}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The worst-case complexity: when the data looks the worst","position":{"start":{"line":229,"column":23,"offset":11348},"end":{"line":229,"column":79,"offset":11404}}}],"position":{"start":{"line":229,"column":21,"offset":11346},"end":{"line":229,"column":81,"offset":11406}}},{"type":"raw","value":"</span>","position":{"start":{"line":229,"column":81,"offset":11406},"end":{"line":229,"column":88,"offset":11413}}}],"position":{"start":{"line":229,"column":1,"offset":11326},"end":{"line":229,"column":88,"offset":11413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"881c\">","position":{"start":{"line":230,"column":5,"offset":11418},"end":{"line":230,"column":21,"offset":11434}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The average-case complexity: when the data looks average","position":{"start":{"line":230,"column":23,"offset":11436},"end":{"line":230,"column":79,"offset":11492}}}],"position":{"start":{"line":230,"column":21,"offset":11434},"end":{"line":230,"column":81,"offset":11494}}},{"type":"raw","value":"</span>","position":{"start":{"line":230,"column":81,"offset":11494},"end":{"line":230,"column":88,"offset":11501}}}],"position":{"start":{"line":230,"column":1,"offset":11414},"end":{"line":230,"column":88,"offset":11501}}},{"type":"text","value":"\n"}],"position":{"start":{"line":228,"column":1,"offset":11240},"end":{"line":230,"column":88,"offset":11501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Big O notation","position":{"start":{"line":232,"column":5,"offset":11507},"end":{"line":232,"column":19,"offset":11521}}}],"position":{"start":{"line":232,"column":1,"offset":11503},"end":{"line":232,"column":19,"offset":11521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The complexity is usually expressed with the Big O notation. The wikipedia page about this subject is pretty complex but you can find here a good summary of the different complexity for the most famous data structures and sorting algorithms.","position":{"start":{"line":234,"column":1,"offset":11523},"end":{"line":234,"column":242,"offset":11764}}}],"position":{"start":{"line":234,"column":1,"offset":11523},"end":{"line":234,"column":242,"offset":11764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Array data structure","position":{"start":{"line":236,"column":5,"offset":11770},"end":{"line":236,"column":29,"offset":11794}}}],"position":{"start":{"line":236,"column":1,"offset":11766},"end":{"line":236,"column":29,"offset":11794}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*Qk3UYgeqXamRrFLR.gif\" class=\"graf-image\" />\n</figure>### Definition","position":{"start":{"line":238,"column":1,"offset":11796},"end":{"line":240,"column":24,"offset":11924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An Array data structure, or simply an Array, is a data structure consisting of a collection of elements (values or variables), each identified by at least one array index or key. The simplest type of data structure is a linear array, also called one-dimensional array. From Wikipedia","position":{"start":{"line":242,"column":1,"offset":11926},"end":{"line":242,"column":284,"offset":12209}}}],"position":{"start":{"line":242,"column":1,"offset":11926},"end":{"line":242,"column":284,"offset":12209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrays are among the oldest and most important data structures and are used by every program. They are also used to implement many other data structures.","position":{"start":{"line":244,"column":1,"offset":12211},"end":{"line":244,"column":154,"offset":12364}}}],"position":{"start":{"line":244,"column":1,"offset":12211},"end":{"line":244,"column":154,"offset":12364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Complexity","position":{"start":{"line":246,"column":2,"offset":12367},"end":{"line":246,"column":12,"offset":12377}}}],"position":{"start":{"line":246,"column":1,"offset":12366},"end":{"line":246,"column":13,"offset":12378}}},{"type":"text","value":"\n","position":{"start":{"line":246,"column":13,"offset":12378},"end":{"line":247,"column":1,"offset":12379}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Average","position":{"start":{"line":247,"column":2,"offset":12380},"end":{"line":247,"column":9,"offset":12387}}}],"position":{"start":{"line":247,"column":1,"offset":12379},"end":{"line":247,"column":10,"offset":12388}}},{"type":"text","value":"\n","position":{"start":{"line":247,"column":10,"offset":12388},"end":{"line":248,"column":1,"offset":12389}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Access Search Insertion Deletion","position":{"start":{"line":248,"column":2,"offset":12390},"end":{"line":248,"column":34,"offset":12422}}}],"position":{"start":{"line":248,"column":1,"offset":12389},"end":{"line":248,"column":35,"offset":12423}}}],"position":{"start":{"line":246,"column":1,"offset":12366},"end":{"line":248,"column":35,"offset":12423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"O(1) O(n) O(1) O(n)","position":{"start":{"line":250,"column":1,"offset":12425},"end":{"line":250,"column":20,"offset":12444}}}],"position":{"start":{"line":250,"column":1,"offset":12425},"end":{"line":250,"column":20,"offset":12444}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*-BJ2hU-CZO2kuzu4x5a53g.png\" class=\"graf-image\" />\n</figure>indexvalue0 … this is the first value, stored at zero position","position":{"start":{"line":252,"column":1,"offset":12446},"end":{"line":254,"column":72,"offset":12628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"b953\">","position":{"start":{"line":256,"column":5,"offset":12634},"end":{"line":256,"column":21,"offset":12650}}},{"type":"text","value":"The index of an array ","position":{"start":{"line":256,"column":21,"offset":12650},"end":{"line":256,"column":43,"offset":12672}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"runs in sequence","position":{"start":{"line":256,"column":45,"offset":12674},"end":{"line":256,"column":61,"offset":12690}}}],"position":{"start":{"line":256,"column":43,"offset":12672},"end":{"line":256,"column":63,"offset":12692}}},{"type":"raw","value":"</span>","position":{"start":{"line":256,"column":63,"offset":12692},"end":{"line":256,"column":70,"offset":12699}}}],"position":{"start":{"line":256,"column":1,"offset":12630},"end":{"line":257,"column":1,"offset":12700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"This could be useful for storing data that are required to be ordered, such as rankings or queues","position":{"start":{"line":258,"column":5,"offset":12705},"end":{"line":258,"column":102,"offset":12802}}}],"position":{"start":{"line":258,"column":1,"offset":12701},"end":{"line":259,"column":1,"offset":12803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In JavaScript, array's value could be mixed; meaning value of each index could be of different data, be it String, Number or even Objects","position":{"start":{"line":260,"column":5,"offset":12808},"end":{"line":260,"column":142,"offset":12945}}}],"position":{"start":{"line":260,"column":1,"offset":12804},"end":{"line":260,"column":142,"offset":12945}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":12630},"end":{"line":260,"column":142,"offset":12945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"2. Objects","position":{"start":{"line":262,"column":5,"offset":12951},"end":{"line":262,"column":15,"offset":12961}}}],"position":{"start":{"line":262,"column":1,"offset":12947},"end":{"line":262,"column":15,"offset":12961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think of objects as a logical grouping of a bunch of properties.","position":{"start":{"line":264,"column":1,"offset":12963},"end":{"line":264,"column":65,"offset":13027}}}],"position":{"start":{"line":264,"column":1,"offset":12963},"end":{"line":264,"column":65,"offset":13027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Properties could be some variable that it's storing or some methods that it's using.","position":{"start":{"line":266,"column":1,"offset":13029},"end":{"line":266,"column":85,"offset":13113}}}],"position":{"start":{"line":266,"column":1,"offset":13029},"end":{"line":266,"column":85,"offset":13113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I also visualize an object as a table.","position":{"start":{"line":268,"column":1,"offset":13115},"end":{"line":268,"column":39,"offset":13153}}}],"position":{"start":{"line":268,"column":1,"offset":13115},"end":{"line":268,"column":39,"offset":13153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main difference is that object's \"index\" need not be numbers and is not necessarily sequenced.","position":{"start":{"line":270,"column":1,"offset":13155},"end":{"line":270,"column":99,"offset":13253}}}],"position":{"start":{"line":270,"column":1,"offset":13155},"end":{"line":270,"column":99,"offset":13253}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/1200/1*KVZkD2zrgEa_47igW8Hq8g.png\" class=\"graf-image\" />\n</figure>","position":{"start":{"line":272,"column":1,"offset":13255},"end":{"line":274,"column":10,"offset":13376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Hash Table","position":{"start":{"line":276,"column":5,"offset":13382},"end":{"line":276,"column":19,"offset":13396}}}],"position":{"start":{"line":276,"column":1,"offset":13378},"end":{"line":276,"column":19,"offset":13396}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*avbxLAFocSV6vsl5.gif\" class=\"graf-image\" />\n</figure>\n<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*3GJiRoLyEoZ_aIlO\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":278,"column":1,"offset":13398},"end":{"line":283,"column":26,"offset":13639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Hash Table (Hash Map) is a data structure used to implement an associative array, a structure that can map keys to values. A Hash Table uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. From Wikipedia","position":{"start":{"line":285,"column":4,"offset":13644},"end":{"line":285,"column":275,"offset":13915}}}],"position":{"start":{"line":285,"column":3,"offset":13643},"end":{"line":285,"column":276,"offset":13916}}}],"position":{"start":{"line":285,"column":3,"offset":13643},"end":{"line":285,"column":276,"offset":13916}}},{"type":"text","value":"\n"}],"position":{"start":{"line":285,"column":1,"offset":13641},"end":{"line":285,"column":276,"offset":13916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hash Tables are considered the more efficient data structure for lookup and for this reason, they are widely used.","position":{"start":{"line":287,"column":1,"offset":13918},"end":{"line":287,"column":115,"offset":14032}}}],"position":{"start":{"line":287,"column":1,"offset":13918},"end":{"line":287,"column":115,"offset":14032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion","position":{"start":{"line":289,"column":1,"offset":14034},"end":{"line":291,"column":33,"offset":14085}}}],"position":{"start":{"line":289,"column":1,"offset":14034},"end":{"line":291,"column":33,"offset":14085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"f63f\">","position":{"start":{"line":293,"column":5,"offset":14091},"end":{"line":293,"column":21,"offset":14107}}},{"type":"text","value":"O(1) O(1) O(1)","position":{"start":{"line":293,"column":21,"offset":14107},"end":{"line":293,"column":35,"offset":14121}}},{"type":"raw","value":"</span>","position":{"start":{"line":293,"column":35,"offset":14121},"end":{"line":293,"column":42,"offset":14128}}}],"position":{"start":{"line":293,"column":1,"offset":14087},"end":{"line":293,"column":42,"offset":14128}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":1,"offset":14087},"end":{"line":293,"column":42,"offset":14128}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":295,"column":4,"offset":14133},"end":{"line":295,"column":12,"offset":14141}}}],"position":{"start":{"line":295,"column":3,"offset":14132},"end":{"line":295,"column":13,"offset":14142}}}],"position":{"start":{"line":295,"column":3,"offset":14132},"end":{"line":295,"column":13,"offset":14142}}},{"type":"text","value":"\n"}],"position":{"start":{"line":295,"column":1,"offset":14130},"end":{"line":295,"column":13,"offset":14142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note, here I am storing another object for every hash in my Hash Table.","position":{"start":{"line":297,"column":1,"offset":14144},"end":{"line":297,"column":72,"offset":14215}}}],"position":{"start":{"line":297,"column":1,"offset":14144},"end":{"line":297,"column":72,"offset":14215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Set","position":{"start":{"line":299,"column":5,"offset":14221},"end":{"line":299,"column":12,"offset":14228}}}],"position":{"start":{"line":299,"column":1,"offset":14217},"end":{"line":299,"column":12,"offset":14228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Sets","position":{"start":{"line":301,"column":5,"offset":14234},"end":{"line":301,"column":9,"offset":14238}}}],"position":{"start":{"line":301,"column":1,"offset":14230},"end":{"line":301,"column":9,"offset":14238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sets are pretty much what it sounds like. It's the same intuition as Set in Mathematics. I visualize Sets as Venn Diagrams.","position":{"start":{"line":303,"column":1,"offset":14240},"end":{"line":303,"column":124,"offset":14363}}}],"position":{"start":{"line":303,"column":1,"offset":14240},"end":{"line":303,"column":124,"offset":14363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*AIQljh9p8Baw9TnE.png\" class=\"graf-image\" />\n</figure>\n<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*gOE33ANZP2ujbjIG\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":305,"column":1,"offset":14365},"end":{"line":310,"column":26,"offset":14606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Set is an abstract data type that can store certain values, without any particular order, and no repeated values. It is a computer implementation of the mathematical concept of a finite Set. From Wikipedia","position":{"start":{"line":312,"column":4,"offset":14611},"end":{"line":312,"column":211,"offset":14818}}}],"position":{"start":{"line":312,"column":3,"offset":14610},"end":{"line":312,"column":212,"offset":14819}}}],"position":{"start":{"line":312,"column":3,"offset":14610},"end":{"line":312,"column":212,"offset":14819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":312,"column":1,"offset":14608},"end":{"line":312,"column":212,"offset":14819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Set data structure is usually used to test whether elements belong to set of values. Rather then only containing elements, Sets are more used to perform operations on multiple values at once with methods such as union, intersect, etc…","position":{"start":{"line":314,"column":1,"offset":14821},"end":{"line":314,"column":239,"offset":15059}}}],"position":{"start":{"line":314,"column":1,"offset":14821},"end":{"line":314,"column":239,"offset":15059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion","position":{"start":{"line":316,"column":1,"offset":15061},"end":{"line":318,"column":33,"offset":15112}}}],"position":{"start":{"line":316,"column":1,"offset":15061},"end":{"line":318,"column":33,"offset":15112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"daa6\">","position":{"start":{"line":320,"column":5,"offset":15118},"end":{"line":320,"column":21,"offset":15134}}},{"type":"text","value":"O(n) O(n) O(n)","position":{"start":{"line":320,"column":21,"offset":15134},"end":{"line":320,"column":35,"offset":15148}}},{"type":"raw","value":"</span>","position":{"start":{"line":320,"column":35,"offset":15148},"end":{"line":320,"column":42,"offset":15155}}}],"position":{"start":{"line":320,"column":1,"offset":15114},"end":{"line":320,"column":42,"offset":15155}}},{"type":"text","value":"\n"}],"position":{"start":{"line":320,"column":1,"offset":15114},"end":{"line":320,"column":42,"offset":15155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":322,"column":4,"offset":15160},"end":{"line":322,"column":12,"offset":15168}}}],"position":{"start":{"line":322,"column":3,"offset":15159},"end":{"line":322,"column":13,"offset":15169}}}],"position":{"start":{"line":322,"column":3,"offset":15159},"end":{"line":322,"column":13,"offset":15169}}},{"type":"text","value":"\n"}],"position":{"start":{"line":322,"column":1,"offset":15157},"end":{"line":322,"column":13,"offset":15169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Singly Linked List","position":{"start":{"line":324,"column":5,"offset":15175},"end":{"line":324,"column":27,"offset":15197}}}],"position":{"start":{"line":324,"column":1,"offset":15171},"end":{"line":324,"column":27,"offset":15197}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*fLs64rV-Xq19aVCA.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":326,"column":1,"offset":15199},"end":{"line":328,"column":26,"offset":15329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Singly Linked List is a linear collection of data elements, called nodes pointing to the next node by means of pointer. It is a data structure consisting of a group of nodes which together represent a sequence. Under the simplest form, each node is composed of data and a reference (in other words, a link) to the next node in the sequence.","position":{"start":{"line":330,"column":4,"offset":15334},"end":{"line":330,"column":346,"offset":15676}}}],"position":{"start":{"line":330,"column":3,"offset":15333},"end":{"line":330,"column":347,"offset":15677}}}],"position":{"start":{"line":330,"column":3,"offset":15333},"end":{"line":330,"column":347,"offset":15677}}},{"type":"text","value":"\n"}],"position":{"start":{"line":330,"column":1,"offset":15331},"end":{"line":330,"column":347,"offset":15677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Linked Lists are among the simplest and most common data structures because it allows for efficient insertion or removal of elements from any position in the sequence.","position":{"start":{"line":332,"column":1,"offset":15679},"end":{"line":332,"column":168,"offset":15846}}}],"position":{"start":{"line":332,"column":1,"offset":15679},"end":{"line":332,"column":168,"offset":15846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":334,"column":1,"offset":15848},"end":{"line":337,"column":20,"offset":15919}}}],"position":{"start":{"line":334,"column":1,"offset":15848},"end":{"line":337,"column":20,"offset":15919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":339,"column":4,"offset":15924},"end":{"line":339,"column":12,"offset":15932}}}],"position":{"start":{"line":339,"column":3,"offset":15923},"end":{"line":339,"column":13,"offset":15933}}}],"position":{"start":{"line":339,"column":3,"offset":15923},"end":{"line":339,"column":13,"offset":15933}}},{"type":"text","value":"\n"}],"position":{"start":{"line":339,"column":1,"offset":15921},"end":{"line":339,"column":13,"offset":15933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":341,"column":1,"offset":15935},"end":{"line":341,"column":4,"offset":15938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Doubly Linked List","position":{"start":{"line":343,"column":5,"offset":15944},"end":{"line":343,"column":27,"offset":15966}}}],"position":{"start":{"line":343,"column":1,"offset":15940},"end":{"line":343,"column":27,"offset":15966}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*TQXiR-L_itiG3WP-.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":345,"column":1,"offset":15968},"end":{"line":347,"column":26,"offset":16098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Doubly Linked List is a linked data structure that consists of a set of sequentially linked records called nodes. Each node contains two fields, called links, that are references to the previous and to the next node in the sequence of nodes. From Wikipedia","position":{"start":{"line":349,"column":4,"offset":16103},"end":{"line":349,"column":262,"offset":16361}}}],"position":{"start":{"line":349,"column":3,"offset":16102},"end":{"line":349,"column":263,"offset":16362}}}],"position":{"start":{"line":349,"column":3,"offset":16102},"end":{"line":349,"column":263,"offset":16362}}},{"type":"text","value":"\n"}],"position":{"start":{"line":349,"column":1,"offset":16100},"end":{"line":349,"column":263,"offset":16362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Having two node links allow traversal in either direction but adding or removing a node in a doubly linked list requires changing more links than the same operations on a Singly Linked List.","position":{"start":{"line":351,"column":1,"offset":16364},"end":{"line":351,"column":191,"offset":16554}}}],"position":{"start":{"line":351,"column":1,"offset":16364},"end":{"line":351,"column":191,"offset":16554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":353,"column":1,"offset":16556},"end":{"line":356,"column":20,"offset":16627}}}],"position":{"start":{"line":353,"column":1,"offset":16556},"end":{"line":356,"column":20,"offset":16627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":358,"column":4,"offset":16632},"end":{"line":358,"column":12,"offset":16640}}}],"position":{"start":{"line":358,"column":3,"offset":16631},"end":{"line":358,"column":13,"offset":16641}}}],"position":{"start":{"line":358,"column":3,"offset":16631},"end":{"line":358,"column":13,"offset":16641}}},{"type":"text","value":"\n"}],"position":{"start":{"line":358,"column":1,"offset":16629},"end":{"line":358,"column":13,"offset":16641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Stack","position":{"start":{"line":360,"column":5,"offset":16647},"end":{"line":360,"column":14,"offset":16656}}}],"position":{"start":{"line":360,"column":1,"offset":16643},"end":{"line":360,"column":14,"offset":16656}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/1200/0*qsjYW-Lvfo22ecLE.gif\" class=\"graf-image\" />\n</figure>","position":{"start":{"line":362,"column":1,"offset":16658},"end":{"line":364,"column":10,"offset":16773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Definition","position":{"start":{"line":366,"column":6,"offset":16780},"end":{"line":366,"column":16,"offset":16790}}}],"position":{"start":{"line":366,"column":5,"offset":16779},"end":{"line":366,"column":17,"offset":16791}}}],"position":{"start":{"line":366,"column":1,"offset":16775},"end":{"line":366,"column":17,"offset":16791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Stack is an abstract data type that serves as a collection of elements, with two principal operations: push, which adds an element to the collection, and pop, which removes the most recently added element that was not yet removed. The order in which elements come off a Stack gives rise to its alternative name, LIFO (for last in, first out). From Wikipedia","position":{"start":{"line":368,"column":4,"offset":16796},"end":{"line":368,"column":363,"offset":17155}}}],"position":{"start":{"line":368,"column":3,"offset":16795},"end":{"line":368,"column":364,"offset":17156}}}],"position":{"start":{"line":368,"column":3,"offset":16795},"end":{"line":368,"column":364,"offset":17156}}},{"type":"text","value":"\n"}],"position":{"start":{"line":368,"column":1,"offset":16793},"end":{"line":368,"column":364,"offset":17156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A Stack often has a third method peek which allows to check the last pushed element without popping it.","position":{"start":{"line":370,"column":1,"offset":17158},"end":{"line":370,"column":104,"offset":17261}}}],"position":{"start":{"line":370,"column":1,"offset":17158},"end":{"line":370,"column":104,"offset":17261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(1)","position":{"start":{"line":372,"column":1,"offset":17263},"end":{"line":375,"column":20,"offset":17334}}}],"position":{"start":{"line":372,"column":1,"offset":17263},"end":{"line":375,"column":20,"offset":17334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":377,"column":4,"offset":17339},"end":{"line":377,"column":12,"offset":17347}}}],"position":{"start":{"line":377,"column":3,"offset":17338},"end":{"line":377,"column":13,"offset":17348}}}],"position":{"start":{"line":377,"column":3,"offset":17338},"end":{"line":377,"column":13,"offset":17348}}},{"type":"text","value":"\n"}],"position":{"start":{"line":377,"column":1,"offset":17336},"end":{"line":377,"column":13,"offset":17348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Queue","position":{"start":{"line":379,"column":5,"offset":17354},"end":{"line":379,"column":14,"offset":17363}}}],"position":{"start":{"line":379,"column":1,"offset":17350},"end":{"line":379,"column":14,"offset":17363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*YvfuX5tKP7-V0p7v.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":381,"column":1,"offset":17365},"end":{"line":383,"column":26,"offset":17495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Queue is a particular kind of abstract data type or collection in which the entities in the collection are kept in order and the principal operations are the addition of entities to the rear terminal position, known as enqueue, and removal of entities from the front terminal position, known as dequeue. This makes the Queue a First-In-First-Out (FIFO) data structure. In a FIFO data structure, the first element added to the Queue will be the first one to be removed.","position":{"start":{"line":385,"column":4,"offset":17500},"end":{"line":385,"column":474,"offset":17970}}}],"position":{"start":{"line":385,"column":3,"offset":17499},"end":{"line":385,"column":475,"offset":17971}}}],"position":{"start":{"line":385,"column":3,"offset":17499},"end":{"line":385,"column":475,"offset":17971}}},{"type":"text","value":"\n"}],"position":{"start":{"line":385,"column":1,"offset":17497},"end":{"line":385,"column":475,"offset":17971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As for the Stack data structure, a peek operation is often added to the Queue data structure. It returns the value of the front element without dequeuing it.","position":{"start":{"line":387,"column":1,"offset":17973},"end":{"line":387,"column":158,"offset":18130}}}],"position":{"start":{"line":387,"column":1,"offset":17973},"end":{"line":387,"column":158,"offset":18130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(1) O(n)","position":{"start":{"line":389,"column":1,"offset":18132},"end":{"line":392,"column":20,"offset":18203}}}],"position":{"start":{"line":389,"column":1,"offset":18132},"end":{"line":392,"column":20,"offset":18203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":394,"column":4,"offset":18208},"end":{"line":394,"column":12,"offset":18216}}}],"position":{"start":{"line":394,"column":3,"offset":18207},"end":{"line":394,"column":13,"offset":18217}}}],"position":{"start":{"line":394,"column":3,"offset":18207},"end":{"line":394,"column":13,"offset":18217}}},{"type":"text","value":"\n"}],"position":{"start":{"line":394,"column":1,"offset":18205},"end":{"line":394,"column":13,"offset":18217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Tree","position":{"start":{"line":396,"column":5,"offset":18223},"end":{"line":396,"column":13,"offset":18231}}}],"position":{"start":{"line":396,"column":1,"offset":18219},"end":{"line":396,"column":13,"offset":18231}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*yUiQ-NaPKeLQnN7n\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":398,"column":1,"offset":18233},"end":{"line":400,"column":26,"offset":18359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Tree is a widely used data structure that simulates a hierarchical tree structure, with a root value and subtrees of children with a parent node. A tree data structure can be defined recursively as a collection of nodes (starting at a root node), where each node is a data structure consisting of a value, together with a list of references to nodes (the \"children\"), with the constraints that no reference is duplicated, and none points to the root node. From Wikipedia","position":{"start":{"line":402,"column":4,"offset":18364},"end":{"line":402,"column":476,"offset":18836}}}],"position":{"start":{"line":402,"column":3,"offset":18363},"end":{"line":402,"column":477,"offset":18837}}}],"position":{"start":{"line":402,"column":3,"offset":18363},"end":{"line":402,"column":477,"offset":18837}}},{"type":"text","value":"\n"}],"position":{"start":{"line":402,"column":1,"offset":18361},"end":{"line":402,"column":477,"offset":18837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Complexity\nAverage\nAccess Search Insertion Deletion\nO(n) O(n) O(n) O(n)\nTo get a full overview of the time and space complexity of the Tree data structure, have a look to this excellent Big O cheat sheet.","position":{"start":{"line":404,"column":1,"offset":18839},"end":{"line":408,"column":133,"offset":19043}}}],"position":{"start":{"line":404,"column":1,"offset":18839},"end":{"line":408,"column":133,"offset":19043}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*DCdQiB6XqBJCrFRz12BwqA.png\" class=\"graf-image\" />\n</figure>*The code*","position":{"start":{"line":410,"column":1,"offset":19045},"end":{"line":412,"column":20,"offset":19175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"The Graph","position":{"start":{"line":414,"column":5,"offset":19181},"end":{"line":414,"column":14,"offset":19190}}}],"position":{"start":{"line":414,"column":1,"offset":19177},"end":{"line":414,"column":14,"offset":19190}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*q31mL1kjFWlIzw3l.gif\" class=\"graf-image\" />\n</figure>### *Definition*","position":{"start":{"line":416,"column":1,"offset":19192},"end":{"line":418,"column":26,"offset":19322}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"A Graph data structure consists of a finite (and possibly mutable) set of vertices or nodes or points, together with a set of unordered pairs of these vertices for an undirected Graph or a set of ordered pairs for a directed Graph. These pairs are known as edges, arcs, or lines for an undirected Graph and as arrows, directed edges, directed arcs, or directed lines for a directed Graph. The vertices may be part of the Graph structure, or may be external entities represented by integer indices or references.","position":{"start":{"line":420,"column":4,"offset":19327},"end":{"line":420,"column":515,"offset":19838}}}],"position":{"start":{"line":420,"column":3,"offset":19326},"end":{"line":420,"column":516,"offset":19839}}}],"position":{"start":{"line":420,"column":3,"offset":19326},"end":{"line":420,"column":516,"offset":19839}}},{"type":"text","value":"\n"}],"position":{"start":{"line":420,"column":1,"offset":19324},"end":{"line":420,"column":516,"offset":19839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"f896\">","position":{"start":{"line":422,"column":5,"offset":19845},"end":{"line":422,"column":21,"offset":19861}}},{"type":"text","value":"A graph is ","position":{"start":{"line":422,"column":21,"offset":19861},"end":{"line":422,"column":32,"offset":19872}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"any","position":{"start":{"line":422,"column":34,"offset":19874},"end":{"line":422,"column":37,"offset":19877}}}],"position":{"start":{"line":422,"column":32,"offset":19872},"end":{"line":422,"column":39,"offset":19879}}},{"type":"text","value":" collection of nodes and edges.","position":{"start":{"line":422,"column":39,"offset":19879},"end":{"line":422,"column":70,"offset":19910}}},{"type":"raw","value":"</span>","position":{"start":{"line":422,"column":70,"offset":19910},"end":{"line":422,"column":77,"offset":19917}}}],"position":{"start":{"line":422,"column":1,"offset":19841},"end":{"line":422,"column":77,"offset":19917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"fbda\">","position":{"start":{"line":423,"column":5,"offset":19922},"end":{"line":423,"column":21,"offset":19938}}},{"type":"text","value":"Much more relaxed in structure than a tree.","position":{"start":{"line":423,"column":21,"offset":19938},"end":{"line":423,"column":64,"offset":19981}}},{"type":"raw","value":"</span>","position":{"start":{"line":423,"column":64,"offset":19981},"end":{"line":423,"column":71,"offset":19988}}}],"position":{"start":{"line":423,"column":1,"offset":19918},"end":{"line":423,"column":71,"offset":19988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"5281\">","position":{"start":{"line":424,"column":5,"offset":19993},"end":{"line":424,"column":21,"offset":20009}}},{"type":"text","value":"It doesn't need to have a root node (not every node needs to be accessible from a single node)","position":{"start":{"line":424,"column":21,"offset":20009},"end":{"line":424,"column":115,"offset":20103}}},{"type":"raw","value":"</span>","position":{"start":{"line":424,"column":115,"offset":20103},"end":{"line":424,"column":122,"offset":20110}}}],"position":{"start":{"line":424,"column":1,"offset":19989},"end":{"line":424,"column":122,"offset":20110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"0c79\">","position":{"start":{"line":425,"column":5,"offset":20115},"end":{"line":425,"column":21,"offset":20131}}},{"type":"text","value":"It can have cycles (a group of nodes whose paths begin and end at the same node)","position":{"start":{"line":425,"column":21,"offset":20131},"end":{"line":425,"column":101,"offset":20211}}},{"type":"raw","value":"</span>","position":{"start":{"line":425,"column":101,"offset":20211},"end":{"line":425,"column":108,"offset":20218}}}],"position":{"start":{"line":425,"column":1,"offset":20111},"end":{"line":425,"column":108,"offset":20218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"4afc\">","position":{"start":{"line":426,"column":5,"offset":20223},"end":{"line":426,"column":21,"offset":20239}}},{"type":"text","value":"Cycles are not always \"isolated\", they can be one part of a larger graph. You can detect them by starting your search on a specific node and finding a path that takes you back to that same node.","position":{"start":{"line":426,"column":21,"offset":20239},"end":{"line":426,"column":215,"offset":20433}}},{"type":"raw","value":"</span>","position":{"start":{"line":426,"column":215,"offset":20433},"end":{"line":426,"column":222,"offset":20440}}}],"position":{"start":{"line":426,"column":1,"offset":20219},"end":{"line":426,"column":222,"offset":20440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"8f45\">","position":{"start":{"line":427,"column":5,"offset":20445},"end":{"line":427,"column":21,"offset":20461}}},{"type":"text","value":"Any number of edges may leave a given node","position":{"start":{"line":427,"column":21,"offset":20461},"end":{"line":427,"column":63,"offset":20503}}},{"type":"raw","value":"</span>","position":{"start":{"line":427,"column":63,"offset":20503},"end":{"line":427,"column":70,"offset":20510}}}],"position":{"start":{"line":427,"column":1,"offset":20441},"end":{"line":427,"column":70,"offset":20510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<span id=\"51cf\">","position":{"start":{"line":428,"column":5,"offset":20515},"end":{"line":428,"column":21,"offset":20531}}},{"type":"text","value":"A Path is a sequence of nodes on a graph","position":{"start":{"line":428,"column":21,"offset":20531},"end":{"line":428,"column":61,"offset":20571}}},{"type":"raw","value":"</span>","position":{"start":{"line":428,"column":61,"offset":20571},"end":{"line":428,"column":68,"offset":20578}}}],"position":{"start":{"line":428,"column":1,"offset":20511},"end":{"line":428,"column":68,"offset":20578}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":1,"offset":19841},"end":{"line":428,"column":68,"offset":20578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Cycle Visual","position":{"start":{"line":430,"column":5,"offset":20584},"end":{"line":430,"column":17,"offset":20596}}}],"position":{"start":{"line":430,"column":1,"offset":20580},"end":{"line":430,"column":17,"offset":20596}}},{"type":"text","value":"\n"},{"type":"raw","value":"<figure>\n<img src=\"https://cdn-images-1.medium.com/max/800/1*dn1BqCdXdFg4FCVSz6uArA.png\" class=\"graf-image\" />\n</figure>A Graph data structure may also associate to each edge some edge value, such as a symbolic label or a numeric attribute (cost, capacity, length, etc.).","position":{"start":{"line":432,"column":1,"offset":20598},"end":{"line":434,"column":161,"offset":20869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Representation\nThere are different ways of representing a graph, each of them with its own advantages and disadvantages. Here are the main 2:","position":{"start":{"line":436,"column":1,"offset":20871},"end":{"line":437,"column":127,"offset":21012}}}],"position":{"start":{"line":436,"column":1,"offset":20871},"end":{"line":437,"column":127,"offset":21012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adjacency list: For every vertex a list of adjacent vertices is stored. This can be viewed as storing the list of edges. This data structure allows the storage of additional data on the vertices and edges.\nAdjacency matrix: Data are stored in a two-dimensional matrix, in which the rows represent source vertices and columns represent destination vertices. The data on the edges and vertices must be stored externally.","position":{"start":{"line":439,"column":1,"offset":21014},"end":{"line":440,"column":213,"offset":21432}}}],"position":{"start":{"line":439,"column":1,"offset":21014},"end":{"line":440,"column":213,"offset":21432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Graph","position":{"start":{"line":442,"column":1,"offset":21434},"end":{"line":442,"column":6,"offset":21439}}}],"position":{"start":{"line":442,"column":1,"offset":21434},"end":{"line":442,"column":6,"offset":21439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"The code","position":{"start":{"line":444,"column":4,"offset":21444},"end":{"line":444,"column":12,"offset":21452}}}],"position":{"start":{"line":444,"column":3,"offset":21443},"end":{"line":444,"column":13,"offset":21453}}}],"position":{"start":{"line":444,"column":3,"offset":21443},"end":{"line":444,"column":13,"offset":21453}}},{"type":"text","value":"\n"}],"position":{"start":{"line":444,"column":1,"offset":21441},"end":{"line":444,"column":13,"offset":21453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":446,"column":1,"offset":21455},"end":{"line":446,"column":4,"offset":21458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":448,"column":3,"offset":21462},"end":{"line":448,"column":11,"offset":21470}}}],"position":{"start":{"line":448,"column":1,"offset":21460},"end":{"line":448,"column":11,"offset":21470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":450,"column":4,"offset":21475},"end":{"line":450,"column":32,"offset":21503}}}],"position":{"start":{"line":450,"column":1,"offset":21472},"end":{"line":450,"column":32,"offset":21503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/bgoonz/Data-Structures-Algos-Codebase"},"children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":452,"column":2,"offset":21506},"end":{"line":452,"column":18,"offset":21522}}}],"position":{"start":{"line":452,"column":1,"offset":21505},"end":{"line":452,"column":77,"offset":21581}}}],"position":{"start":{"line":452,"column":1,"offset":21505},"end":{"line":452,"column":77,"offset":21581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":454,"column":2,"offset":21584},"end":{"line":454,"column":142,"offset":21724}}}],"position":{"start":{"line":454,"column":1,"offset":21583},"end":{"line":454,"column":227,"offset":21809}}}],"position":{"start":{"line":454,"column":1,"offset":21583},"end":{"line":454,"column":227,"offset":21809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":456,"column":4,"offset":21814},"end":{"line":456,"column":6,"offset":21816}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/distinct-subsequences/description/"},"children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":456,"column":7,"offset":21817},"end":{"line":456,"column":33,"offset":21843}}}],"position":{"start":{"line":456,"column":6,"offset":21816},"end":{"line":456,"column":100,"offset":21910}}}],"position":{"start":{"line":456,"column":1,"offset":21811},"end":{"line":456,"column":100,"offset":21910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":458,"column":5,"offset":21916},"end":{"line":458,"column":13,"offset":21924}}}],"position":{"start":{"line":458,"column":1,"offset":21912},"end":{"line":458,"column":13,"offset":21924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string ","position":{"start":{"line":460,"column":1,"offset":21926},"end":{"line":460,"column":16,"offset":21941}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":460,"column":18,"offset":21943},"end":{"line":460,"column":19,"offset":21944}}}],"position":{"start":{"line":460,"column":16,"offset":21941},"end":{"line":460,"column":21,"offset":21946}}},{"type":"text","value":" and a string ","position":{"start":{"line":460,"column":21,"offset":21946},"end":{"line":460,"column":35,"offset":21960}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":460,"column":37,"offset":21962},"end":{"line":460,"column":38,"offset":21963}}}],"position":{"start":{"line":460,"column":35,"offset":21960},"end":{"line":460,"column":40,"offset":21965}}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":460,"column":40,"offset":21965},"end":{"line":460,"column":87,"offset":22012}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":460,"column":89,"offset":22014},"end":{"line":460,"column":90,"offset":22015}}}],"position":{"start":{"line":460,"column":87,"offset":22012},"end":{"line":460,"column":92,"offset":22017}}},{"type":"text","value":" which equals ","position":{"start":{"line":460,"column":92,"offset":22017},"end":{"line":460,"column":106,"offset":22031}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":460,"column":108,"offset":22033},"end":{"line":460,"column":109,"offset":22034}}}],"position":{"start":{"line":460,"column":106,"offset":22031},"end":{"line":460,"column":111,"offset":22036}}},{"type":"text","value":".","position":{"start":{"line":460,"column":111,"offset":22036},"end":{"line":460,"column":112,"offset":22037}}}],"position":{"start":{"line":460,"column":1,"offset":21926},"end":{"line":460,"column":112,"offset":22037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":462,"column":1,"offset":22039},"end":{"line":462,"column":209,"offset":22247}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ACE\""}],"position":{"start":{"line":462,"column":209,"offset":22247},"end":{"line":462,"column":216,"offset":22254}}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":462,"column":216,"offset":22254},"end":{"line":462,"column":237,"offset":22275}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ABCDE\""}],"position":{"start":{"line":462,"column":237,"offset":22275},"end":{"line":462,"column":246,"offset":22284}}},{"type":"text","value":" while ","position":{"start":{"line":462,"column":246,"offset":22284},"end":{"line":462,"column":253,"offset":22291}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"AEC\""}],"position":{"start":{"line":462,"column":253,"offset":22291},"end":{"line":462,"column":260,"offset":22298}}},{"type":"text","value":" is not).","position":{"start":{"line":462,"column":260,"offset":22298},"end":{"line":462,"column":269,"offset":22307}}}],"position":{"start":{"line":462,"column":1,"offset":22039},"end":{"line":462,"column":269,"offset":22307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":464,"column":3,"offset":22311},"end":{"line":464,"column":13,"offset":22321}}}],"position":{"start":{"line":464,"column":1,"offset":22309},"end":{"line":464,"column":15,"offset":22323}}}],"position":{"start":{"line":464,"column":1,"offset":22309},"end":{"line":464,"column":15,"offset":22323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n"}],"position":{"start":{"line":466,"column":1,"offset":22325},"end":{"line":478,"column":12,"offset":22589}}}],"position":{"start":{"line":466,"column":1,"offset":22325},"end":{"line":478,"column":12,"offset":22589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":480,"column":3,"offset":22593},"end":{"line":480,"column":13,"offset":22603}}}],"position":{"start":{"line":480,"column":1,"offset":22591},"end":{"line":480,"column":15,"offset":22605}}}],"position":{"start":{"line":480,"column":1,"offset":22591},"end":{"line":480,"column":15,"offset":22605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n"}],"position":{"start":{"line":482,"column":1,"offset":22607},"end":{"line":498,"column":12,"offset":22910}}}],"position":{"start":{"line":482,"column":1,"offset":22607},"end":{"line":498,"column":12,"offset":22910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":500,"column":5,"offset":22916},"end":{"line":500,"column":14,"offset":22925}}}],"position":{"start":{"line":500,"column":1,"offset":22912},"end":{"line":500,"column":14,"offset":22925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":502,"column":1,"offset":22927},"end":{"line":502,"column":8,"offset":22934}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":502,"column":8,"offset":22934},"end":{"line":502,"column":17,"offset":22943}}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":502,"column":17,"offset":22943},"end":{"line":502,"column":57,"offset":22983}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"T[0...j)"}],"position":{"start":{"line":502,"column":57,"offset":22983},"end":{"line":502,"column":67,"offset":22993}}},{"type":"text","value":" from ","position":{"start":{"line":502,"column":67,"offset":22993},"end":{"line":502,"column":73,"offset":22999}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[0...i)"}],"position":{"start":{"line":502,"column":73,"offset":22999},"end":{"line":502,"column":83,"offset":23009}}},{"type":"text","value":".","position":{"start":{"line":502,"column":83,"offset":23009},"end":{"line":502,"column":84,"offset":23010}}}],"position":{"start":{"line":502,"column":1,"offset":22927},"end":{"line":502,"column":84,"offset":23010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For ","position":{"start":{"line":504,"column":1,"offset":23012},"end":{"line":504,"column":5,"offset":23016}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":504,"column":5,"offset":23016},"end":{"line":504,"column":14,"offset":23025}}},{"type":"text","value":" you can always skip ","position":{"start":{"line":504,"column":14,"offset":23025},"end":{"line":504,"column":35,"offset":23046}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1]"}],"position":{"start":{"line":504,"column":35,"offset":23046},"end":{"line":504,"column":43,"offset":23054}}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":504,"column":43,"offset":23054},"end":{"line":504,"column":71,"offset":23082}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1] === T[j-1]"}],"position":{"start":{"line":504,"column":71,"offset":23082},"end":{"line":504,"column":90,"offset":23101}}},{"type":"text","value":".","position":{"start":{"line":504,"column":90,"offset":23101},"end":{"line":504,"column":91,"offset":23102}}}],"position":{"start":{"line":504,"column":1,"offset":23012},"end":{"line":504,"column":91,"offset":23102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nf(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)\n"}],"position":{"start":{"line":506,"column":1,"offset":23104},"end":{"line":511,"column":4,"offset":23242}}}],"position":{"start":{"line":506,"column":1,"offset":23104},"end":{"line":511,"column":4,"offset":23242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":513,"column":1,"offset":23244},"end":{"line":513,"column":27,"offset":23270}}}],"position":{"start":{"line":513,"column":1,"offset":23244},"end":{"line":513,"column":27,"offset":23270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};\n"}],"position":{"start":{"line":515,"column":1,"offset":23272},"end":{"line":536,"column":4,"offset":23714}}}],"position":{"start":{"line":515,"column":1,"offset":23272},"end":{"line":536,"column":4,"offset":23714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":538,"column":1,"offset":23716},"end":{"line":538,"column":4,"offset":23719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":540,"column":1,"offset":23721},"end":{"line":542,"column":9,"offset":23764}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":542,"column":9,"offset":23764},"end":{"line":542,"column":38,"offset":23793}}}],"position":{"start":{"line":542,"column":9,"offset":23764},"end":{"line":542,"column":38,"offset":23793}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":542,"column":38,"offset":23793},"end":{"line":543,"column":23,"offset":23816}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":543,"column":23,"offset":23816},"end":{"line":543,"column":66,"offset":23859}}}],"position":{"start":{"line":543,"column":23,"offset":23816},"end":{"line":543,"column":66,"offset":23859}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":543,"column":66,"offset":23859},"end":{"line":545,"column":51,"offset":23929}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":545,"column":51,"offset":23929},"end":{"line":545,"column":127,"offset":24005}}}],"position":{"start":{"line":545,"column":51,"offset":23929},"end":{"line":545,"column":127,"offset":24005}}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":545,"column":127,"offset":24005},"end":{"line":546,"column":32,"offset":24037}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-right-side-view"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":546,"column":32,"offset":24037},"end":{"line":546,"column":89,"offset":24094}}}],"position":{"start":{"line":546,"column":32,"offset":24037},"end":{"line":546,"column":89,"offset":24094}}}],"position":{"start":{"line":540,"column":1,"offset":23721},"end":{"line":546,"column":89,"offset":24094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":548,"column":1,"offset":24096},"end":{"line":548,"column":4,"offset":24099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":550,"column":2,"offset":24102},"end":{"line":550,"column":142,"offset":24242}}}],"position":{"start":{"line":550,"column":1,"offset":24101},"end":{"line":550,"column":271,"offset":24371}}}],"position":{"start":{"line":550,"column":1,"offset":24101},"end":{"line":550,"column":271,"offset":24371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":552,"column":4,"offset":24376},"end":{"line":552,"column":6,"offset":24378}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":552,"column":7,"offset":24379},"end":{"line":552,"column":55,"offset":24427}}}],"position":{"start":{"line":552,"column":6,"offset":24378},"end":{"line":552,"column":144,"offset":24516}}}],"position":{"start":{"line":552,"column":1,"offset":24373},"end":{"line":552,"column":144,"offset":24516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":554,"column":5,"offset":24522},"end":{"line":554,"column":13,"offset":24530}}}],"position":{"start":{"line":554,"column":1,"offset":24518},"end":{"line":554,"column":13,"offset":24530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":556,"column":1,"offset":24532},"end":{"line":556,"column":20,"offset":24551}}}],"position":{"start":{"line":556,"column":1,"offset":24532},"end":{"line":556,"column":20,"offset":24551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":558,"column":1,"offset":24553},"end":{"line":565,"column":4,"offset":24652}}}],"position":{"start":{"line":558,"column":1,"offset":24553},"end":{"line":565,"column":4,"offset":24652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":567,"column":1,"offset":24654},"end":{"line":567,"column":127,"offset":24780}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":567,"column":127,"offset":24780},"end":{"line":567,"column":133,"offset":24786}}},{"type":"text","value":".","position":{"start":{"line":567,"column":133,"offset":24786},"end":{"line":567,"column":134,"offset":24787}}}],"position":{"start":{"line":567,"column":1,"offset":24654},"end":{"line":567,"column":134,"offset":24787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":569,"column":1,"offset":24789},"end":{"line":569,"column":41,"offset":24829}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":569,"column":41,"offset":24829},"end":{"line":569,"column":47,"offset":24835}}},{"type":"text","value":".","position":{"start":{"line":569,"column":47,"offset":24835},"end":{"line":569,"column":48,"offset":24836}}}],"position":{"start":{"line":569,"column":1,"offset":24789},"end":{"line":569,"column":48,"offset":24836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":571,"column":3,"offset":24840},"end":{"line":571,"column":8,"offset":24845}}}],"position":{"start":{"line":571,"column":1,"offset":24838},"end":{"line":571,"column":10,"offset":24847}}}],"position":{"start":{"line":571,"column":1,"offset":24838},"end":{"line":571,"column":10,"offset":24847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":573,"column":5,"offset":24853},"end":{"line":573,"column":43,"offset":24891}}}],"position":{"start":{"line":573,"column":1,"offset":24849},"end":{"line":573,"column":43,"offset":24891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":574,"column":5,"offset":24896},"end":{"line":574,"column":101,"offset":24992}}}],"position":{"start":{"line":574,"column":1,"offset":24892},"end":{"line":574,"column":101,"offset":24992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":575,"column":5,"offset":24997},"end":{"line":575,"column":127,"offset":25119}}}],"position":{"start":{"line":575,"column":1,"offset":24993},"end":{"line":575,"column":127,"offset":25119}}},{"type":"text","value":"\n"}],"position":{"start":{"line":573,"column":1,"offset":24849},"end":{"line":575,"column":127,"offset":25119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":577,"column":3,"offset":25123},"end":{"line":577,"column":11,"offset":25131}}}],"position":{"start":{"line":577,"column":1,"offset":25121},"end":{"line":577,"column":13,"offset":25133}}}],"position":{"start":{"line":577,"column":1,"offset":25121},"end":{"line":577,"column":13,"offset":25133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":579,"column":1,"offset":25135},"end":{"line":579,"column":41,"offset":25175}}}],"position":{"start":{"line":579,"column":1,"offset":25135},"end":{"line":579,"column":41,"offset":25175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7\n"}],"position":{"start":{"line":581,"column":1,"offset":25177},"end":{"line":588,"column":4,"offset":25230}}}],"position":{"start":{"line":581,"column":1,"offset":25177},"end":{"line":588,"column":4,"offset":25230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":590,"column":1,"offset":25232},"end":{"line":590,"column":56,"offset":25287}}}],"position":{"start":{"line":590,"column":1,"offset":25232},"end":{"line":590,"column":56,"offset":25287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL\n"}],"position":{"start":{"line":592,"column":1,"offset":25289},"end":{"line":599,"column":4,"offset":25366}}}],"position":{"start":{"line":592,"column":1,"offset":25289},"end":{"line":599,"column":4,"offset":25366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":601,"column":5,"offset":25372},"end":{"line":601,"column":14,"offset":25381}}}],"position":{"start":{"line":601,"column":1,"offset":25368},"end":{"line":601,"column":14,"offset":25381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":603,"column":6,"offset":25388},"end":{"line":603,"column":9,"offset":25391}}}],"position":{"start":{"line":603,"column":1,"offset":25383},"end":{"line":603,"column":9,"offset":25391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive.","position":{"start":{"line":605,"column":1,"offset":25393},"end":{"line":605,"column":11,"offset":25403}}}],"position":{"start":{"line":605,"column":1,"offset":25393},"end":{"line":605,"column":11,"offset":25403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":607,"column":1,"offset":25405},"end":{"line":607,"column":11,"offset":25415}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":607,"column":11,"offset":25415},"end":{"line":607,"column":17,"offset":25421}}},{"type":"text","value":":","position":{"start":{"line":607,"column":17,"offset":25421},"end":{"line":607,"column":18,"offset":25422}}}],"position":{"start":{"line":607,"column":1,"offset":25405},"end":{"line":607,"column":18,"offset":25422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":609,"column":5,"offset":25428},"end":{"line":609,"column":27,"offset":25450}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":609,"column":27,"offset":25450},"end":{"line":609,"column":39,"offset":25462}}},{"type":"text","value":".","position":{"start":{"line":609,"column":39,"offset":25462},"end":{"line":609,"column":40,"offset":25463}}}],"position":{"start":{"line":609,"column":1,"offset":25424},"end":{"line":609,"column":40,"offset":25463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":610,"column":5,"offset":25468},"end":{"line":610,"column":28,"offset":25491}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next.left"}],"position":{"start":{"line":610,"column":28,"offset":25491},"end":{"line":610,"column":44,"offset":25507}}},{"type":"text","value":" if ","position":{"start":{"line":610,"column":44,"offset":25507},"end":{"line":610,"column":48,"offset":25511}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next"}],"position":{"start":{"line":610,"column":48,"offset":25511},"end":{"line":610,"column":59,"offset":25522}}},{"type":"text","value":" exists.","position":{"start":{"line":610,"column":59,"offset":25522},"end":{"line":610,"column":67,"offset":25530}}}],"position":{"start":{"line":610,"column":1,"offset":25464},"end":{"line":610,"column":67,"offset":25530}}},{"type":"text","value":"\n"}],"position":{"start":{"line":609,"column":1,"offset":25424},"end":{"line":610,"column":67,"offset":25530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};\n"}],"position":{"start":{"line":612,"column":1,"offset":25532},"end":{"line":641,"column":4,"offset":26153}}}],"position":{"start":{"line":612,"column":1,"offset":25532},"end":{"line":641,"column":4,"offset":26153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":643,"column":6,"offset":26160},"end":{"line":643,"column":9,"offset":26163}}}],"position":{"start":{"line":643,"column":1,"offset":26155},"end":{"line":643,"column":9,"offset":26163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":645,"column":1,"offset":26165},"end":{"line":645,"column":23,"offset":26187}}}],"position":{"start":{"line":645,"column":1,"offset":26165},"end":{"line":645,"column":23,"offset":26187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":647,"column":1,"offset":26189},"end":{"line":684,"column":4,"offset":27048}}}],"position":{"start":{"line":647,"column":1,"offset":26189},"end":{"line":684,"column":4,"offset":27048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":686,"column":1,"offset":27050},"end":{"line":686,"column":4,"offset":27053}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":688,"column":1,"offset":27055},"end":{"line":690,"column":9,"offset":27098}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":690,"column":9,"offset":27098},"end":{"line":690,"column":38,"offset":27127}}}],"position":{"start":{"line":690,"column":9,"offset":27098},"end":{"line":690,"column":38,"offset":27127}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":690,"column":38,"offset":27127},"end":{"line":691,"column":23,"offset":27150}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":691,"column":23,"offset":27150},"end":{"line":691,"column":66,"offset":27193}}}],"position":{"start":{"line":691,"column":23,"offset":27150},"end":{"line":691,"column":66,"offset":27193}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":691,"column":66,"offset":27193},"end":{"line":693,"column":48,"offset":27260}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":693,"column":48,"offset":27260},"end":{"line":693,"column":121,"offset":27333}}}],"position":{"start":{"line":693,"column":48,"offset":27260},"end":{"line":693,"column":121,"offset":27333}}}],"position":{"start":{"line":688,"column":1,"offset":27055},"end":{"line":693,"column":121,"offset":27333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":695,"column":1,"offset":27335},"end":{"line":695,"column":4,"offset":27338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":697,"column":2,"offset":27341},"end":{"line":697,"column":142,"offset":27481}}}],"position":{"start":{"line":697,"column":1,"offset":27340},"end":{"line":697,"column":277,"offset":27616}}}],"position":{"start":{"line":697,"column":1,"offset":27340},"end":{"line":697,"column":277,"offset":27616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":699,"column":4,"offset":27621},"end":{"line":699,"column":6,"offset":27623}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/"},"children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":699,"column":7,"offset":27624},"end":{"line":699,"column":58,"offset":27675}}}],"position":{"start":{"line":699,"column":6,"offset":27623},"end":{"line":699,"column":150,"offset":27767}}}],"position":{"start":{"line":699,"column":1,"offset":27618},"end":{"line":699,"column":150,"offset":27767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":701,"column":5,"offset":27773},"end":{"line":701,"column":13,"offset":27781}}}],"position":{"start":{"line":701,"column":1,"offset":27769},"end":{"line":701,"column":13,"offset":27781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":703,"column":1,"offset":27783},"end":{"line":703,"column":20,"offset":27802}}}],"position":{"start":{"line":703,"column":1,"offset":27783},"end":{"line":703,"column":20,"offset":27802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":705,"column":1,"offset":27804},"end":{"line":712,"column":4,"offset":27903}}}],"position":{"start":{"line":705,"column":1,"offset":27804},"end":{"line":712,"column":4,"offset":27903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":714,"column":1,"offset":27905},"end":{"line":714,"column":127,"offset":28031}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":714,"column":127,"offset":28031},"end":{"line":714,"column":133,"offset":28037}}},{"type":"text","value":".","position":{"start":{"line":714,"column":133,"offset":28037},"end":{"line":714,"column":134,"offset":28038}}}],"position":{"start":{"line":714,"column":1,"offset":27905},"end":{"line":714,"column":134,"offset":28038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":716,"column":1,"offset":28040},"end":{"line":716,"column":41,"offset":28080}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":716,"column":41,"offset":28080},"end":{"line":716,"column":47,"offset":28086}}},{"type":"text","value":".","position":{"start":{"line":716,"column":47,"offset":28086},"end":{"line":716,"column":48,"offset":28087}}}],"position":{"start":{"line":716,"column":1,"offset":28040},"end":{"line":716,"column":48,"offset":28087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":718,"column":3,"offset":28091},"end":{"line":718,"column":8,"offset":28096}}}],"position":{"start":{"line":718,"column":1,"offset":28089},"end":{"line":718,"column":10,"offset":28098}}}],"position":{"start":{"line":718,"column":1,"offset":28089},"end":{"line":718,"column":10,"offset":28098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":720,"column":5,"offset":28104},"end":{"line":720,"column":43,"offset":28142}}}],"position":{"start":{"line":720,"column":1,"offset":28100},"end":{"line":720,"column":43,"offset":28142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":721,"column":5,"offset":28147},"end":{"line":721,"column":101,"offset":28243}}}],"position":{"start":{"line":721,"column":1,"offset":28143},"end":{"line":721,"column":101,"offset":28243}}},{"type":"text","value":"\n"}],"position":{"start":{"line":720,"column":1,"offset":28100},"end":{"line":721,"column":101,"offset":28243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":723,"column":3,"offset":28247},"end":{"line":723,"column":11,"offset":28255}}}],"position":{"start":{"line":723,"column":1,"offset":28245},"end":{"line":723,"column":13,"offset":28257}}}],"position":{"start":{"line":723,"column":1,"offset":28245},"end":{"line":723,"column":13,"offset":28257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":725,"column":1,"offset":28259},"end":{"line":725,"column":33,"offset":28291}}}],"position":{"start":{"line":725,"column":1,"offset":28259},"end":{"line":725,"column":33,"offset":28291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7\n"}],"position":{"start":{"line":727,"column":1,"offset":28293},"end":{"line":734,"column":4,"offset":28346}}}],"position":{"start":{"line":727,"column":1,"offset":28293},"end":{"line":734,"column":4,"offset":28346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":736,"column":1,"offset":28348},"end":{"line":736,"column":56,"offset":28403}}}],"position":{"start":{"line":736,"column":1,"offset":28348},"end":{"line":736,"column":56,"offset":28403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL\n"}],"position":{"start":{"line":738,"column":1,"offset":28405},"end":{"line":745,"column":4,"offset":28482}}}],"position":{"start":{"line":738,"column":1,"offset":28405},"end":{"line":745,"column":4,"offset":28482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":747,"column":5,"offset":28488},"end":{"line":747,"column":14,"offset":28497}}}],"position":{"start":{"line":747,"column":1,"offset":28484},"end":{"line":747,"column":14,"offset":28497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":749,"column":6,"offset":28504},"end":{"line":749,"column":9,"offset":28507}}}],"position":{"start":{"line":749,"column":1,"offset":28499},"end":{"line":749,"column":9,"offset":28507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":751,"column":1,"offset":28509},"end":{"line":751,"column":16,"offset":28524}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":751,"column":17,"offset":28525},"end":{"line":751,"column":65,"offset":28573}}}],"position":{"start":{"line":751,"column":16,"offset":28524},"end":{"line":751,"column":135,"offset":28643}}},{"type":"text","value":".","position":{"start":{"line":751,"column":135,"offset":28643},"end":{"line":751,"column":136,"offset":28644}}}],"position":{"start":{"line":751,"column":1,"offset":28509},"end":{"line":751,"column":136,"offset":28644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":753,"column":1,"offset":28646},"end":{"line":753,"column":50,"offset":28695}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"next"}],"position":{"start":{"line":753,"column":50,"offset":28695},"end":{"line":753,"column":56,"offset":28701}}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":753,"column":56,"offset":28701},"end":{"line":753,"column":97,"offset":28742}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":753,"column":97,"offset":28742},"end":{"line":753,"column":103,"offset":28748}}},{"type":"text","value":".","position":{"start":{"line":753,"column":103,"offset":28748},"end":{"line":753,"column":104,"offset":28749}}}],"position":{"start":{"line":753,"column":1,"offset":28646},"end":{"line":753,"column":104,"offset":28749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":755,"column":1,"offset":28751},"end":{"line":755,"column":50,"offset":28800}}}],"position":{"start":{"line":755,"column":1,"offset":28751},"end":{"line":755,"column":50,"offset":28800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};\n"}],"position":{"start":{"line":757,"column":1,"offset":28802},"end":{"line":795,"column":4,"offset":29646}}}],"position":{"start":{"line":757,"column":1,"offset":28802},"end":{"line":795,"column":4,"offset":29646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":797,"column":6,"offset":29653},"end":{"line":797,"column":9,"offset":29656}}}],"position":{"start":{"line":797,"column":1,"offset":29648},"end":{"line":797,"column":9,"offset":29656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":799,"column":1,"offset":29658},"end":{"line":799,"column":38,"offset":29695}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":799,"column":39,"offset":29696},"end":{"line":799,"column":87,"offset":29744}}}],"position":{"start":{"line":799,"column":38,"offset":29695},"end":{"line":799,"column":157,"offset":29814}}},{"type":"text","value":".","position":{"start":{"line":799,"column":157,"offset":29814},"end":{"line":799,"column":158,"offset":29815}}}],"position":{"start":{"line":799,"column":1,"offset":29658},"end":{"line":799,"column":158,"offset":29815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":801,"column":1,"offset":29817},"end":{"line":838,"column":4,"offset":30676}}}],"position":{"start":{"line":801,"column":1,"offset":29817},"end":{"line":838,"column":4,"offset":30676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":840,"column":1,"offset":30678},"end":{"line":840,"column":4,"offset":30681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":842,"column":1,"offset":30683},"end":{"line":844,"column":10,"offset":30725}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":844,"column":10,"offset":30725},"end":{"line":844,"column":40,"offset":30755}}}],"position":{"start":{"line":844,"column":10,"offset":30725},"end":{"line":844,"column":40,"offset":30755}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":844,"column":40,"offset":30755},"end":{"line":846,"column":25,"offset":30799}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":846,"column":25,"offset":30799},"end":{"line":846,"column":74,"offset":30848}}}],"position":{"start":{"line":846,"column":25,"offset":30799},"end":{"line":846,"column":74,"offset":30848}}}],"position":{"start":{"line":842,"column":1,"offset":30683},"end":{"line":846,"column":74,"offset":30848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":848,"column":1,"offset":30850},"end":{"line":848,"column":4,"offset":30853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":850,"column":2,"offset":30856},"end":{"line":850,"column":142,"offset":30996}}}],"position":{"start":{"line":850,"column":1,"offset":30855},"end":{"line":850,"column":217,"offset":31071}}}],"position":{"start":{"line":850,"column":1,"offset":30855},"end":{"line":850,"column":217,"offset":31071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":852,"column":4,"offset":31076},"end":{"line":852,"column":6,"offset":31078}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle/description/"},"children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":852,"column":7,"offset":31079},"end":{"line":852,"column":29,"offset":31101}}}],"position":{"start":{"line":852,"column":6,"offset":31078},"end":{"line":852,"column":91,"offset":31163}}}],"position":{"start":{"line":852,"column":1,"offset":31073},"end":{"line":852,"column":91,"offset":31163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":854,"column":5,"offset":31169},"end":{"line":854,"column":13,"offset":31177}}}],"position":{"start":{"line":854,"column":1,"offset":31165},"end":{"line":854,"column":13,"offset":31177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":856,"column":1,"offset":31179},"end":{"line":856,"column":30,"offset":31208}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":856,"column":31,"offset":31209},"end":{"line":856,"column":38,"offset":31216}}}],"position":{"start":{"line":856,"column":30,"offset":31208},"end":{"line":856,"column":39,"offset":31217}}},{"type":"text","value":", generate the first ","position":{"start":{"line":856,"column":39,"offset":31217},"end":{"line":856,"column":60,"offset":31238}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":856,"column":61,"offset":31239},"end":{"line":856,"column":68,"offset":31246}}}],"position":{"start":{"line":856,"column":60,"offset":31238},"end":{"line":856,"column":69,"offset":31247}}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":856,"column":69,"offset":31247},"end":{"line":856,"column":91,"offset":31269}}}],"position":{"start":{"line":856,"column":1,"offset":31179},"end":{"line":856,"column":91,"offset":31269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":858,"column":1,"offset":31271},"end":{"line":858,"column":112,"offset":31382}}}],"position":{"start":{"line":858,"column":1,"offset":31271},"end":{"line":858,"column":112,"offset":31382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":860,"column":1,"offset":31384},"end":{"line":860,"column":83,"offset":31466}}}],"position":{"start":{"line":860,"column":1,"offset":31384},"end":{"line":860,"column":83,"offset":31466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":862,"column":3,"offset":31470},"end":{"line":862,"column":11,"offset":31478}}}],"position":{"start":{"line":862,"column":1,"offset":31468},"end":{"line":862,"column":13,"offset":31480}}}],"position":{"start":{"line":862,"column":1,"offset":31468},"end":{"line":862,"column":13,"offset":31480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n"}],"position":{"start":{"line":864,"column":1,"offset":31482},"end":{"line":875,"column":4,"offset":31570}}}],"position":{"start":{"line":864,"column":1,"offset":31482},"end":{"line":875,"column":4,"offset":31570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":877,"column":5,"offset":31576},"end":{"line":877,"column":14,"offset":31585}}}],"position":{"start":{"line":877,"column":1,"offset":31572},"end":{"line":877,"column":14,"offset":31585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":879,"column":1,"offset":31587},"end":{"line":879,"column":25,"offset":31611}}}],"position":{"start":{"line":879,"column":1,"offset":31587},"end":{"line":879,"column":25,"offset":31611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};\n"}],"position":{"start":{"line":881,"column":1,"offset":31613},"end":{"line":905,"column":4,"offset":32074}}}],"position":{"start":{"line":881,"column":1,"offset":31613},"end":{"line":905,"column":4,"offset":32074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":907,"column":1,"offset":32076},"end":{"line":907,"column":4,"offset":32079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":909,"column":1,"offset":32081},"end":{"line":911,"column":10,"offset":32123}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":911,"column":10,"offset":32123},"end":{"line":911,"column":40,"offset":32153}}}],"position":{"start":{"line":911,"column":10,"offset":32123},"end":{"line":911,"column":40,"offset":32153}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":911,"column":40,"offset":32153},"end":{"line":913,"column":22,"offset":32194}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":913,"column":22,"offset":32194},"end":{"line":913,"column":68,"offset":32240}}}],"position":{"start":{"line":913,"column":22,"offset":32194},"end":{"line":913,"column":68,"offset":32240}}}],"position":{"start":{"line":909,"column":1,"offset":32081},"end":{"line":913,"column":68,"offset":32240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":915,"column":1,"offset":32242},"end":{"line":915,"column":4,"offset":32245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":917,"column":2,"offset":32248},"end":{"line":917,"column":142,"offset":32388}}}],"position":{"start":{"line":917,"column":1,"offset":32247},"end":{"line":917,"column":223,"offset":32469}}}],"position":{"start":{"line":917,"column":1,"offset":32247},"end":{"line":917,"column":223,"offset":32469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":919,"column":4,"offset":32474},"end":{"line":919,"column":6,"offset":32476}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii/description/"},"children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":919,"column":7,"offset":32477},"end":{"line":919,"column":32,"offset":32502}}}],"position":{"start":{"line":919,"column":6,"offset":32476},"end":{"line":919,"column":97,"offset":32567}}}],"position":{"start":{"line":919,"column":1,"offset":32471},"end":{"line":919,"column":97,"offset":32567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":921,"column":5,"offset":32573},"end":{"line":921,"column":13,"offset":32581}}}],"position":{"start":{"line":921,"column":1,"offset":32569},"end":{"line":921,"column":13,"offset":32581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":923,"column":1,"offset":32583},"end":{"line":923,"column":28,"offset":32610}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":923,"column":29,"offset":32611},"end":{"line":923,"column":30,"offset":32612}}}],"position":{"start":{"line":923,"column":28,"offset":32610},"end":{"line":923,"column":31,"offset":32613}}},{"type":"text","value":" where ","position":{"start":{"line":923,"column":31,"offset":32613},"end":{"line":923,"column":38,"offset":32620}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":923,"column":39,"offset":32621},"end":{"line":923,"column":40,"offset":32622}}}],"position":{"start":{"line":923,"column":38,"offset":32620},"end":{"line":923,"column":41,"offset":32623}}},{"type":"text","value":" ≤ 33, return the ","position":{"start":{"line":923,"column":41,"offset":32623},"end":{"line":923,"column":59,"offset":32641}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":923,"column":60,"offset":32642},"end":{"line":923,"column":61,"offset":32643}}}],"position":{"start":{"line":923,"column":59,"offset":32641},"end":{"line":923,"column":62,"offset":32644}}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":923,"column":62,"offset":32644},"end":{"line":923,"column":100,"offset":32682}}}],"position":{"start":{"line":923,"column":1,"offset":32583},"end":{"line":923,"column":100,"offset":32682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":925,"column":1,"offset":32684},"end":{"line":925,"column":39,"offset":32722}}}],"position":{"start":{"line":925,"column":1,"offset":32684},"end":{"line":925,"column":39,"offset":32722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":927,"column":1,"offset":32724},"end":{"line":927,"column":112,"offset":32835}}}],"position":{"start":{"line":927,"column":1,"offset":32724},"end":{"line":927,"column":112,"offset":32835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":929,"column":1,"offset":32837},"end":{"line":929,"column":83,"offset":32919}}}],"position":{"start":{"line":929,"column":1,"offset":32837},"end":{"line":929,"column":83,"offset":32919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":931,"column":3,"offset":32923},"end":{"line":931,"column":11,"offset":32931}}}],"position":{"start":{"line":931,"column":1,"offset":32921},"end":{"line":931,"column":13,"offset":32933}}}],"position":{"start":{"line":931,"column":1,"offset":32921},"end":{"line":931,"column":13,"offset":32933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 3\nOutput: [1,3,3,1]\n"}],"position":{"start":{"line":933,"column":1,"offset":32935},"end":{"line":937,"column":4,"offset":32970}}}],"position":{"start":{"line":933,"column":1,"offset":32935},"end":{"line":937,"column":4,"offset":32970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":939,"column":3,"offset":32974},"end":{"line":939,"column":13,"offset":32984}}}],"position":{"start":{"line":939,"column":1,"offset":32972},"end":{"line":939,"column":15,"offset":32986}}}],"position":{"start":{"line":939,"column":1,"offset":32972},"end":{"line":939,"column":15,"offset":32986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":941,"column":1,"offset":32988},"end":{"line":941,"column":47,"offset":33034}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":941,"column":48,"offset":33035},"end":{"line":941,"column":49,"offset":33036}}}],"position":{"start":{"line":941,"column":47,"offset":33034},"end":{"line":941,"column":50,"offset":33037}}},{"type":"text","value":"(","position":{"start":{"line":941,"column":50,"offset":33037},"end":{"line":941,"column":51,"offset":33038}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":941,"column":52,"offset":33039},"end":{"line":941,"column":53,"offset":33040}}}],"position":{"start":{"line":941,"column":51,"offset":33038},"end":{"line":941,"column":54,"offset":33041}}},{"type":"text","value":") extra space?","position":{"start":{"line":941,"column":54,"offset":33041},"end":{"line":941,"column":68,"offset":33055}}}],"position":{"start":{"line":941,"column":1,"offset":32988},"end":{"line":941,"column":68,"offset":33055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":943,"column":5,"offset":33061},"end":{"line":943,"column":14,"offset":33070}}}],"position":{"start":{"line":943,"column":1,"offset":33057},"end":{"line":943,"column":14,"offset":33070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":945,"column":1,"offset":33072},"end":{"line":945,"column":44,"offset":33115}}}],"position":{"start":{"line":945,"column":1,"offset":33072},"end":{"line":945,"column":44,"offset":33115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"State ","position":{"start":{"line":947,"column":1,"offset":33117},"end":{"line":947,"column":7,"offset":33123}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i, j)"}],"position":{"start":{"line":947,"column":7,"offset":33123},"end":{"line":947,"column":15,"offset":33131}}},{"type":"text","value":" depends on ","position":{"start":{"line":947,"column":15,"offset":33131},"end":{"line":947,"column":27,"offset":33143}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j)"}],"position":{"start":{"line":947,"column":27,"offset":33143},"end":{"line":947,"column":37,"offset":33153}}},{"type":"text","value":" and ","position":{"start":{"line":947,"column":37,"offset":33153},"end":{"line":947,"column":42,"offset":33158}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":947,"column":42,"offset":33158},"end":{"line":947,"column":54,"offset":33170}}},{"type":"text","value":". So to access ","position":{"start":{"line":947,"column":54,"offset":33170},"end":{"line":947,"column":69,"offset":33185}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":947,"column":69,"offset":33185},"end":{"line":947,"column":81,"offset":33197}}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":947,"column":81,"offset":33197},"end":{"line":947,"column":119,"offset":33235}}}],"position":{"start":{"line":947,"column":1,"offset":33117},"end":{"line":947,"column":119,"offset":33235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};\n"}],"position":{"start":{"line":949,"column":1,"offset":33237},"end":{"line":970,"column":4,"offset":33588}}}],"position":{"start":{"line":949,"column":1,"offset":33237},"end":{"line":970,"column":4,"offset":33588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":972,"column":1,"offset":33590},"end":{"line":972,"column":4,"offset":33593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":974,"column":1,"offset":33595},"end":{"line":976,"column":10,"offset":33639}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":976,"column":10,"offset":33639},"end":{"line":976,"column":40,"offset":33669}}}],"position":{"start":{"line":976,"column":10,"offset":33639},"end":{"line":976,"column":40,"offset":33669}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":976,"column":40,"offset":33669},"end":{"line":977,"column":24,"offset":33693}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":977,"column":24,"offset":33693},"end":{"line":977,"column":68,"offset":33737}}}],"position":{"start":{"line":977,"column":24,"offset":33693},"end":{"line":977,"column":68,"offset":33737}}}],"position":{"start":{"line":974,"column":1,"offset":33595},"end":{"line":977,"column":68,"offset":33737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":979,"column":1,"offset":33739},"end":{"line":979,"column":4,"offset":33742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#120-trianglehttpsleetcodecomproblemstriangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":981,"column":2,"offset":33745},"end":{"line":981,"column":142,"offset":33885}}}],"position":{"start":{"line":981,"column":1,"offset":33744},"end":{"line":981,"column":201,"offset":33944}}}],"position":{"start":{"line":981,"column":1,"offset":33744},"end":{"line":981,"column":201,"offset":33944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":983,"column":4,"offset":33949},"end":{"line":983,"column":6,"offset":33951}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/triangle/description/"},"children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":983,"column":7,"offset":33952},"end":{"line":983,"column":20,"offset":33965}}}],"position":{"start":{"line":983,"column":6,"offset":33951},"end":{"line":983,"column":74,"offset":34019}}}],"position":{"start":{"line":983,"column":1,"offset":33946},"end":{"line":983,"column":74,"offset":34019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":985,"column":5,"offset":34025},"end":{"line":985,"column":13,"offset":34033}}}],"position":{"start":{"line":985,"column":1,"offset":34021},"end":{"line":985,"column":13,"offset":34033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":987,"column":1,"offset":34035},"end":{"line":987,"column":125,"offset":34159}}}],"position":{"start":{"line":987,"column":1,"offset":34035},"end":{"line":987,"column":125,"offset":34159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":989,"column":1,"offset":34161},"end":{"line":989,"column":42,"offset":34202}}}],"position":{"start":{"line":989,"column":1,"offset":34161},"end":{"line":989,"column":42,"offset":34202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n"}],"position":{"start":{"line":991,"column":1,"offset":34204},"end":{"line":999,"column":4,"offset":34261}}}],"position":{"start":{"line":991,"column":1,"offset":34204},"end":{"line":999,"column":4,"offset":34261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":1001,"column":1,"offset":34263},"end":{"line":1001,"column":44,"offset":34306}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"11"}],"position":{"start":{"line":1001,"column":44,"offset":34306},"end":{"line":1001,"column":48,"offset":34310}}},{"type":"text","value":" (i.e., ","position":{"start":{"line":1001,"column":48,"offset":34310},"end":{"line":1001,"column":56,"offset":34318}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2","position":{"start":{"line":1001,"column":58,"offset":34320},"end":{"line":1001,"column":59,"offset":34321}}}],"position":{"start":{"line":1001,"column":56,"offset":34318},"end":{"line":1001,"column":61,"offset":34323}}},{"type":"text","value":" + ","position":{"start":{"line":1001,"column":61,"offset":34323},"end":{"line":1001,"column":64,"offset":34326}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3","position":{"start":{"line":1001,"column":66,"offset":34328},"end":{"line":1001,"column":67,"offset":34329}}}],"position":{"start":{"line":1001,"column":64,"offset":34326},"end":{"line":1001,"column":69,"offset":34331}}},{"type":"text","value":" + ","position":{"start":{"line":1001,"column":69,"offset":34331},"end":{"line":1001,"column":72,"offset":34334}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5","position":{"start":{"line":1001,"column":74,"offset":34336},"end":{"line":1001,"column":75,"offset":34337}}}],"position":{"start":{"line":1001,"column":72,"offset":34334},"end":{"line":1001,"column":77,"offset":34339}}},{"type":"text","value":" + ","position":{"start":{"line":1001,"column":77,"offset":34339},"end":{"line":1001,"column":80,"offset":34342}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1","position":{"start":{"line":1001,"column":82,"offset":34344},"end":{"line":1001,"column":83,"offset":34345}}}],"position":{"start":{"line":1001,"column":80,"offset":34342},"end":{"line":1001,"column":85,"offset":34347}}},{"type":"text","value":" = 11).","position":{"start":{"line":1001,"column":85,"offset":34347},"end":{"line":1001,"column":92,"offset":34354}}}],"position":{"start":{"line":1001,"column":1,"offset":34263},"end":{"line":1001,"column":92,"offset":34354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1003,"column":3,"offset":34358},"end":{"line":1003,"column":8,"offset":34363}}}],"position":{"start":{"line":1003,"column":1,"offset":34356},"end":{"line":1003,"column":10,"offset":34365}}}],"position":{"start":{"line":1003,"column":1,"offset":34356},"end":{"line":1003,"column":10,"offset":34365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":1005,"column":1,"offset":34367},"end":{"line":1005,"column":51,"offset":34417}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":1005,"column":52,"offset":34418},"end":{"line":1005,"column":53,"offset":34419}}}],"position":{"start":{"line":1005,"column":51,"offset":34417},"end":{"line":1005,"column":54,"offset":34420}}},{"type":"text","value":"(","position":{"start":{"line":1005,"column":54,"offset":34420},"end":{"line":1005,"column":55,"offset":34421}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":1005,"column":56,"offset":34422},"end":{"line":1005,"column":57,"offset":34423}}}],"position":{"start":{"line":1005,"column":55,"offset":34421},"end":{"line":1005,"column":58,"offset":34424}}},{"type":"text","value":") extra space, where ","position":{"start":{"line":1005,"column":58,"offset":34424},"end":{"line":1005,"column":79,"offset":34445}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":1005,"column":80,"offset":34446},"end":{"line":1005,"column":81,"offset":34447}}}],"position":{"start":{"line":1005,"column":79,"offset":34445},"end":{"line":1005,"column":82,"offset":34448}}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":1005,"column":82,"offset":34448},"end":{"line":1005,"column":127,"offset":34493}}}],"position":{"start":{"line":1005,"column":1,"offset":34367},"end":{"line":1005,"column":127,"offset":34493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1007,"column":5,"offset":34499},"end":{"line":1007,"column":14,"offset":34508}}}],"position":{"start":{"line":1007,"column":1,"offset":34495},"end":{"line":1007,"column":14,"offset":34508}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1009,"column":1,"offset":34510},"end":{"line":1009,"column":8,"offset":34517}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":1009,"column":8,"offset":34517},"end":{"line":1009,"column":17,"offset":34526}}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":1009,"column":17,"offset":34526},"end":{"line":1009,"column":50,"offset":34559}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[0][0]"}],"position":{"start":{"line":1009,"column":50,"offset":34559},"end":{"line":1009,"column":66,"offset":34575}}},{"type":"text","value":" to ","position":{"start":{"line":1009,"column":66,"offset":34575},"end":{"line":1009,"column":70,"offset":34579}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[i][j]"}],"position":{"start":{"line":1009,"column":70,"offset":34579},"end":{"line":1009,"column":86,"offset":34595}}},{"type":"text","value":".","position":{"start":{"line":1009,"column":86,"offset":34595},"end":{"line":1009,"column":87,"offset":34596}}}],"position":{"start":{"line":1009,"column":1,"offset":34510},"end":{"line":1009,"column":87,"offset":34596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0\n"}],"position":{"start":{"line":1011,"column":1,"offset":34598},"end":{"line":1013,"column":50,"offset":34760}}}],"position":{"start":{"line":1011,"column":1,"offset":34598},"end":{"line":1013,"column":50,"offset":34760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":1015,"column":1,"offset":34762},"end":{"line":1015,"column":27,"offset":34788}}}],"position":{"start":{"line":1015,"column":1,"offset":34762},"end":{"line":1015,"column":27,"offset":34788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};\n"}],"position":{"start":{"line":1017,"column":1,"offset":34790},"end":{"line":1038,"column":4,"offset":35273}}}],"position":{"start":{"line":1017,"column":1,"offset":34790},"end":{"line":1038,"column":4,"offset":35273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1040,"column":1,"offset":35275},"end":{"line":1040,"column":4,"offset":35278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1042,"column":1,"offset":35280},"end":{"line":1044,"column":10,"offset":35322}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1044,"column":10,"offset":35322},"end":{"line":1044,"column":40,"offset":35352}}}],"position":{"start":{"line":1044,"column":10,"offset":35322},"end":{"line":1044,"column":40,"offset":35352}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":1044,"column":40,"offset":35352},"end":{"line":1045,"column":24,"offset":35376}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":1045,"column":24,"offset":35376},"end":{"line":1045,"column":68,"offset":35420}}}],"position":{"start":{"line":1045,"column":24,"offset":35376},"end":{"line":1045,"column":68,"offset":35420}}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":1045,"column":68,"offset":35420},"end":{"line":1047,"column":21,"offset":35460}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-subarray"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":1047,"column":21,"offset":35460},"end":{"line":1047,"column":67,"offset":35506}}}],"position":{"start":{"line":1047,"column":21,"offset":35460},"end":{"line":1047,"column":67,"offset":35506}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":1047,"column":67,"offset":35506},"end":{"line":1048,"column":39,"offset":35545}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":1048,"column":39,"offset":35545},"end":{"line":1048,"column":103,"offset":35609}}}],"position":{"start":{"line":1048,"column":39,"offset":35545},"end":{"line":1048,"column":103,"offset":35609}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":1048,"column":103,"offset":35609},"end":{"line":1049,"column":40,"offset":35649}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":1049,"column":40,"offset":35649},"end":{"line":1049,"column":105,"offset":35714}}}],"position":{"start":{"line":1049,"column":40,"offset":35649},"end":{"line":1049,"column":105,"offset":35714}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1049,"column":105,"offset":35714},"end":{"line":1050,"column":39,"offset":35753}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1050,"column":39,"offset":35753},"end":{"line":1050,"column":103,"offset":35817}}}],"position":{"start":{"line":1050,"column":39,"offset":35753},"end":{"line":1050,"column":103,"offset":35817}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":1050,"column":103,"offset":35817},"end":{"line":1051,"column":50,"offset":35867}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":1051,"column":50,"offset":35867},"end":{"line":1051,"column":125,"offset":35942}}}],"position":{"start":{"line":1051,"column":50,"offset":35867},"end":{"line":1051,"column":125,"offset":35942}}}],"position":{"start":{"line":1042,"column":1,"offset":35280},"end":{"line":1051,"column":125,"offset":35942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1053,"column":1,"offset":35944},"end":{"line":1053,"column":4,"offset":35947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1055,"column":2,"offset":35950},"end":{"line":1055,"column":142,"offset":36090}}}],"position":{"start":{"line":1055,"column":1,"offset":35949},"end":{"line":1055,"column":247,"offset":36195}}}],"position":{"start":{"line":1055,"column":1,"offset":35949},"end":{"line":1055,"column":247,"offset":36195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1057,"column":4,"offset":36200},"end":{"line":1057,"column":6,"offset":36202}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":1057,"column":7,"offset":36203},"end":{"line":1057,"column":43,"offset":36239}}}],"position":{"start":{"line":1057,"column":6,"offset":36202},"end":{"line":1057,"column":120,"offset":36316}}}],"position":{"start":{"line":1057,"column":1,"offset":36197},"end":{"line":1057,"column":120,"offset":36316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1059,"column":5,"offset":36322},"end":{"line":1059,"column":13,"offset":36330}}}],"position":{"start":{"line":1059,"column":1,"offset":36318},"end":{"line":1059,"column":13,"offset":36330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1061,"column":1,"offset":36332},"end":{"line":1061,"column":37,"offset":36368}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1061,"column":38,"offset":36369},"end":{"line":1061,"column":39,"offset":36370}}}],"position":{"start":{"line":1061,"column":37,"offset":36368},"end":{"line":1061,"column":40,"offset":36371}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1061,"column":40,"offset":36371},"end":{"line":1061,"column":88,"offset":36419}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1061,"column":89,"offset":36420},"end":{"line":1061,"column":90,"offset":36421}}}],"position":{"start":{"line":1061,"column":88,"offset":36419},"end":{"line":1061,"column":91,"offset":36422}}},{"type":"text","value":".","position":{"start":{"line":1061,"column":91,"offset":36422},"end":{"line":1061,"column":92,"offset":36423}}}],"position":{"start":{"line":1061,"column":1,"offset":36332},"end":{"line":1061,"column":92,"offset":36423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":1063,"column":1,"offset":36425},"end":{"line":1063,"column":160,"offset":36584}}}],"position":{"start":{"line":1063,"column":1,"offset":36425},"end":{"line":1063,"column":160,"offset":36584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":1065,"column":1,"offset":36586},"end":{"line":1065,"column":54,"offset":36639}}}],"position":{"start":{"line":1065,"column":1,"offset":36586},"end":{"line":1065,"column":54,"offset":36639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1067,"column":3,"offset":36643},"end":{"line":1067,"column":13,"offset":36653}}}],"position":{"start":{"line":1067,"column":1,"offset":36641},"end":{"line":1067,"column":15,"offset":36655}}}],"position":{"start":{"line":1067,"column":1,"offset":36641},"end":{"line":1067,"column":15,"offset":36655}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n"}],"position":{"start":{"line":1069,"column":1,"offset":36657},"end":{"line":1075,"column":4,"offset":36864}}}],"position":{"start":{"line":1069,"column":1,"offset":36657},"end":{"line":1075,"column":4,"offset":36864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1077,"column":3,"offset":36868},"end":{"line":1077,"column":13,"offset":36878}}}],"position":{"start":{"line":1077,"column":1,"offset":36866},"end":{"line":1077,"column":15,"offset":36880}}}],"position":{"start":{"line":1077,"column":1,"offset":36866},"end":{"line":1077,"column":15,"offset":36880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1079,"column":1,"offset":36882},"end":{"line":1084,"column":4,"offset":36991}}}],"position":{"start":{"line":1079,"column":1,"offset":36882},"end":{"line":1084,"column":4,"offset":36991}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1086,"column":5,"offset":36997},"end":{"line":1086,"column":14,"offset":37006}}}],"position":{"start":{"line":1086,"column":1,"offset":36993},"end":{"line":1086,"column":14,"offset":37006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":1088,"column":1,"offset":37008},"end":{"line":1088,"column":110,"offset":37117}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1088,"column":110,"offset":37117},"end":{"line":1088,"column":113,"offset":37120}}},{"type":"text","value":" whose price ","position":{"start":{"line":1088,"column":113,"offset":37120},"end":{"line":1088,"column":126,"offset":37133}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":1088,"column":126,"offset":37133},"end":{"line":1088,"column":136,"offset":37143}}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":1088,"column":136,"offset":37143},"end":{"line":1088,"column":227,"offset":37234}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j-1"}],"position":{"start":{"line":1088,"column":227,"offset":37234},"end":{"line":1088,"column":232,"offset":37239}}},{"type":"text","value":" instead and make ","position":{"start":{"line":1088,"column":232,"offset":37239},"end":{"line":1088,"column":250,"offset":37257}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1088,"column":250,"offset":37257},"end":{"line":1088,"column":253,"offset":37260}}},{"type":"text","value":" the new base.","position":{"start":{"line":1088,"column":253,"offset":37260},"end":{"line":1088,"column":267,"offset":37274}}}],"position":{"start":{"line":1088,"column":1,"offset":37008},"end":{"line":1088,"column":267,"offset":37274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because ","position":{"start":{"line":1090,"column":1,"offset":37276},"end":{"line":1090,"column":9,"offset":37284}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":1090,"column":9,"offset":37284},"end":{"line":1090,"column":19,"offset":37294}}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":1090,"column":19,"offset":37294},"end":{"line":1090,"column":50,"offset":37325}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":1090,"column":50,"offset":37325},"end":{"line":1090,"column":53,"offset":37328}}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":1090,"column":53,"offset":37328},"end":{"line":1090,"column":125,"offset":37400}}}],"position":{"start":{"line":1090,"column":1,"offset":37276},"end":{"line":1090,"column":125,"offset":37400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":1092,"column":1,"offset":37402},"end":{"line":1111,"column":4,"offset":37788}}}],"position":{"start":{"line":1092,"column":1,"offset":37402},"end":{"line":1111,"column":4,"offset":37788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1113,"column":1,"offset":37790},"end":{"line":1113,"column":4,"offset":37793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1115,"column":1,"offset":37795},"end":{"line":1117,"column":10,"offset":37837}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1117,"column":10,"offset":37837},"end":{"line":1117,"column":40,"offset":37867}}}],"position":{"start":{"line":1117,"column":10,"offset":37837},"end":{"line":1117,"column":40,"offset":37867}}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":1117,"column":40,"offset":37867},"end":{"line":1118,"column":11,"offset":37878}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/greedy"},"children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":1118,"column":11,"offset":37878},"end":{"line":1118,"column":42,"offset":37909}}}],"position":{"start":{"line":1118,"column":11,"offset":37878},"end":{"line":1118,"column":42,"offset":37909}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":1118,"column":42,"offset":37909},"end":{"line":1120,"column":36,"offset":37964}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":1120,"column":36,"offset":37964},"end":{"line":1120,"column":97,"offset":38025}}}],"position":{"start":{"line":1120,"column":36,"offset":37964},"end":{"line":1120,"column":97,"offset":38025}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":1120,"column":97,"offset":38025},"end":{"line":1121,"column":40,"offset":38065}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":1121,"column":40,"offset":38065},"end":{"line":1121,"column":105,"offset":38130}}}],"position":{"start":{"line":1121,"column":40,"offset":38065},"end":{"line":1121,"column":105,"offset":38130}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1121,"column":105,"offset":38130},"end":{"line":1122,"column":39,"offset":38169}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1122,"column":39,"offset":38169},"end":{"line":1122,"column":103,"offset":38233}}}],"position":{"start":{"line":1122,"column":39,"offset":38169},"end":{"line":1122,"column":103,"offset":38233}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":1122,"column":103,"offset":38233},"end":{"line":1123,"column":50,"offset":38283}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":1123,"column":50,"offset":38283},"end":{"line":1123,"column":125,"offset":38358}}}],"position":{"start":{"line":1123,"column":50,"offset":38283},"end":{"line":1123,"column":125,"offset":38358}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":1123,"column":125,"offset":38358},"end":{"line":1124,"column":57,"offset":38415}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":1124,"column":57,"offset":38415},"end":{"line":1124,"column":139,"offset":38497}}}],"position":{"start":{"line":1124,"column":57,"offset":38415},"end":{"line":1124,"column":139,"offset":38497}}}],"position":{"start":{"line":1115,"column":1,"offset":37795},"end":{"line":1124,"column":139,"offset":38497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1126,"column":1,"offset":38499},"end":{"line":1126,"column":4,"offset":38502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1128,"column":2,"offset":38505},"end":{"line":1128,"column":142,"offset":38645}}}],"position":{"start":{"line":1128,"column":1,"offset":38504},"end":{"line":1128,"column":253,"offset":38756}}}],"position":{"start":{"line":1128,"column":1,"offset":38504},"end":{"line":1128,"column":253,"offset":38756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1130,"column":4,"offset":38761},"end":{"line":1130,"column":6,"offset":38763}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/"},"children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":1130,"column":7,"offset":38764},"end":{"line":1130,"column":46,"offset":38803}}}],"position":{"start":{"line":1130,"column":6,"offset":38763},"end":{"line":1130,"column":126,"offset":38883}}}],"position":{"start":{"line":1130,"column":1,"offset":38758},"end":{"line":1130,"column":126,"offset":38883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1132,"column":5,"offset":38889},"end":{"line":1132,"column":13,"offset":38897}}}],"position":{"start":{"line":1132,"column":1,"offset":38885},"end":{"line":1132,"column":13,"offset":38897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1134,"column":1,"offset":38899},"end":{"line":1134,"column":37,"offset":38935}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1134,"column":38,"offset":38936},"end":{"line":1134,"column":39,"offset":38937}}}],"position":{"start":{"line":1134,"column":37,"offset":38935},"end":{"line":1134,"column":40,"offset":38938}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1134,"column":40,"offset":38938},"end":{"line":1134,"column":88,"offset":38986}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1134,"column":89,"offset":38987},"end":{"line":1134,"column":90,"offset":38988}}}],"position":{"start":{"line":1134,"column":88,"offset":38986},"end":{"line":1134,"column":91,"offset":38989}}},{"type":"text","value":".","position":{"start":{"line":1134,"column":91,"offset":38989},"end":{"line":1134,"column":92,"offset":38990}}}],"position":{"start":{"line":1134,"column":1,"offset":38899},"end":{"line":1134,"column":92,"offset":38990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":1136,"column":1,"offset":38992},"end":{"line":1136,"column":162,"offset":39153}}}],"position":{"start":{"line":1136,"column":1,"offset":38992},"end":{"line":1136,"column":162,"offset":39153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1138,"column":3,"offset":39157},"end":{"line":1138,"column":8,"offset":39162}}}],"position":{"start":{"line":1138,"column":1,"offset":39155},"end":{"line":1138,"column":10,"offset":39164}}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":1138,"column":10,"offset":39164},"end":{"line":1138,"column":125,"offset":39279}}}],"position":{"start":{"line":1138,"column":1,"offset":39155},"end":{"line":1138,"column":125,"offset":39279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1140,"column":3,"offset":39283},"end":{"line":1140,"column":13,"offset":39293}}}],"position":{"start":{"line":1140,"column":1,"offset":39281},"end":{"line":1140,"column":15,"offset":39295}}}],"position":{"start":{"line":1140,"column":1,"offset":39281},"end":{"line":1140,"column":15,"offset":39295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n"}],"position":{"start":{"line":1142,"column":1,"offset":39297},"end":{"line":1148,"column":4,"offset":39515}}}],"position":{"start":{"line":1142,"column":1,"offset":39297},"end":{"line":1148,"column":4,"offset":39515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1150,"column":3,"offset":39519},"end":{"line":1150,"column":13,"offset":39529}}}],"position":{"start":{"line":1150,"column":1,"offset":39517},"end":{"line":1150,"column":15,"offset":39531}}}],"position":{"start":{"line":1150,"column":1,"offset":39517},"end":{"line":1150,"column":15,"offset":39531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":1152,"column":1,"offset":39533},"end":{"line":1159,"column":4,"offset":39847}}}],"position":{"start":{"line":1152,"column":1,"offset":39533},"end":{"line":1159,"column":4,"offset":39847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1161,"column":3,"offset":39851},"end":{"line":1161,"column":13,"offset":39861}}}],"position":{"start":{"line":1161,"column":1,"offset":39849},"end":{"line":1161,"column":15,"offset":39863}}}],"position":{"start":{"line":1161,"column":1,"offset":39849},"end":{"line":1161,"column":15,"offset":39863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1163,"column":1,"offset":39865},"end":{"line":1165,"column":76,"offset":39977}}}],"position":{"start":{"line":1163,"column":1,"offset":39865},"end":{"line":1165,"column":76,"offset":39977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1167,"column":5,"offset":39983},"end":{"line":1167,"column":14,"offset":39992}}}],"position":{"start":{"line":1167,"column":1,"offset":39979},"end":{"line":1167,"column":14,"offset":39992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":1169,"column":1,"offset":39994},"end":{"line":1169,"column":144,"offset":40137}}}],"position":{"start":{"line":1169,"column":1,"offset":39994},"end":{"line":1169,"column":144,"offset":40137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":1171,"column":1,"offset":40139},"end":{"line":1186,"column":4,"offset":40428}}}],"position":{"start":{"line":1171,"column":1,"offset":40139},"end":{"line":1186,"column":4,"offset":40428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1188,"column":1,"offset":40430},"end":{"line":1188,"column":4,"offset":40433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1190,"column":1,"offset":40435},"end":{"line":1192,"column":10,"offset":40477}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1192,"column":10,"offset":40477},"end":{"line":1192,"column":40,"offset":40507}}}],"position":{"start":{"line":1192,"column":10,"offset":40477},"end":{"line":1192,"column":40,"offset":40507}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":1192,"column":40,"offset":40507},"end":{"line":1193,"column":24,"offset":40531}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":1193,"column":24,"offset":40531},"end":{"line":1193,"column":68,"offset":40575}}}],"position":{"start":{"line":1193,"column":24,"offset":40531},"end":{"line":1193,"column":68,"offset":40575}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":1193,"column":68,"offset":40575},"end":{"line":1195,"column":36,"offset":40630}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":1195,"column":36,"offset":40630},"end":{"line":1195,"column":97,"offset":40691}}}],"position":{"start":{"line":1195,"column":36,"offset":40630},"end":{"line":1195,"column":97,"offset":40691}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":1195,"column":97,"offset":40691},"end":{"line":1196,"column":39,"offset":40730}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":1196,"column":39,"offset":40730},"end":{"line":1196,"column":103,"offset":40794}}}],"position":{"start":{"line":1196,"column":39,"offset":40730},"end":{"line":1196,"column":103,"offset":40794}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":1196,"column":103,"offset":40794},"end":{"line":1197,"column":39,"offset":40833}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":1197,"column":39,"offset":40833},"end":{"line":1197,"column":103,"offset":40897}}}],"position":{"start":{"line":1197,"column":39,"offset":40833},"end":{"line":1197,"column":103,"offset":40897}}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":1197,"column":103,"offset":40897},"end":{"line":1198,"column":47,"offset":40944}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":1198,"column":47,"offset":40944},"end":{"line":1198,"column":119,"offset":41016}}}],"position":{"start":{"line":1198,"column":47,"offset":40944},"end":{"line":1198,"column":119,"offset":41016}}}],"position":{"start":{"line":1190,"column":1,"offset":40435},"end":{"line":1198,"column":119,"offset":41016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1200,"column":1,"offset":41018},"end":{"line":1200,"column":4,"offset":41021}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1202,"column":2,"offset":41024},"end":{"line":1202,"column":142,"offset":41164}}}],"position":{"start":{"line":1202,"column":1,"offset":41023},"end":{"line":1202,"column":255,"offset":41277}}}],"position":{"start":{"line":1202,"column":1,"offset":41023},"end":{"line":1202,"column":255,"offset":41277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1204,"column":4,"offset":41282},"end":{"line":1204,"column":6,"offset":41284}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/"},"children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":1204,"column":7,"offset":41285},"end":{"line":1204,"column":47,"offset":41325}}}],"position":{"start":{"line":1204,"column":6,"offset":41284},"end":{"line":1204,"column":128,"offset":41406}}}],"position":{"start":{"line":1204,"column":1,"offset":41279},"end":{"line":1204,"column":128,"offset":41406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1206,"column":5,"offset":41412},"end":{"line":1206,"column":13,"offset":41420}}}],"position":{"start":{"line":1206,"column":1,"offset":41408},"end":{"line":1206,"column":13,"offset":41420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":1208,"column":1,"offset":41422},"end":{"line":1208,"column":37,"offset":41458}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1208,"column":38,"offset":41459},"end":{"line":1208,"column":39,"offset":41460}}}],"position":{"start":{"line":1208,"column":37,"offset":41458},"end":{"line":1208,"column":40,"offset":41461}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":1208,"column":40,"offset":41461},"end":{"line":1208,"column":88,"offset":41509}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":1208,"column":89,"offset":41510},"end":{"line":1208,"column":90,"offset":41511}}}],"position":{"start":{"line":1208,"column":88,"offset":41509},"end":{"line":1208,"column":91,"offset":41512}}},{"type":"text","value":".","position":{"start":{"line":1208,"column":91,"offset":41512},"end":{"line":1208,"column":92,"offset":41513}}}],"position":{"start":{"line":1208,"column":1,"offset":41422},"end":{"line":1208,"column":92,"offset":41513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":1210,"column":1,"offset":41515},"end":{"line":1210,"column":74,"offset":41588}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":1210,"column":75,"offset":41589},"end":{"line":1210,"column":78,"offset":41592}}}],"position":{"start":{"line":1210,"column":74,"offset":41588},"end":{"line":1210,"column":79,"offset":41593}}},{"type":"text","value":" transactions.","position":{"start":{"line":1210,"column":79,"offset":41593},"end":{"line":1210,"column":93,"offset":41607}}}],"position":{"start":{"line":1210,"column":1,"offset":41515},"end":{"line":1210,"column":93,"offset":41607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"*","position":{"start":{"line":1212,"column":1,"offset":41609},"end":{"line":1212,"column":3,"offset":41611}}},{"type":"text","value":"*","position":{"start":{"line":1212,"column":3,"offset":41611},"end":{"line":1212,"column":5,"offset":41613}}},{"type":"text","value":"Note:","position":{"start":{"line":1212,"column":5,"offset":41613},"end":{"line":1212,"column":10,"offset":41618}}},{"type":"text","value":"*","position":{"start":{"line":1212,"column":10,"offset":41618},"end":{"line":1212,"column":12,"offset":41620}}},{"type":"text","value":"*","position":{"start":{"line":1212,"column":12,"offset":41620},"end":{"line":1212,"column":14,"offset":41622}}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":1212,"column":14,"offset":41622},"end":{"line":1212,"column":128,"offset":41736}}}],"position":{"start":{"line":1212,"column":1,"offset":41609},"end":{"line":1212,"column":128,"offset":41736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1214,"column":3,"offset":41740},"end":{"line":1214,"column":13,"offset":41750}}}],"position":{"start":{"line":1214,"column":1,"offset":41738},"end":{"line":1214,"column":15,"offset":41752}}}],"position":{"start":{"line":1214,"column":1,"offset":41738},"end":{"line":1214,"column":15,"offset":41752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n"}],"position":{"start":{"line":1216,"column":1,"offset":41754},"end":{"line":1219,"column":96,"offset":41983}}}],"position":{"start":{"line":1216,"column":1,"offset":41754},"end":{"line":1219,"column":96,"offset":41983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1221,"column":3,"offset":41987},"end":{"line":1221,"column":13,"offset":41997}}}],"position":{"start":{"line":1221,"column":1,"offset":41985},"end":{"line":1221,"column":15,"offset":41999}}}],"position":{"start":{"line":1221,"column":1,"offset":41985},"end":{"line":1221,"column":15,"offset":41999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":1223,"column":1,"offset":42001},"end":{"line":1230,"column":4,"offset":42315}}}],"position":{"start":{"line":1223,"column":1,"offset":42001},"end":{"line":1230,"column":4,"offset":42315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1232,"column":3,"offset":42319},"end":{"line":1232,"column":13,"offset":42329}}}],"position":{"start":{"line":1232,"column":1,"offset":42317},"end":{"line":1232,"column":15,"offset":42331}}}],"position":{"start":{"line":1232,"column":1,"offset":42317},"end":{"line":1232,"column":15,"offset":42331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":1234,"column":1,"offset":42333},"end":{"line":1236,"column":76,"offset":42445}}}],"position":{"start":{"line":1234,"column":1,"offset":42333},"end":{"line":1236,"column":76,"offset":42445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1238,"column":5,"offset":42451},"end":{"line":1238,"column":14,"offset":42460}}}],"position":{"start":{"line":1238,"column":1,"offset":42447},"end":{"line":1238,"column":14,"offset":42460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":1240,"column":1,"offset":42462},"end":{"line":1240,"column":200,"offset":42661}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":1240,"column":201,"offset":42662},"end":{"line":1240,"column":204,"offset":42665}}}],"position":{"start":{"line":1240,"column":200,"offset":42661},"end":{"line":1240,"column":205,"offset":42666}}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":1240,"column":205,"offset":42666},"end":{"line":1240,"column":256,"offset":42717}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...k]"}],"position":{"start":{"line":1240,"column":256,"offset":42717},"end":{"line":1240,"column":265,"offset":42726}}},{"type":"text","value":" and ","position":{"start":{"line":1240,"column":265,"offset":42726},"end":{"line":1240,"column":270,"offset":42731}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[k...n-1]"}],"position":{"start":{"line":1240,"column":270,"offset":42731},"end":{"line":1240,"column":281,"offset":42742}}},{"type":"text","value":". Notice ","position":{"start":{"line":1240,"column":281,"offset":42742},"end":{"line":1240,"column":290,"offset":42751}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"k"}],"position":{"start":{"line":1240,"column":290,"offset":42751},"end":{"line":1240,"column":293,"offset":42754}}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":1240,"column":293,"offset":42754},"end":{"line":1240,"column":392,"offset":42853}}}],"position":{"start":{"line":1240,"column":1,"offset":42462},"end":{"line":1240,"column":392,"offset":42853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1242,"column":1,"offset":42855},"end":{"line":1242,"column":8,"offset":42862}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(i)"}],"position":{"start":{"line":1242,"column":8,"offset":42862},"end":{"line":1242,"column":15,"offset":42869}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":1242,"column":15,"offset":42869},"end":{"line":1242,"column":44,"offset":42898}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...i]"}],"position":{"start":{"line":1242,"column":44,"offset":42898},"end":{"line":1242,"column":53,"offset":42907}}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":1242,"column":53,"offset":42907},"end":{"line":1242,"column":88,"offset":42942}}},{"type":"element","tagName":"a","properties":{"href":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":1242,"column":89,"offset":42943},"end":{"line":1242,"column":125,"offset":42979}}}],"position":{"start":{"line":1242,"column":88,"offset":42942},"end":{"line":1242,"column":183,"offset":43037}}},{"type":"text","value":".","position":{"start":{"line":1242,"column":183,"offset":43037},"end":{"line":1242,"column":184,"offset":43038}}}],"position":{"start":{"line":1242,"column":1,"offset":42855},"end":{"line":1242,"column":184,"offset":43038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1\n"}],"position":{"start":{"line":1244,"column":1,"offset":43040},"end":{"line":1245,"column":87,"offset":43140}}}],"position":{"start":{"line":1244,"column":1,"offset":43040},"end":{"line":1245,"column":87,"offset":43140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1247,"column":1,"offset":43142},"end":{"line":1247,"column":8,"offset":43149}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(i)"}],"position":{"start":{"line":1247,"column":8,"offset":43149},"end":{"line":1247,"column":15,"offset":43156}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":1247,"column":15,"offset":43156},"end":{"line":1247,"column":44,"offset":43185}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[i...n-1]"}],"position":{"start":{"line":1247,"column":44,"offset":43185},"end":{"line":1247,"column":55,"offset":43196}}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":1247,"column":55,"offset":43196},"end":{"line":1247,"column":79,"offset":43220}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1"}],"position":{"start":{"line":1247,"column":79,"offset":43220},"end":{"line":1247,"column":83,"offset":43224}}},{"type":"text","value":".","position":{"start":{"line":1247,"column":83,"offset":43224},"end":{"line":1247,"column":84,"offset":43225}}}],"position":{"start":{"line":1247,"column":1,"offset":43142},"end":{"line":1247,"column":84,"offset":43225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0\n"}],"position":{"start":{"line":1249,"column":1,"offset":43227},"end":{"line":1250,"column":87,"offset":43329}}}],"position":{"start":{"line":1249,"column":1,"offset":43227},"end":{"line":1250,"column":87,"offset":43329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":1252,"column":1,"offset":43331},"end":{"line":1252,"column":8,"offset":43338}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(k)"}],"position":{"start":{"line":1252,"column":8,"offset":43338},"end":{"line":1252,"column":14,"offset":43344}}},{"type":"text","value":" to be ","position":{"start":{"line":1252,"column":14,"offset":43344},"end":{"line":1252,"column":21,"offset":43351}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(k) + p2(k)"}],"position":{"start":{"line":1252,"column":21,"offset":43351},"end":{"line":1252,"column":36,"offset":43366}}},{"type":"text","value":". We need to get ","position":{"start":{"line":1252,"column":36,"offset":43366},"end":{"line":1252,"column":53,"offset":43383}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"max( f(0), ..., f(n-1) )"}],"position":{"start":{"line":1252,"column":53,"offset":43383},"end":{"line":1252,"column":79,"offset":43409}}},{"type":"text","value":".","position":{"start":{"line":1252,"column":79,"offset":43409},"end":{"line":1252,"column":80,"offset":43410}}}],"position":{"start":{"line":1252,"column":1,"offset":43331},"end":{"line":1252,"column":80,"offset":43410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};\n"}],"position":{"start":{"line":1254,"column":1,"offset":43412},"end":{"line":1284,"column":4,"offset":44006}}}],"position":{"start":{"line":1254,"column":1,"offset":43412},"end":{"line":1284,"column":4,"offset":44006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1286,"column":1,"offset":44008},"end":{"line":1286,"column":4,"offset":44011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1288,"column":1,"offset":44013},"end":{"line":1290,"column":9,"offset":44054}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1290,"column":9,"offset":44054},"end":{"line":1290,"column":38,"offset":44083}}}],"position":{"start":{"line":1290,"column":9,"offset":44054},"end":{"line":1290,"column":38,"offset":44083}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1290,"column":38,"offset":44083},"end":{"line":1291,"column":23,"offset":44106}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1291,"column":23,"offset":44106},"end":{"line":1291,"column":66,"offset":44149}}}],"position":{"start":{"line":1291,"column":23,"offset":44106},"end":{"line":1291,"column":66,"offset":44149}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1291,"column":66,"offset":44149},"end":{"line":1293,"column":13,"offset":44181}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1293,"column":13,"offset":44181},"end":{"line":1293,"column":51,"offset":44219}}}],"position":{"start":{"line":1293,"column":13,"offset":44181},"end":{"line":1293,"column":51,"offset":44219}}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":1293,"column":51,"offset":44219},"end":{"line":1294,"column":29,"offset":44248}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers"},"children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":1294,"column":29,"offset":44248},"end":{"line":1294,"column":83,"offset":44302}}}],"position":{"start":{"line":1294,"column":29,"offset":44248},"end":{"line":1294,"column":83,"offset":44302}}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":1294,"column":83,"offset":44302},"end":{"line":1295,"column":16,"offset":44318}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":1295,"column":16,"offset":44318},"end":{"line":1295,"column":57,"offset":44359}}}],"position":{"start":{"line":1295,"column":16,"offset":44318},"end":{"line":1295,"column":57,"offset":44359}}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":1295,"column":57,"offset":44359},"end":{"line":1296,"column":26,"offset":44385}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-univalue-path"},"children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":1296,"column":26,"offset":44385},"end":{"line":1296,"column":77,"offset":44436}}}],"position":{"start":{"line":1296,"column":26,"offset":44385},"end":{"line":1296,"column":77,"offset":44436}}}],"position":{"start":{"line":1288,"column":1,"offset":44013},"end":{"line":1296,"column":77,"offset":44436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1298,"column":1,"offset":44438},"end":{"line":1298,"column":4,"offset":44441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1300,"column":2,"offset":44444},"end":{"line":1300,"column":142,"offset":44584}}}],"position":{"start":{"line":1300,"column":1,"offset":44443},"end":{"line":1300,"column":241,"offset":44683}}}],"position":{"start":{"line":1300,"column":1,"offset":44443},"end":{"line":1300,"column":241,"offset":44683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1302,"column":4,"offset":44688},"end":{"line":1302,"column":6,"offset":44690}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/"},"children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":1302,"column":7,"offset":44691},"end":{"line":1302,"column":40,"offset":44724}}}],"position":{"start":{"line":1302,"column":6,"offset":44690},"end":{"line":1302,"column":114,"offset":44798}}}],"position":{"start":{"line":1302,"column":1,"offset":44685},"end":{"line":1302,"column":114,"offset":44798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1304,"column":5,"offset":44804},"end":{"line":1304,"column":13,"offset":44812}}}],"position":{"start":{"line":1304,"column":1,"offset":44800},"end":{"line":1304,"column":13,"offset":44812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a ","position":{"start":{"line":1306,"column":1,"offset":44814},"end":{"line":1306,"column":9,"offset":44822}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"non-empty","position":{"start":{"line":1306,"column":11,"offset":44824},"end":{"line":1306,"column":20,"offset":44833}}}],"position":{"start":{"line":1306,"column":9,"offset":44822},"end":{"line":1306,"column":22,"offset":44835}}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":1306,"column":22,"offset":44835},"end":{"line":1306,"column":62,"offset":44875}}}],"position":{"start":{"line":1306,"column":1,"offset":44814},"end":{"line":1306,"column":62,"offset":44875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":1308,"column":1,"offset":44877},"end":{"line":1308,"column":168,"offset":45044}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"at least one node","position":{"start":{"line":1308,"column":170,"offset":45046},"end":{"line":1308,"column":187,"offset":45063}}}],"position":{"start":{"line":1308,"column":168,"offset":45044},"end":{"line":1308,"column":189,"offset":45065}}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":1308,"column":189,"offset":45065},"end":{"line":1308,"column":231,"offset":45107}}}],"position":{"start":{"line":1308,"column":1,"offset":44877},"end":{"line":1308,"column":231,"offset":45107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1310,"column":3,"offset":45111},"end":{"line":1310,"column":13,"offset":45121}}}],"position":{"start":{"line":1310,"column":1,"offset":45109},"end":{"line":1310,"column":15,"offset":45123}}}],"position":{"start":{"line":1310,"column":1,"offset":45109},"end":{"line":1310,"column":15,"offset":45123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6\n"}],"position":{"start":{"line":1312,"column":1,"offset":45125},"end":{"line":1321,"column":4,"offset":45190}}}],"position":{"start":{"line":1312,"column":1,"offset":45125},"end":{"line":1321,"column":4,"offset":45190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1323,"column":3,"offset":45194},"end":{"line":1323,"column":13,"offset":45204}}}],"position":{"start":{"line":1323,"column":1,"offset":45192},"end":{"line":1323,"column":15,"offset":45206}}}],"position":{"start":{"line":1323,"column":1,"offset":45192},"end":{"line":1323,"column":15,"offset":45206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42\n"}],"position":{"start":{"line":1325,"column":1,"offset":45208},"end":{"line":1336,"column":4,"offset":45303}}}],"position":{"start":{"line":1325,"column":1,"offset":45208},"end":{"line":1336,"column":4,"offset":45303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1338,"column":5,"offset":45309},"end":{"line":1338,"column":14,"offset":45318}}}],"position":{"start":{"line":1338,"column":1,"offset":45305},"end":{"line":1338,"column":14,"offset":45318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":1340,"column":1,"offset":45320},"end":{"line":1340,"column":11,"offset":45330}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":1340,"column":11,"offset":45330},"end":{"line":1340,"column":17,"offset":45336}}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":1340,"column":17,"offset":45336},"end":{"line":1340,"column":71,"offset":45390}}}],"position":{"start":{"line":1340,"column":1,"offset":45320},"end":{"line":1340,"column":71,"offset":45390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ","position":{"start":{"line":1342,"column":5,"offset":45396},"end":{"line":1342,"column":10,"offset":45401}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1342,"column":10,"offset":45401},"end":{"line":1342,"column":20,"offset":45411}}}],"position":{"start":{"line":1342,"column":5,"offset":45396},"end":{"line":1342,"column":20,"offset":45411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1343,"column":9,"offset":45420},"end":{"line":1343,"column":19,"offset":45430}}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":1343,"column":19,"offset":45430},"end":{"line":1343,"column":62,"offset":45473}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":1343,"column":62,"offset":45473},"end":{"line":1343,"column":73,"offset":45484}}},{"type":"text","value":".","position":{"start":{"line":1343,"column":73,"offset":45484},"end":{"line":1343,"column":74,"offset":45485}}}],"position":{"start":{"line":1343,"column":5,"offset":45416},"end":{"line":1343,"column":74,"offset":45485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1344,"column":9,"offset":45494},"end":{"line":1344,"column":19,"offset":45504}}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":1344,"column":19,"offset":45504},"end":{"line":1344,"column":64,"offset":45549}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":1344,"column":64,"offset":45549},"end":{"line":1344,"column":76,"offset":45561}}},{"type":"text","value":".","position":{"start":{"line":1344,"column":76,"offset":45561},"end":{"line":1344,"column":77,"offset":45562}}}],"position":{"start":{"line":1344,"column":5,"offset":45490},"end":{"line":1344,"column":77,"offset":45562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1345,"column":9,"offset":45571},"end":{"line":1345,"column":19,"offset":45581}}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":1345,"column":19,"offset":45581},"end":{"line":1345,"column":51,"offset":45613}}}],"position":{"start":{"line":1345,"column":5,"offset":45567},"end":{"line":1345,"column":51,"offset":45613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Just ","position":{"start":{"line":1346,"column":9,"offset":45622},"end":{"line":1346,"column":14,"offset":45627}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1346,"column":14,"offset":45627},"end":{"line":1346,"column":24,"offset":45637}}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":1346,"column":24,"offset":45637},"end":{"line":1346,"column":66,"offset":45679}}}],"position":{"start":{"line":1346,"column":5,"offset":45618},"end":{"line":1346,"column":66,"offset":45679}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1343,"column":5,"offset":45416},"end":{"line":1346,"column":66,"offset":45679}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1342,"column":1,"offset":45392},"end":{"line":1346,"column":66,"offset":45679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without","position":{"start":{"line":1347,"column":5,"offset":45684},"end":{"line":1347,"column":12,"offset":45691}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":1347,"column":12,"offset":45691},"end":{"line":1347,"column":22,"offset":45701}}},{"type":"text","value":" (disconnected)","position":{"start":{"line":1347,"column":22,"offset":45701},"end":{"line":1347,"column":37,"offset":45716}}}],"position":{"start":{"line":1347,"column":5,"offset":45684},"end":{"line":1347,"column":37,"offset":45716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":1348,"column":9,"offset":45725},"end":{"line":1348,"column":49,"offset":45765}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":1348,"column":49,"offset":45765},"end":{"line":1348,"column":60,"offset":45776}}},{"type":"text","value":" subtree.","position":{"start":{"line":1348,"column":60,"offset":45776},"end":{"line":1348,"column":69,"offset":45785}}}],"position":{"start":{"line":1348,"column":5,"offset":45721},"end":{"line":1348,"column":69,"offset":45785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":1349,"column":9,"offset":45794},"end":{"line":1349,"column":49,"offset":45834}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":1349,"column":49,"offset":45834},"end":{"line":1349,"column":61,"offset":45846}}},{"type":"text","value":" subtree.","position":{"start":{"line":1349,"column":61,"offset":45846},"end":{"line":1349,"column":70,"offset":45855}}}],"position":{"start":{"line":1349,"column":5,"offset":45790},"end":{"line":1349,"column":70,"offset":45855}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1348,"column":5,"offset":45721},"end":{"line":1349,"column":70,"offset":45855}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1347,"column":1,"offset":45680},"end":{"line":1349,"column":70,"offset":45855}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1342,"column":1,"offset":45392},"end":{"line":1349,"column":70,"offset":45855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":1351,"column":1,"offset":45857},"end":{"line":1351,"column":38,"offset":45894}}}],"position":{"start":{"line":1351,"column":1,"offset":45857},"end":{"line":1351,"column":38,"offset":45894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":1353,"column":6,"offset":45901},"end":{"line":1353,"column":9,"offset":45904}}}],"position":{"start":{"line":1353,"column":1,"offset":45896},"end":{"line":1353,"column":9,"offset":45904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":1355,"column":1,"offset":45906},"end":{"line":1355,"column":95,"offset":46000}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1355,"column":95,"offset":46000},"end":{"line":1355,"column":101,"offset":46006}}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":1355,"column":101,"offset":46006},"end":{"line":1355,"column":151,"offset":46056}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1355,"column":151,"offset":46056},"end":{"line":1355,"column":157,"offset":46062}}},{"type":"text","value":" node.","position":{"start":{"line":1355,"column":157,"offset":46062},"end":{"line":1355,"column":163,"offset":46068}}}],"position":{"start":{"line":1355,"column":1,"offset":45906},"end":{"line":1355,"column":163,"offset":46068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}\n"}],"position":{"start":{"line":1357,"column":1,"offset":46070},"end":{"line":1387,"column":4,"offset":46740}}}],"position":{"start":{"line":1357,"column":1,"offset":46070},"end":{"line":1387,"column":4,"offset":46740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":1389,"column":6,"offset":46747},"end":{"line":1389,"column":9,"offset":46750}}}],"position":{"start":{"line":1389,"column":1,"offset":46742},"end":{"line":1389,"column":9,"offset":46750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":1391,"column":1,"offset":46752},"end":{"line":1391,"column":57,"offset":46808}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1391,"column":57,"offset":46808},"end":{"line":1391,"column":63,"offset":46814}}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":1391,"column":63,"offset":46814},"end":{"line":1391,"column":127,"offset":46878}}}],"position":{"start":{"line":1391,"column":1,"offset":46752},"end":{"line":1391,"column":127,"offset":46878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}\n"}],"position":{"start":{"line":1393,"column":1,"offset":46880},"end":{"line":1429,"column":4,"offset":47672}}}],"position":{"start":{"line":1393,"column":1,"offset":46880},"end":{"line":1429,"column":4,"offset":47672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1431,"column":1,"offset":47674},"end":{"line":1431,"column":4,"offset":47677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":1433,"column":1,"offset":47679},"end":{"line":1435,"column":17,"offset":47728}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/two-pointers"},"children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":1435,"column":17,"offset":47728},"end":{"line":1435,"column":54,"offset":47765}}}],"position":{"start":{"line":1435,"column":17,"offset":47728},"end":{"line":1435,"column":54,"offset":47765}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1435,"column":54,"offset":47765},"end":{"line":1436,"column":11,"offset":47776}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1436,"column":11,"offset":47776},"end":{"line":1436,"column":42,"offset":47807}}}],"position":{"start":{"line":1436,"column":11,"offset":47776},"end":{"line":1436,"column":42,"offset":47807}}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":1436,"column":42,"offset":47807},"end":{"line":1438,"column":27,"offset":47853}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/palindrome-linked-list"},"children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":1438,"column":27,"offset":47853},"end":{"line":1438,"column":79,"offset":47905}}}],"position":{"start":{"line":1438,"column":27,"offset":47853},"end":{"line":1438,"column":79,"offset":47905}}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":1438,"column":79,"offset":47905},"end":{"line":1439,"column":24,"offset":47929}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":1439,"column":24,"offset":47929},"end":{"line":1439,"column":73,"offset":47978}}}],"position":{"start":{"line":1439,"column":24,"offset":47929},"end":{"line":1439,"column":73,"offset":47978}}}],"position":{"start":{"line":1433,"column":1,"offset":47679},"end":{"line":1439,"column":73,"offset":47978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1441,"column":1,"offset":47980},"end":{"line":1441,"column":4,"offset":47983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1443,"column":2,"offset":47986},"end":{"line":1443,"column":142,"offset":48126}}}],"position":{"start":{"line":1443,"column":1,"offset":47985},"end":{"line":1443,"column":217,"offset":48201}}}],"position":{"start":{"line":1443,"column":1,"offset":47985},"end":{"line":1443,"column":217,"offset":48201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1445,"column":4,"offset":48206},"end":{"line":1445,"column":6,"offset":48208}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome/description/"},"children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":1445,"column":7,"offset":48209},"end":{"line":1445,"column":28,"offset":48230}}}],"position":{"start":{"line":1445,"column":6,"offset":48208},"end":{"line":1445,"column":90,"offset":48292}}}],"position":{"start":{"line":1445,"column":1,"offset":48203},"end":{"line":1445,"column":90,"offset":48292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1447,"column":5,"offset":48298},"end":{"line":1447,"column":13,"offset":48306}}}],"position":{"start":{"line":1447,"column":1,"offset":48294},"end":{"line":1447,"column":13,"offset":48306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":1449,"column":1,"offset":48308},"end":{"line":1449,"column":110,"offset":48417}}}],"position":{"start":{"line":1449,"column":1,"offset":48308},"end":{"line":1449,"column":110,"offset":48417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1451,"column":3,"offset":48421},"end":{"line":1451,"column":8,"offset":48426}}}],"position":{"start":{"line":1451,"column":1,"offset":48419},"end":{"line":1451,"column":10,"offset":48428}}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":1451,"column":10,"offset":48428},"end":{"line":1451,"column":87,"offset":48505}}}],"position":{"start":{"line":1451,"column":1,"offset":48419},"end":{"line":1451,"column":87,"offset":48505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1453,"column":3,"offset":48509},"end":{"line":1453,"column":13,"offset":48519}}}],"position":{"start":{"line":1453,"column":1,"offset":48507},"end":{"line":1453,"column":15,"offset":48521}}}],"position":{"start":{"line":1453,"column":1,"offset":48507},"end":{"line":1453,"column":15,"offset":48521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true\n"}],"position":{"start":{"line":1455,"column":1,"offset":48523},"end":{"line":1459,"column":4,"offset":48584}}}],"position":{"start":{"line":1455,"column":1,"offset":48523},"end":{"line":1459,"column":4,"offset":48584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1461,"column":3,"offset":48588},"end":{"line":1461,"column":13,"offset":48598}}}],"position":{"start":{"line":1461,"column":1,"offset":48586},"end":{"line":1461,"column":15,"offset":48600}}}],"position":{"start":{"line":1461,"column":1,"offset":48586},"end":{"line":1461,"column":15,"offset":48600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"race a car\"\nOutput: false\n"}],"position":{"start":{"line":1463,"column":1,"offset":48602},"end":{"line":1467,"column":4,"offset":48644}}}],"position":{"start":{"line":1463,"column":1,"offset":48602},"end":{"line":1467,"column":4,"offset":48644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1469,"column":5,"offset":48650},"end":{"line":1469,"column":14,"offset":48659}}}],"position":{"start":{"line":1469,"column":1,"offset":48646},"end":{"line":1469,"column":14,"offset":48659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":1471,"column":6,"offset":48666},"end":{"line":1471,"column":9,"offset":48669}}}],"position":{"start":{"line":1471,"column":1,"offset":48661},"end":{"line":1471,"column":9,"offset":48669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};\n"}],"position":{"start":{"line":1473,"column":1,"offset":48671},"end":{"line":1483,"column":4,"offset":48881}}}],"position":{"start":{"line":1473,"column":1,"offset":48671},"end":{"line":1483,"column":4,"offset":48881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":1485,"column":6,"offset":48888},"end":{"line":1485,"column":9,"offset":48891}}}],"position":{"start":{"line":1485,"column":1,"offset":48883},"end":{"line":1485,"column":9,"offset":48891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1487,"column":1,"offset":48893},"end":{"line":1487,"column":49,"offset":48941}}}],"position":{"start":{"line":1487,"column":1,"offset":48893},"end":{"line":1487,"column":49,"offset":48941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":1489,"column":1,"offset":48943},"end":{"line":1504,"column":4,"offset":49263}}}],"position":{"start":{"line":1489,"column":1,"offset":48943},"end":{"line":1504,"column":4,"offset":49263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"THREE","position":{"start":{"line":1506,"column":6,"offset":49270},"end":{"line":1506,"column":11,"offset":49275}}}],"position":{"start":{"line":1506,"column":1,"offset":49265},"end":{"line":1506,"column":11,"offset":49275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1508,"column":1,"offset":49277},"end":{"line":1508,"column":24,"offset":49300}}}],"position":{"start":{"line":1508,"column":1,"offset":49277},"end":{"line":1508,"column":24,"offset":49300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};\n"}],"position":{"start":{"line":1510,"column":1,"offset":49302},"end":{"line":1547,"column":4,"offset":50209}}}],"position":{"start":{"line":1510,"column":1,"offset":49302},"end":{"line":1547,"column":4,"offset":50209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1549,"column":1,"offset":50211},"end":{"line":1549,"column":4,"offset":50214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1551,"column":1,"offset":50216},"end":{"line":1553,"column":10,"offset":50258}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1553,"column":10,"offset":50258},"end":{"line":1553,"column":40,"offset":50288}}}],"position":{"start":{"line":1553,"column":10,"offset":50258},"end":{"line":1553,"column":40,"offset":50288}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1553,"column":40,"offset":50288},"end":{"line":1554,"column":11,"offset":50299}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1554,"column":11,"offset":50299},"end":{"line":1554,"column":42,"offset":50330}}}],"position":{"start":{"line":1554,"column":11,"offset":50299},"end":{"line":1554,"column":42,"offset":50330}}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1554,"column":42,"offset":50330},"end":{"line":1555,"column":17,"offset":50347}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/backtracking"},"children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1555,"column":17,"offset":50347},"end":{"line":1555,"column":54,"offset":50384}}}],"position":{"start":{"line":1555,"column":17,"offset":50347},"end":{"line":1555,"column":54,"offset":50384}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1555,"column":54,"offset":50384},"end":{"line":1556,"column":25,"offset":50409}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1556,"column":25,"offset":50409},"end":{"line":1556,"column":70,"offset":50454}}}],"position":{"start":{"line":1556,"column":25,"offset":50409},"end":{"line":1556,"column":70,"offset":50454}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1556,"column":70,"offset":50454},"end":{"line":1558,"column":16,"offset":50489}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1558,"column":16,"offset":50489},"end":{"line":1558,"column":57,"offset":50530}}}],"position":{"start":{"line":1558,"column":16,"offset":50489},"end":{"line":1558,"column":57,"offset":50530}}}],"position":{"start":{"line":1551,"column":1,"offset":50216},"end":{"line":1558,"column":57,"offset":50530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1560,"column":1,"offset":50532},"end":{"line":1560,"column":4,"offset":50535}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1562,"column":2,"offset":50538},"end":{"line":1562,"column":142,"offset":50678}}}],"position":{"start":{"line":1562,"column":1,"offset":50537},"end":{"line":1562,"column":213,"offset":50749}}}],"position":{"start":{"line":1562,"column":1,"offset":50537},"end":{"line":1562,"column":213,"offset":50749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1564,"column":4,"offset":50754},"end":{"line":1564,"column":6,"offset":50756}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii/description/"},"children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1564,"column":7,"offset":50757},"end":{"line":1564,"column":26,"offset":50776}}}],"position":{"start":{"line":1564,"column":6,"offset":50756},"end":{"line":1564,"column":86,"offset":50836}}}],"position":{"start":{"line":1564,"column":1,"offset":50751},"end":{"line":1564,"column":86,"offset":50836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1566,"column":5,"offset":50842},"end":{"line":1566,"column":13,"offset":50850}}}],"position":{"start":{"line":1566,"column":1,"offset":50838},"end":{"line":1566,"column":13,"offset":50850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1568,"column":1,"offset":50852},"end":{"line":1568,"column":18,"offset":50869}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1568,"column":19,"offset":50870},"end":{"line":1568,"column":28,"offset":50879}}}],"position":{"start":{"line":1568,"column":18,"offset":50869},"end":{"line":1568,"column":29,"offset":50880}}},{"type":"text","value":" and ","position":{"start":{"line":1568,"column":29,"offset":50880},"end":{"line":1568,"column":34,"offset":50885}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1568,"column":35,"offset":50886},"end":{"line":1568,"column":42,"offset":50893}}}],"position":{"start":{"line":1568,"column":34,"offset":50885},"end":{"line":1568,"column":43,"offset":50894}}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1568,"column":43,"offset":50894},"end":{"line":1568,"column":126,"offset":50977}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1568,"column":127,"offset":50978},"end":{"line":1568,"column":136,"offset":50987}}}],"position":{"start":{"line":1568,"column":126,"offset":50977},"end":{"line":1568,"column":137,"offset":50988}}},{"type":"text","value":" to ","position":{"start":{"line":1568,"column":137,"offset":50988},"end":{"line":1568,"column":141,"offset":50992}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1568,"column":142,"offset":50993},"end":{"line":1568,"column":149,"offset":51000}}}],"position":{"start":{"line":1568,"column":141,"offset":50992},"end":{"line":1568,"column":150,"offset":51001}}},{"type":"text","value":", such that:","position":{"start":{"line":1568,"column":150,"offset":51001},"end":{"line":1568,"column":162,"offset":51013}}}],"position":{"start":{"line":1568,"column":1,"offset":50852},"end":{"line":1568,"column":162,"offset":51013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1570,"column":5,"offset":51019},"end":{"line":1570,"column":45,"offset":51059}}}],"position":{"start":{"line":1570,"column":1,"offset":51015},"end":{"line":1570,"column":45,"offset":51059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1571,"column":5,"offset":51064},"end":{"line":1571,"column":66,"offset":51125}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1571,"column":67,"offset":51126},"end":{"line":1571,"column":76,"offset":51135}}}],"position":{"start":{"line":1571,"column":66,"offset":51125},"end":{"line":1571,"column":77,"offset":51136}}},{"type":"text","value":" is ","position":{"start":{"line":1571,"column":77,"offset":51136},"end":{"line":1571,"column":81,"offset":51140}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1571,"column":82,"offset":51141},"end":{"line":1571,"column":85,"offset":51144}}}],"position":{"start":{"line":1571,"column":81,"offset":51140},"end":{"line":1571,"column":86,"offset":51145}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1571,"column":86,"offset":51145},"end":{"line":1571,"column":106,"offset":51165}}}],"position":{"start":{"line":1571,"column":1,"offset":51060},"end":{"line":1571,"column":106,"offset":51165}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1570,"column":1,"offset":51015},"end":{"line":1571,"column":106,"offset":51165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1573,"column":3,"offset":51169},"end":{"line":1573,"column":8,"offset":51174}}}],"position":{"start":{"line":1573,"column":1,"offset":51167},"end":{"line":1573,"column":10,"offset":51176}}}],"position":{"start":{"line":1573,"column":1,"offset":51167},"end":{"line":1573,"column":10,"offset":51176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1575,"column":5,"offset":51182},"end":{"line":1575,"column":70,"offset":51247}}}],"position":{"start":{"line":1575,"column":1,"offset":51178},"end":{"line":1575,"column":70,"offset":51247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1576,"column":5,"offset":51252},"end":{"line":1576,"column":36,"offset":51283}}}],"position":{"start":{"line":1576,"column":1,"offset":51248},"end":{"line":1576,"column":36,"offset":51283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1577,"column":5,"offset":51288},"end":{"line":1577,"column":60,"offset":51343}}}],"position":{"start":{"line":1577,"column":1,"offset":51284},"end":{"line":1577,"column":60,"offset":51343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1578,"column":5,"offset":51348},"end":{"line":1578,"column":51,"offset":51394}}}],"position":{"start":{"line":1578,"column":1,"offset":51344},"end":{"line":1578,"column":51,"offset":51394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1579,"column":5,"offset":51399},"end":{"line":1579,"column":20,"offset":51414}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1579,"column":21,"offset":51415},"end":{"line":1579,"column":30,"offset":51424}}}],"position":{"start":{"line":1579,"column":20,"offset":51414},"end":{"line":1579,"column":31,"offset":51425}}},{"type":"text","value":" and ","position":{"start":{"line":1579,"column":31,"offset":51425},"end":{"line":1579,"column":36,"offset":51430}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1579,"column":37,"offset":51431},"end":{"line":1579,"column":44,"offset":51438}}}],"position":{"start":{"line":1579,"column":36,"offset":51430},"end":{"line":1579,"column":45,"offset":51439}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1579,"column":45,"offset":51439},"end":{"line":1579,"column":81,"offset":51475}}}],"position":{"start":{"line":1579,"column":1,"offset":51395},"end":{"line":1579,"column":81,"offset":51475}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1575,"column":1,"offset":51178},"end":{"line":1579,"column":81,"offset":51475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1581,"column":3,"offset":51479},"end":{"line":1581,"column":13,"offset":51489}}}],"position":{"start":{"line":1581,"column":1,"offset":51477},"end":{"line":1581,"column":15,"offset":51491}}}],"position":{"start":{"line":1581,"column":1,"offset":51477},"end":{"line":1581,"column":15,"offset":51491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n"}],"position":{"start":{"line":1583,"column":1,"offset":51493},"end":{"line":1595,"column":4,"offset":51675}}}],"position":{"start":{"line":1583,"column":1,"offset":51493},"end":{"line":1595,"column":4,"offset":51675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1597,"column":3,"offset":51679},"end":{"line":1597,"column":13,"offset":51689}}}],"position":{"start":{"line":1597,"column":1,"offset":51677},"end":{"line":1597,"column":15,"offset":51691}}}],"position":{"start":{"line":1597,"column":1,"offset":51677},"end":{"line":1597,"column":15,"offset":51691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1599,"column":1,"offset":51693},"end":{"line":1609,"column":4,"offset":51887}}}],"position":{"start":{"line":1599,"column":1,"offset":51693},"end":{"line":1609,"column":4,"offset":51887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1611,"column":5,"offset":51893},"end":{"line":1611,"column":14,"offset":51902}}}],"position":{"start":{"line":1611,"column":1,"offset":51889},"end":{"line":1611,"column":14,"offset":51902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1613,"column":1,"offset":51904},"end":{"line":1613,"column":19,"offset":51922}}},{"type":"element","tagName":"a","properties":{"href":"./127.%20Word%20Ladder"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1613,"column":20,"offset":51923},"end":{"line":1613,"column":36,"offset":51939}}}],"position":{"start":{"line":1613,"column":19,"offset":51922},"end":{"line":1613,"column":61,"offset":51964}}},{"type":"text","value":".","position":{"start":{"line":1613,"column":61,"offset":51964},"end":{"line":1613,"column":62,"offset":51965}}}],"position":{"start":{"line":1613,"column":1,"offset":51904},"end":{"line":1613,"column":62,"offset":51965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1615,"column":1,"offset":51967},"end":{"line":1615,"column":204,"offset":52170}}}],"position":{"start":{"line":1615,"column":1,"offset":51967},"end":{"line":1615,"column":204,"offset":52170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1617,"column":1,"offset":52172},"end":{"line":1617,"column":122,"offset":52293}}}],"position":{"start":{"line":1617,"column":1,"offset":52172},"end":{"line":1617,"column":122,"offset":52293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n"}],"position":{"start":{"line":1619,"column":1,"offset":52295},"end":{"line":1680,"column":4,"offset":53972}}}],"position":{"start":{"line":1619,"column":1,"offset":52295},"end":{"line":1680,"column":4,"offset":53972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1682,"column":1,"offset":53974},"end":{"line":1682,"column":4,"offset":53977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1684,"column":1,"offset":53979},"end":{"line":1686,"column":25,"offset":54038}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1686,"column":25,"offset":54038},"end":{"line":1686,"column":70,"offset":54083}}}],"position":{"start":{"line":1686,"column":25,"offset":54038},"end":{"line":1686,"column":70,"offset":54083}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1686,"column":70,"offset":54083},"end":{"line":1688,"column":19,"offset":54121}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1688,"column":19,"offset":54121},"end":{"line":1688,"column":63,"offset":54165}}}],"position":{"start":{"line":1688,"column":19,"offset":54121},"end":{"line":1688,"column":63,"offset":54165}}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1688,"column":63,"offset":54165},"end":{"line":1689,"column":29,"offset":54194}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/minimum-genetic-mutation"},"children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1689,"column":29,"offset":54194},"end":{"line":1689,"column":83,"offset":54248}}}],"position":{"start":{"line":1689,"column":29,"offset":54194},"end":{"line":1689,"column":83,"offset":54248}}}],"position":{"start":{"line":1684,"column":1,"offset":53979},"end":{"line":1689,"column":83,"offset":54248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1691,"column":1,"offset":54250},"end":{"line":1691,"column":4,"offset":54253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1693,"column":2,"offset":54256},"end":{"line":1693,"column":142,"offset":54396}}}],"position":{"start":{"line":1693,"column":1,"offset":54255},"end":{"line":1693,"column":207,"offset":54461}}}],"position":{"start":{"line":1693,"column":1,"offset":54255},"end":{"line":1693,"column":207,"offset":54461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1695,"column":4,"offset":54466},"end":{"line":1695,"column":6,"offset":54468}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder/description/"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1695,"column":7,"offset":54469},"end":{"line":1695,"column":23,"offset":54485}}}],"position":{"start":{"line":1695,"column":6,"offset":54468},"end":{"line":1695,"column":80,"offset":54542}}}],"position":{"start":{"line":1695,"column":1,"offset":54463},"end":{"line":1695,"column":80,"offset":54542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1697,"column":5,"offset":54548},"end":{"line":1697,"column":13,"offset":54556}}}],"position":{"start":{"line":1697,"column":1,"offset":54544},"end":{"line":1697,"column":13,"offset":54556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1699,"column":1,"offset":54558},"end":{"line":1699,"column":18,"offset":54575}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1699,"column":19,"offset":54576},"end":{"line":1699,"column":28,"offset":54585}}}],"position":{"start":{"line":1699,"column":18,"offset":54575},"end":{"line":1699,"column":29,"offset":54586}}},{"type":"text","value":" and ","position":{"start":{"line":1699,"column":29,"offset":54586},"end":{"line":1699,"column":34,"offset":54591}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1699,"column":35,"offset":54592},"end":{"line":1699,"column":42,"offset":54599}}}],"position":{"start":{"line":1699,"column":34,"offset":54591},"end":{"line":1699,"column":43,"offset":54600}}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1699,"column":43,"offset":54600},"end":{"line":1699,"column":133,"offset":54690}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1699,"column":134,"offset":54691},"end":{"line":1699,"column":143,"offset":54700}}}],"position":{"start":{"line":1699,"column":133,"offset":54690},"end":{"line":1699,"column":144,"offset":54701}}},{"type":"text","value":" to ","position":{"start":{"line":1699,"column":144,"offset":54701},"end":{"line":1699,"column":148,"offset":54705}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1699,"column":149,"offset":54706},"end":{"line":1699,"column":156,"offset":54713}}}],"position":{"start":{"line":1699,"column":148,"offset":54705},"end":{"line":1699,"column":157,"offset":54714}}},{"type":"text","value":", such that:","position":{"start":{"line":1699,"column":157,"offset":54714},"end":{"line":1699,"column":169,"offset":54726}}}],"position":{"start":{"line":1699,"column":1,"offset":54558},"end":{"line":1699,"column":169,"offset":54726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1701,"column":5,"offset":54732},"end":{"line":1701,"column":46,"offset":54773}}}],"position":{"start":{"line":1701,"column":1,"offset":54728},"end":{"line":1701,"column":46,"offset":54773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1702,"column":5,"offset":54778},"end":{"line":1702,"column":66,"offset":54839}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1702,"column":67,"offset":54840},"end":{"line":1702,"column":76,"offset":54849}}}],"position":{"start":{"line":1702,"column":66,"offset":54839},"end":{"line":1702,"column":77,"offset":54850}}},{"type":"text","value":" is ","position":{"start":{"line":1702,"column":77,"offset":54850},"end":{"line":1702,"column":81,"offset":54854}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1702,"column":82,"offset":54855},"end":{"line":1702,"column":85,"offset":54858}}}],"position":{"start":{"line":1702,"column":81,"offset":54854},"end":{"line":1702,"column":86,"offset":54859}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1702,"column":86,"offset":54859},"end":{"line":1702,"column":106,"offset":54879}}}],"position":{"start":{"line":1702,"column":1,"offset":54774},"end":{"line":1702,"column":106,"offset":54879}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1701,"column":1,"offset":54728},"end":{"line":1702,"column":106,"offset":54879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1704,"column":3,"offset":54883},"end":{"line":1704,"column":8,"offset":54888}}}],"position":{"start":{"line":1704,"column":1,"offset":54881},"end":{"line":1704,"column":10,"offset":54890}}}],"position":{"start":{"line":1704,"column":1,"offset":54881},"end":{"line":1704,"column":10,"offset":54890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1706,"column":5,"offset":54896},"end":{"line":1706,"column":58,"offset":54949}}}],"position":{"start":{"line":1706,"column":1,"offset":54892},"end":{"line":1706,"column":58,"offset":54949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1707,"column":5,"offset":54954},"end":{"line":1707,"column":36,"offset":54985}}}],"position":{"start":{"line":1707,"column":1,"offset":54950},"end":{"line":1707,"column":36,"offset":54985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1708,"column":5,"offset":54990},"end":{"line":1708,"column":60,"offset":55045}}}],"position":{"start":{"line":1708,"column":1,"offset":54986},"end":{"line":1708,"column":60,"offset":55045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1709,"column":5,"offset":55050},"end":{"line":1709,"column":51,"offset":55096}}}],"position":{"start":{"line":1709,"column":1,"offset":55046},"end":{"line":1709,"column":51,"offset":55096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1710,"column":5,"offset":55101},"end":{"line":1710,"column":20,"offset":55116}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1710,"column":21,"offset":55117},"end":{"line":1710,"column":30,"offset":55126}}}],"position":{"start":{"line":1710,"column":20,"offset":55116},"end":{"line":1710,"column":31,"offset":55127}}},{"type":"text","value":" and ","position":{"start":{"line":1710,"column":31,"offset":55127},"end":{"line":1710,"column":36,"offset":55132}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1710,"column":37,"offset":55133},"end":{"line":1710,"column":44,"offset":55140}}}],"position":{"start":{"line":1710,"column":36,"offset":55132},"end":{"line":1710,"column":45,"offset":55141}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1710,"column":45,"offset":55141},"end":{"line":1710,"column":81,"offset":55177}}}],"position":{"start":{"line":1710,"column":1,"offset":55097},"end":{"line":1710,"column":81,"offset":55177}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1706,"column":1,"offset":54892},"end":{"line":1710,"column":81,"offset":55177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1712,"column":3,"offset":55181},"end":{"line":1712,"column":13,"offset":55191}}}],"position":{"start":{"line":1712,"column":1,"offset":55179},"end":{"line":1712,"column":15,"offset":55193}}}],"position":{"start":{"line":1712,"column":1,"offset":55179},"end":{"line":1712,"column":15,"offset":55193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.\n"}],"position":{"start":{"line":1714,"column":1,"offset":55195},"end":{"line":1725,"column":4,"offset":55418}}}],"position":{"start":{"line":1714,"column":1,"offset":55195},"end":{"line":1725,"column":4,"offset":55418}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1727,"column":3,"offset":55422},"end":{"line":1727,"column":13,"offset":55432}}}],"position":{"start":{"line":1727,"column":1,"offset":55420},"end":{"line":1727,"column":15,"offset":55434}}}],"position":{"start":{"line":1727,"column":1,"offset":55420},"end":{"line":1727,"column":15,"offset":55434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1729,"column":1,"offset":55436},"end":{"line":1739,"column":4,"offset":55629}}}],"position":{"start":{"line":1729,"column":1,"offset":55436},"end":{"line":1739,"column":4,"offset":55629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1741,"column":5,"offset":55635},"end":{"line":1741,"column":14,"offset":55644}}}],"position":{"start":{"line":1741,"column":1,"offset":55631},"end":{"line":1741,"column":14,"offset":55644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1743,"column":1,"offset":55646},"end":{"line":1743,"column":38,"offset":55683}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"begineWord"}],"position":{"start":{"line":1743,"column":38,"offset":55683},"end":{"line":1743,"column":50,"offset":55695}}},{"type":"text","value":" as root and ","position":{"start":{"line":1743,"column":50,"offset":55695},"end":{"line":1743,"column":63,"offset":55708}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"endWord"}],"position":{"start":{"line":1743,"column":63,"offset":55708},"end":{"line":1743,"column":72,"offset":55717}}},{"type":"text","value":" as leaves.","position":{"start":{"line":1743,"column":72,"offset":55717},"end":{"line":1743,"column":83,"offset":55728}}}],"position":{"start":{"line":1743,"column":1,"offset":55646},"end":{"line":1743,"column":83,"offset":55728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1745,"column":1,"offset":55730},"end":{"line":1745,"column":128,"offset":55857}}}],"position":{"start":{"line":1745,"column":1,"offset":55730},"end":{"line":1745,"column":128,"offset":55857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1747,"column":1,"offset":55859},"end":{"line":1747,"column":205,"offset":56063}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1747,"column":205,"offset":56063},"end":{"line":1747,"column":208,"offset":56066}}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1747,"column":208,"offset":56066},"end":{"line":1747,"column":282,"offset":56140}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1747,"column":282,"offset":56140},"end":{"line":1747,"column":285,"offset":56143}}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1747,"column":285,"offset":56143},"end":{"line":1747,"column":365,"offset":56223}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1747,"column":365,"offset":56223},"end":{"line":1747,"column":375,"offset":56233}}},{"type":"text","value":".","position":{"start":{"line":1747,"column":375,"offset":56233},"end":{"line":1747,"column":376,"offset":56234}}}],"position":{"start":{"line":1747,"column":1,"offset":55859},"end":{"line":1747,"column":376,"offset":56234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1749,"column":1,"offset":56236},"end":{"line":1749,"column":54,"offset":56289}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1749,"column":54,"offset":56289},"end":{"line":1749,"column":64,"offset":56299}}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1749,"column":64,"offset":56299},"end":{"line":1749,"column":114,"offset":56349}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1749,"column":114,"offset":56349},"end":{"line":1749,"column":124,"offset":56359}}},{"type":"text","value":".","position":{"start":{"line":1749,"column":124,"offset":56359},"end":{"line":1749,"column":125,"offset":56360}}}],"position":{"start":{"line":1749,"column":1,"offset":56236},"end":{"line":1749,"column":125,"offset":56360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};\n"}],"position":{"start":{"line":1751,"column":1,"offset":56362},"end":{"line":1798,"column":4,"offset":57509}}}],"position":{"start":{"line":1751,"column":1,"offset":56362},"end":{"line":1798,"column":4,"offset":57509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1800,"column":1,"offset":57511},"end":{"line":1800,"column":4,"offset":57514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1802,"column":1,"offset":57516},"end":{"line":1804,"column":10,"offset":57558}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1804,"column":10,"offset":57558},"end":{"line":1804,"column":40,"offset":57588}}}],"position":{"start":{"line":1804,"column":10,"offset":57558},"end":{"line":1804,"column":40,"offset":57588}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1804,"column":40,"offset":57588},"end":{"line":1805,"column":15,"offset":57603}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1805,"column":15,"offset":57603},"end":{"line":1805,"column":50,"offset":57638}}}],"position":{"start":{"line":1805,"column":15,"offset":57603},"end":{"line":1805,"column":50,"offset":57638}}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1805,"column":50,"offset":57638},"end":{"line":1807,"column":45,"offset":57702}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1807,"column":45,"offset":57702},"end":{"line":1807,"column":115,"offset":57772}}}],"position":{"start":{"line":1807,"column":45,"offset":57702},"end":{"line":1807,"column":115,"offset":57772}}}],"position":{"start":{"line":1802,"column":1,"offset":57516},"end":{"line":1807,"column":115,"offset":57772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1809,"column":1,"offset":57774},"end":{"line":1809,"column":4,"offset":57777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1811,"column":2,"offset":57780},"end":{"line":1811,"column":142,"offset":57920}}}],"position":{"start":{"line":1811,"column":1,"offset":57779},"end":{"line":1811,"column":241,"offset":58019}}}],"position":{"start":{"line":1811,"column":1,"offset":57779},"end":{"line":1811,"column":241,"offset":58019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1813,"column":4,"offset":58024},"end":{"line":1813,"column":6,"offset":58026}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-consecutive-sequence/description/"},"children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1813,"column":7,"offset":58027},"end":{"line":1813,"column":40,"offset":58060}}}],"position":{"start":{"line":1813,"column":6,"offset":58026},"end":{"line":1813,"column":114,"offset":58134}}}],"position":{"start":{"line":1813,"column":1,"offset":58021},"end":{"line":1813,"column":114,"offset":58134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1815,"column":5,"offset":58140},"end":{"line":1815,"column":13,"offset":58148}}}],"position":{"start":{"line":1815,"column":1,"offset":58136},"end":{"line":1815,"column":13,"offset":58148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1817,"column":1,"offset":58150},"end":{"line":1817,"column":99,"offset":58248}}}],"position":{"start":{"line":1817,"column":1,"offset":58150},"end":{"line":1817,"column":99,"offset":58248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1819,"column":1,"offset":58250},"end":{"line":1819,"column":32,"offset":58281}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":1819,"column":33,"offset":58282},"end":{"line":1819,"column":34,"offset":58283}}}],"position":{"start":{"line":1819,"column":32,"offset":58281},"end":{"line":1819,"column":35,"offset":58284}}},{"type":"text","value":") complexity.","position":{"start":{"line":1819,"column":35,"offset":58284},"end":{"line":1819,"column":48,"offset":58297}}}],"position":{"start":{"line":1819,"column":1,"offset":58250},"end":{"line":1819,"column":48,"offset":58297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1821,"column":3,"offset":58301},"end":{"line":1821,"column":11,"offset":58309}}}],"position":{"start":{"line":1821,"column":1,"offset":58299},"end":{"line":1821,"column":13,"offset":58311}}}],"position":{"start":{"line":1821,"column":1,"offset":58299},"end":{"line":1821,"column":13,"offset":58311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n"}],"position":{"start":{"line":1823,"column":1,"offset":58313},"end":{"line":1828,"column":4,"offset":58460}}}],"position":{"start":{"line":1823,"column":1,"offset":58313},"end":{"line":1828,"column":4,"offset":58460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1830,"column":5,"offset":58466},"end":{"line":1830,"column":14,"offset":58475}}}],"position":{"start":{"line":1830,"column":1,"offset":58462},"end":{"line":1830,"column":14,"offset":58475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1832,"column":1,"offset":58477},"end":{"line":1832,"column":208,"offset":58684}}}],"position":{"start":{"line":1832,"column":1,"offset":58477},"end":{"line":1832,"column":208,"offset":58684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};\n"}],"position":{"start":{"line":1834,"column":1,"offset":58686},"end":{"line":1859,"column":4,"offset":59256}}}],"position":{"start":{"line":1834,"column":1,"offset":58686},"end":{"line":1859,"column":4,"offset":59256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1861,"column":1,"offset":59258},"end":{"line":1861,"column":4,"offset":59261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1863,"column":1,"offset":59263},"end":{"line":1865,"column":9,"offset":59306}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1865,"column":9,"offset":59306},"end":{"line":1865,"column":38,"offset":59335}}}],"position":{"start":{"line":1865,"column":9,"offset":59306},"end":{"line":1865,"column":38,"offset":59335}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1865,"column":38,"offset":59335},"end":{"line":1866,"column":23,"offset":59358}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1866,"column":23,"offset":59358},"end":{"line":1866,"column":66,"offset":59401}}}],"position":{"start":{"line":1866,"column":23,"offset":59358},"end":{"line":1866,"column":66,"offset":59401}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1866,"column":66,"offset":59401},"end":{"line":1868,"column":13,"offset":59433}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1868,"column":13,"offset":59433},"end":{"line":1868,"column":51,"offset":59471}}}],"position":{"start":{"line":1868,"column":13,"offset":59433},"end":{"line":1868,"column":51,"offset":59471}}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1868,"column":51,"offset":59471},"end":{"line":1869,"column":33,"offset":59504}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1869,"column":33,"offset":59504},"end":{"line":1869,"column":91,"offset":59562}}}],"position":{"start":{"line":1869,"column":33,"offset":59504},"end":{"line":1869,"column":91,"offset":59562}}}],"position":{"start":{"line":1863,"column":1,"offset":59263},"end":{"line":1869,"column":91,"offset":59562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1871,"column":1,"offset":59564},"end":{"line":1871,"column":4,"offset":59567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1873,"column":2,"offset":59570},"end":{"line":1873,"column":142,"offset":59710}}}],"position":{"start":{"line":1873,"column":1,"offset":59569},"end":{"line":1873,"column":233,"offset":59801}}}],"position":{"start":{"line":1873,"column":1,"offset":59569},"end":{"line":1873,"column":233,"offset":59801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1875,"column":4,"offset":59806},"end":{"line":1875,"column":6,"offset":59808}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/"},"children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1875,"column":7,"offset":59809},"end":{"line":1875,"column":36,"offset":59838}}}],"position":{"start":{"line":1875,"column":6,"offset":59808},"end":{"line":1875,"column":106,"offset":59908}}}],"position":{"start":{"line":1875,"column":1,"offset":59803},"end":{"line":1875,"column":106,"offset":59908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1877,"column":5,"offset":59914},"end":{"line":1877,"column":13,"offset":59922}}}],"position":{"start":{"line":1877,"column":1,"offset":59910},"end":{"line":1877,"column":13,"offset":59922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1879,"column":1,"offset":59924},"end":{"line":1879,"column":44,"offset":59967}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0-9"}],"position":{"start":{"line":1879,"column":44,"offset":59967},"end":{"line":1879,"column":49,"offset":59972}}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1879,"column":49,"offset":59972},"end":{"line":1879,"column":104,"offset":60027}}}],"position":{"start":{"line":1879,"column":1,"offset":59924},"end":{"line":1879,"column":104,"offset":60027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1881,"column":1,"offset":60029},"end":{"line":1881,"column":37,"offset":60065}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1->2->3"}],"position":{"start":{"line":1881,"column":37,"offset":60065},"end":{"line":1881,"column":46,"offset":60074}}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1881,"column":46,"offset":60074},"end":{"line":1881,"column":75,"offset":60103}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"123"}],"position":{"start":{"line":1881,"column":75,"offset":60103},"end":{"line":1881,"column":80,"offset":60108}}},{"type":"text","value":".","position":{"start":{"line":1881,"column":80,"offset":60108},"end":{"line":1881,"column":81,"offset":60109}}}],"position":{"start":{"line":1881,"column":1,"offset":60029},"end":{"line":1881,"column":81,"offset":60109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1883,"column":1,"offset":60111},"end":{"line":1883,"column":48,"offset":60158}}}],"position":{"start":{"line":1883,"column":1,"offset":60111},"end":{"line":1883,"column":48,"offset":60158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1885,"column":3,"offset":60162},"end":{"line":1885,"column":8,"offset":60167}}}],"position":{"start":{"line":1885,"column":1,"offset":60160},"end":{"line":1885,"column":10,"offset":60169}}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1885,"column":10,"offset":60169},"end":{"line":1885,"column":45,"offset":60204}}}],"position":{"start":{"line":1885,"column":1,"offset":60160},"end":{"line":1885,"column":45,"offset":60204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1887,"column":3,"offset":60208},"end":{"line":1887,"column":11,"offset":60216}}}],"position":{"start":{"line":1887,"column":1,"offset":60206},"end":{"line":1887,"column":13,"offset":60218}}}],"position":{"start":{"line":1887,"column":1,"offset":60206},"end":{"line":1887,"column":13,"offset":60218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.\n"}],"position":{"start":{"line":1889,"column":1,"offset":60220},"end":{"line":1897,"column":35,"offset":60452}}}],"position":{"start":{"line":1889,"column":1,"offset":60220},"end":{"line":1897,"column":35,"offset":60452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1899,"column":3,"offset":60456},"end":{"line":1899,"column":13,"offset":60466}}}],"position":{"start":{"line":1899,"column":1,"offset":60454},"end":{"line":1899,"column":15,"offset":60468}}}],"position":{"start":{"line":1899,"column":1,"offset":60454},"end":{"line":1899,"column":15,"offset":60468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.\n"}],"position":{"start":{"line":1901,"column":1,"offset":60470},"end":{"line":1912,"column":44,"offset":60801}}}],"position":{"start":{"line":1901,"column":1,"offset":60470},"end":{"line":1912,"column":44,"offset":60801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1914,"column":5,"offset":60807},"end":{"line":1914,"column":14,"offset":60816}}}],"position":{"start":{"line":1914,"column":1,"offset":60803},"end":{"line":1914,"column":14,"offset":60816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1916,"column":1,"offset":60818},"end":{"line":1916,"column":50,"offset":60867}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1916,"column":50,"offset":60867},"end":{"line":1916,"column":53,"offset":60870}}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1916,"column":53,"offset":60870},"end":{"line":1916,"column":105,"offset":60922}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1916,"column":105,"offset":60922},"end":{"line":1916,"column":108,"offset":60925}}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1916,"column":108,"offset":60925},"end":{"line":1916,"column":161,"offset":60978}}}],"position":{"start":{"line":1916,"column":1,"offset":60818},"end":{"line":1916,"column":161,"offset":60978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};\n"}],"position":{"start":{"line":1918,"column":1,"offset":60980},"end":{"line":1938,"column":4,"offset":61381}}}],"position":{"start":{"line":1918,"column":1,"offset":60980},"end":{"line":1938,"column":4,"offset":61381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1940,"column":1,"offset":61383},"end":{"line":1940,"column":4,"offset":61386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1942,"column":1,"offset":61388},"end":{"line":1944,"column":23,"offset":61445}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1944,"column":23,"offset":61445},"end":{"line":1944,"column":66,"offset":61488}}}],"position":{"start":{"line":1944,"column":23,"offset":61445},"end":{"line":1944,"column":66,"offset":61488}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1944,"column":66,"offset":61488},"end":{"line":1945,"column":25,"offset":61513}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1945,"column":25,"offset":61513},"end":{"line":1945,"column":70,"offset":61558}}}],"position":{"start":{"line":1945,"column":25,"offset":61513},"end":{"line":1945,"column":70,"offset":61558}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1945,"column":70,"offset":61558},"end":{"line":1946,"column":15,"offset":61573}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1946,"column":15,"offset":61573},"end":{"line":1946,"column":50,"offset":61608}}}],"position":{"start":{"line":1946,"column":15,"offset":61573},"end":{"line":1946,"column":50,"offset":61608}}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1946,"column":50,"offset":61608},"end":{"line":1948,"column":22,"offset":61649}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/number-of-islands"},"children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1948,"column":22,"offset":61649},"end":{"line":1948,"column":69,"offset":61696}}}],"position":{"start":{"line":1948,"column":22,"offset":61649},"end":{"line":1948,"column":69,"offset":61696}}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1948,"column":69,"offset":61696},"end":{"line":1949,"column":20,"offset":61716}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/walls-and-gates"},"children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1949,"column":20,"offset":61716},"end":{"line":1949,"column":65,"offset":61761}}}],"position":{"start":{"line":1949,"column":20,"offset":61716},"end":{"line":1949,"column":65,"offset":61761}}}],"position":{"start":{"line":1942,"column":1,"offset":61388},"end":{"line":1949,"column":65,"offset":61761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1951,"column":1,"offset":61763},"end":{"line":1951,"column":4,"offset":61766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1953,"column":2,"offset":61769},"end":{"line":1953,"column":142,"offset":61909}}}],"position":{"start":{"line":1953,"column":1,"offset":61768},"end":{"line":1953,"column":221,"offset":61988}}}],"position":{"start":{"line":1953,"column":1,"offset":61768},"end":{"line":1953,"column":221,"offset":61988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":1955,"column":4,"offset":61993},"end":{"line":1955,"column":6,"offset":61995}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/surrounded-regions/description/"},"children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1955,"column":7,"offset":61996},"end":{"line":1955,"column":30,"offset":62019}}}],"position":{"start":{"line":1955,"column":6,"offset":61995},"end":{"line":1955,"column":94,"offset":62083}}}],"position":{"start":{"line":1955,"column":1,"offset":61990},"end":{"line":1955,"column":94,"offset":62083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1957,"column":5,"offset":62089},"end":{"line":1957,"column":13,"offset":62097}}}],"position":{"start":{"line":1957,"column":1,"offset":62085},"end":{"line":1957,"column":13,"offset":62097}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1959,"column":1,"offset":62099},"end":{"line":1959,"column":29,"offset":62127}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1959,"column":29,"offset":62127},"end":{"line":1959,"column":34,"offset":62132}}},{"type":"text","value":" and ","position":{"start":{"line":1959,"column":34,"offset":62132},"end":{"line":1959,"column":39,"offset":62137}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1959,"column":39,"offset":62137},"end":{"line":1959,"column":44,"offset":62142}}},{"type":"text","value":" (","position":{"start":{"line":1959,"column":44,"offset":62142},"end":{"line":1959,"column":46,"offset":62144}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"the letter O","position":{"start":{"line":1959,"column":48,"offset":62146},"end":{"line":1959,"column":60,"offset":62158}}}],"position":{"start":{"line":1959,"column":46,"offset":62144},"end":{"line":1959,"column":62,"offset":62160}}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1959,"column":62,"offset":62160},"end":{"line":1959,"column":99,"offset":62197}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1959,"column":99,"offset":62197},"end":{"line":1959,"column":104,"offset":62202}}},{"type":"text","value":".","position":{"start":{"line":1959,"column":104,"offset":62202},"end":{"line":1959,"column":105,"offset":62203}}}],"position":{"start":{"line":1959,"column":1,"offset":62099},"end":{"line":1959,"column":105,"offset":62203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1961,"column":1,"offset":62205},"end":{"line":1961,"column":38,"offset":62242}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1961,"column":38,"offset":62242},"end":{"line":1961,"column":43,"offset":62247}}},{"type":"text","value":"s into ","position":{"start":{"line":1961,"column":43,"offset":62247},"end":{"line":1961,"column":50,"offset":62254}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1961,"column":50,"offset":62254},"end":{"line":1961,"column":55,"offset":62259}}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1961,"column":55,"offset":62259},"end":{"line":1961,"column":83,"offset":62287}}}],"position":{"start":{"line":1961,"column":1,"offset":62205},"end":{"line":1961,"column":83,"offset":62287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1963,"column":3,"offset":62291},"end":{"line":1963,"column":11,"offset":62299}}}],"position":{"start":{"line":1963,"column":1,"offset":62289},"end":{"line":1963,"column":13,"offset":62301}}}],"position":{"start":{"line":1963,"column":1,"offset":62289},"end":{"line":1963,"column":13,"offset":62301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX O O X\nX X O X\nX O X X\n"}],"position":{"start":{"line":1965,"column":1,"offset":62303},"end":{"line":1971,"column":4,"offset":62343}}}],"position":{"start":{"line":1965,"column":1,"offset":62303},"end":{"line":1971,"column":4,"offset":62343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1973,"column":1,"offset":62345},"end":{"line":1973,"column":50,"offset":62394}}}],"position":{"start":{"line":1973,"column":1,"offset":62345},"end":{"line":1973,"column":50,"offset":62394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX X X X\nX X X X\nX O X X\n"}],"position":{"start":{"line":1975,"column":1,"offset":62396},"end":{"line":1981,"column":4,"offset":62436}}}],"position":{"start":{"line":1975,"column":1,"offset":62396},"end":{"line":1981,"column":4,"offset":62436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1983,"column":3,"offset":62440},"end":{"line":1983,"column":15,"offset":62452}}}],"position":{"start":{"line":1983,"column":1,"offset":62438},"end":{"line":1983,"column":17,"offset":62454}}}],"position":{"start":{"line":1983,"column":1,"offset":62438},"end":{"line":1983,"column":17,"offset":62454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1985,"column":1,"offset":62456},"end":{"line":1985,"column":69,"offset":62524}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1985,"column":69,"offset":62524},"end":{"line":1985,"column":74,"offset":62529}}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1985,"column":74,"offset":62529},"end":{"line":1985,"column":121,"offset":62576}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1985,"column":121,"offset":62576},"end":{"line":1985,"column":126,"offset":62581}}},{"type":"text","value":". Any ","position":{"start":{"line":1985,"column":126,"offset":62581},"end":{"line":1985,"column":132,"offset":62587}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1985,"column":132,"offset":62587},"end":{"line":1985,"column":137,"offset":62592}}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1985,"column":137,"offset":62592},"end":{"line":1985,"column":194,"offset":62649}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1985,"column":194,"offset":62649},"end":{"line":1985,"column":199,"offset":62654}}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1985,"column":199,"offset":62654},"end":{"line":1985,"column":233,"offset":62688}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1985,"column":233,"offset":62688},"end":{"line":1985,"column":238,"offset":62693}}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1985,"column":238,"offset":62693},"end":{"line":1985,"column":328,"offset":62783}}}],"position":{"start":{"line":1985,"column":1,"offset":62456},"end":{"line":1985,"column":328,"offset":62783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1987,"column":5,"offset":62789},"end":{"line":1987,"column":14,"offset":62798}}}],"position":{"start":{"line":1987,"column":1,"offset":62785},"end":{"line":1987,"column":14,"offset":62798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1989,"column":1,"offset":62800},"end":{"line":1989,"column":14,"offset":62813}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1989,"column":14,"offset":62813},"end":{"line":1989,"column":17,"offset":62816}}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1989,"column":17,"offset":62816},"end":{"line":1989,"column":45,"offset":62844}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1989,"column":45,"offset":62844},"end":{"line":1989,"column":48,"offset":62847}}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1989,"column":48,"offset":62847},"end":{"line":1989,"column":80,"offset":62879}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1989,"column":80,"offset":62879},"end":{"line":1989,"column":83,"offset":62882}}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1989,"column":83,"offset":62882},"end":{"line":1989,"column":113,"offset":62912}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1989,"column":113,"offset":62912},"end":{"line":1989,"column":116,"offset":62915}}},{"type":"text","value":" to ","position":{"start":{"line":1989,"column":116,"offset":62915},"end":{"line":1989,"column":120,"offset":62919}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X"}],"position":{"start":{"line":1989,"column":120,"offset":62919},"end":{"line":1989,"column":123,"offset":62922}}},{"type":"text","value":" and ","position":{"start":{"line":1989,"column":123,"offset":62922},"end":{"line":1989,"column":128,"offset":62927}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1989,"column":128,"offset":62927},"end":{"line":1989,"column":131,"offset":62930}}},{"type":"text","value":" back to ","position":{"start":{"line":1989,"column":131,"offset":62930},"end":{"line":1989,"column":140,"offset":62939}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1989,"column":140,"offset":62939},"end":{"line":1989,"column":143,"offset":62942}}},{"type":"text","value":".","position":{"start":{"line":1989,"column":143,"offset":62942},"end":{"line":1989,"column":144,"offset":62943}}}],"position":{"start":{"line":1989,"column":1,"offset":62800},"end":{"line":1989,"column":144,"offset":62943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1991,"column":1,"offset":62945},"end":{"line":1991,"column":38,"offset":62982}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1991,"column":38,"offset":62982},"end":{"line":1991,"column":41,"offset":62985}}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1991,"column":41,"offset":62985},"end":{"line":1991,"column":72,"offset":63016}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1991,"column":72,"offset":63016},"end":{"line":1991,"column":75,"offset":63019}}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1991,"column":75,"offset":63019},"end":{"line":1991,"column":158,"offset":63102}}}],"position":{"start":{"line":1991,"column":1,"offset":62945},"end":{"line":1991,"column":158,"offset":63102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1993,"column":1,"offset":63104},"end":{"line":1993,"column":99,"offset":63202}}}],"position":{"start":{"line":1993,"column":1,"offset":63104},"end":{"line":1993,"column":99,"offset":63202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":1995,"column":1,"offset":63204},"end":{"line":2069,"column":4,"offset":65136}}}],"position":{"start":{"line":1995,"column":1,"offset":63204},"end":{"line":2069,"column":4,"offset":65136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2071,"column":1,"offset":65138},"end":{"line":2071,"column":4,"offset":65141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":2073,"column":1,"offset":65143},"end":{"line":2075,"column":23,"offset":65200}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":2075,"column":23,"offset":65200},"end":{"line":2075,"column":66,"offset":65243}}}],"position":{"start":{"line":2075,"column":23,"offset":65200},"end":{"line":2075,"column":66,"offset":65243}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":2075,"column":66,"offset":65243},"end":{"line":2076,"column":25,"offset":65268}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":2076,"column":25,"offset":65268},"end":{"line":2076,"column":70,"offset":65313}}}],"position":{"start":{"line":2076,"column":25,"offset":65268},"end":{"line":2076,"column":70,"offset":65313}}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":2076,"column":70,"offset":65313},"end":{"line":2077,"column":10,"offset":65323}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/graph"},"children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":2077,"column":10,"offset":65323},"end":{"line":2077,"column":40,"offset":65353}}}],"position":{"start":{"line":2077,"column":10,"offset":65323},"end":{"line":2077,"column":40,"offset":65353}}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":2077,"column":40,"offset":65353},"end":{"line":2079,"column":34,"offset":65406}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/copy-list-with-random-pointer"},"children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":2079,"column":34,"offset":65406},"end":{"line":2079,"column":93,"offset":65465}}}],"position":{"start":{"line":2079,"column":34,"offset":65406},"end":{"line":2079,"column":93,"offset":65465}}}],"position":{"start":{"line":2073,"column":1,"offset":65143},"end":{"line":2079,"column":93,"offset":65465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2081,"column":1,"offset":65467},"end":{"line":2081,"column":4,"offset":65470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2083,"column":2,"offset":65473},"end":{"line":2083,"column":142,"offset":65613}}}],"position":{"start":{"line":2083,"column":1,"offset":65472},"end":{"line":2083,"column":207,"offset":65678}}}],"position":{"start":{"line":2083,"column":1,"offset":65472},"end":{"line":2083,"column":207,"offset":65678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"➤ ","position":{"start":{"line":2085,"column":4,"offset":65683},"end":{"line":2085,"column":6,"offset":65685}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/clone-graph/description/"},"children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":2085,"column":7,"offset":65686},"end":{"line":2085,"column":23,"offset":65702}}}],"position":{"start":{"line":2085,"column":6,"offset":65685},"end":{"line":2085,"column":80,"offset":65759}}}],"position":{"start":{"line":2085,"column":1,"offset":65680},"end":{"line":2085,"column":80,"offset":65759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":2087,"column":5,"offset":65765},"end":{"line":2087,"column":13,"offset":65773}}}],"position":{"start":{"line":2087,"column":1,"offset":65761},"end":{"line":2087,"column":13,"offset":65773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":2089,"column":1,"offset":65775},"end":{"line":2089,"column":103,"offset":65877}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label"}],"position":{"start":{"line":2089,"column":103,"offset":65877},"end":{"line":2089,"column":110,"offset":65884}}},{"type":"text","value":" (","position":{"start":{"line":2089,"column":110,"offset":65884},"end":{"line":2089,"column":112,"offset":65886}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}],"position":{"start":{"line":2089,"column":112,"offset":65886},"end":{"line":2089,"column":117,"offset":65891}}},{"type":"text","value":") and a list (","position":{"start":{"line":2089,"column":117,"offset":65891},"end":{"line":2089,"column":131,"offset":65905}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List[UndirectedGraphNode]"}],"position":{"start":{"line":2089,"column":131,"offset":65905},"end":{"line":2089,"column":158,"offset":65932}}},{"type":"text","value":") of its ","position":{"start":{"line":2089,"column":158,"offset":65932},"end":{"line":2089,"column":167,"offset":65941}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"neighbors"}],"position":{"start":{"line":2089,"column":167,"offset":65941},"end":{"line":2089,"column":178,"offset":65952}}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":2089,"column":178,"offset":65952},"end":{"line":2089,"column":259,"offset":66033}}}],"position":{"start":{"line":2089,"column":1,"offset":65775},"end":{"line":2089,"column":259,"offset":66033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":2091,"column":1,"offset":66035},"end":{"line":2091,"column":74,"offset":66108}}}],"position":{"start":{"line":2091,"column":1,"offset":66035},"end":{"line":2091,"column":74,"offset":66108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":2093,"column":1,"offset":66110},"end":{"line":2093,"column":28,"offset":66137}}}],"position":{"start":{"line":2093,"column":1,"offset":66110},"end":{"line":2093,"column":28,"offset":66137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use ","position":{"start":{"line":2095,"column":1,"offset":66139},"end":{"line":2095,"column":8,"offset":66146}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":2095,"column":8,"offset":66146},"end":{"line":2095,"column":11,"offset":66149}}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":2095,"column":11,"offset":66149},"end":{"line":2095,"column":46,"offset":66184}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":","}],"position":{"start":{"line":2095,"column":46,"offset":66184},"end":{"line":2095,"column":49,"offset":66187}}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":2095,"column":49,"offset":66187},"end":{"line":2095,"column":110,"offset":66248}}}],"position":{"start":{"line":2095,"column":1,"offset":66139},"end":{"line":2095,"column":110,"offset":66248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":2097,"column":1,"offset":66250},"end":{"line":2097,"column":46,"offset":66295}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{0,1,2#1,2#2,2}"}],"position":{"start":{"line":2097,"column":46,"offset":66295},"end":{"line":2097,"column":63,"offset":66312}}},{"type":"text","value":".","position":{"start":{"line":2097,"column":63,"offset":66312},"end":{"line":2097,"column":64,"offset":66313}}}],"position":{"start":{"line":2097,"column":1,"offset":66250},"end":{"line":2097,"column":64,"offset":66313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":2099,"column":1,"offset":66315},"end":{"line":2099,"column":90,"offset":66404}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":2099,"column":90,"offset":66404},"end":{"line":2099,"column":93,"offset":66407}}},{"type":"text","value":".","position":{"start":{"line":2099,"column":93,"offset":66407},"end":{"line":2099,"column":94,"offset":66408}}}],"position":{"start":{"line":2099,"column":1,"offset":66315},"end":{"line":2099,"column":94,"offset":66408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":2101,"column":5,"offset":66414},"end":{"line":2101,"column":30,"offset":66439}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":2101,"column":30,"offset":66439},"end":{"line":2101,"column":33,"offset":66442}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2101,"column":33,"offset":66442},"end":{"line":2101,"column":48,"offset":66457}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":2101,"column":48,"offset":66457},"end":{"line":2101,"column":51,"offset":66460}}},{"type":"text","value":" to both nodes ","position":{"start":{"line":2101,"column":51,"offset":66460},"end":{"line":2101,"column":66,"offset":66475}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2101,"column":66,"offset":66475},"end":{"line":2101,"column":69,"offset":66478}}},{"type":"text","value":" and ","position":{"start":{"line":2101,"column":69,"offset":66478},"end":{"line":2101,"column":74,"offset":66483}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2101,"column":74,"offset":66483},"end":{"line":2101,"column":77,"offset":66486}}},{"type":"text","value":".","position":{"start":{"line":2101,"column":77,"offset":66486},"end":{"line":2101,"column":78,"offset":66487}}}],"position":{"start":{"line":2101,"column":1,"offset":66410},"end":{"line":2101,"column":78,"offset":66487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":2102,"column":5,"offset":66492},"end":{"line":2102,"column":31,"offset":66518}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2102,"column":31,"offset":66518},"end":{"line":2102,"column":34,"offset":66521}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2102,"column":34,"offset":66521},"end":{"line":2102,"column":49,"offset":66536}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":2102,"column":49,"offset":66536},"end":{"line":2102,"column":52,"offset":66539}}},{"type":"text","value":" to node ","position":{"start":{"line":2102,"column":52,"offset":66539},"end":{"line":2102,"column":61,"offset":66548}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2102,"column":61,"offset":66548},"end":{"line":2102,"column":64,"offset":66551}}},{"type":"text","value":".","position":{"start":{"line":2102,"column":64,"offset":66551},"end":{"line":2102,"column":65,"offset":66552}}}],"position":{"start":{"line":2102,"column":1,"offset":66488},"end":{"line":2102,"column":65,"offset":66552}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":2103,"column":5,"offset":66557},"end":{"line":2103,"column":30,"offset":66582}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2103,"column":30,"offset":66582},"end":{"line":2103,"column":33,"offset":66585}}},{"type":"text","value":". Connect node ","position":{"start":{"line":2103,"column":33,"offset":66585},"end":{"line":2103,"column":48,"offset":66600}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2103,"column":48,"offset":66600},"end":{"line":2103,"column":51,"offset":66603}}},{"type":"text","value":" to node ","position":{"start":{"line":2103,"column":51,"offset":66603},"end":{"line":2103,"column":60,"offset":66612}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":2103,"column":60,"offset":66612},"end":{"line":2103,"column":63,"offset":66615}}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":2103,"column":63,"offset":66615},"end":{"line":2103,"column":100,"offset":66652}}}],"position":{"start":{"line":2103,"column":1,"offset":66553},"end":{"line":2103,"column":100,"offset":66652}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2101,"column":1,"offset":66410},"end":{"line":2103,"column":100,"offset":66652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":2105,"column":1,"offset":66654},"end":{"line":2105,"column":46,"offset":66699}}}],"position":{"start":{"line":2105,"column":1,"offset":66654},"end":{"line":2105,"column":46,"offset":66699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/\n"}],"position":{"start":{"line":2107,"column":1,"offset":66701},"end":{"line":2115,"column":4,"offset":66777}}}],"position":{"start":{"line":2107,"column":1,"offset":66701},"end":{"line":2115,"column":4,"offset":66777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":2117,"column":3,"offset":66781},"end":{"line":2117,"column":7,"offset":66785}}}],"position":{"start":{"line":2117,"column":1,"offset":66779},"end":{"line":2117,"column":9,"offset":66787}}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":2117,"column":9,"offset":66787},"end":{"line":2117,"column":205,"offset":66983}}}],"position":{"start":{"line":2117,"column":1,"offset":66779},"end":{"line":2117,"column":205,"offset":66983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":2119,"column":5,"offset":66989},"end":{"line":2119,"column":14,"offset":66998}}}],"position":{"start":{"line":2119,"column":1,"offset":66985},"end":{"line":2119,"column":14,"offset":66998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":2121,"column":1,"offset":67000},"end":{"line":2121,"column":64,"offset":67063}}}],"position":{"start":{"line":2121,"column":1,"offset":67000},"end":{"line":2121,"column":64,"offset":67063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};\n"}],"position":{"start":{"line":2123,"column":1,"offset":67065},"end":{"line":2153,"column":4,"offset":67745}}}],"position":{"start":{"line":2123,"column":1,"offset":67065},"end":{"line":2153,"column":4,"offset":67745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","title":"binary-tree-upside-down"},"children":[],"position":{"start":{"line":2155,"column":1,"offset":67747},"end":{"line":2155,"column":127,"offset":67873}}}],"position":{"start":{"line":2155,"column":1,"offset":67747},"end":{"line":2155,"column":127,"offset":67873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};\n"}],"position":{"start":{"line":2157,"column":1,"offset":67875},"end":{"line":2199,"column":4,"offset":68730}}}],"position":{"start":{"line":2157,"column":1,"offset":67875},"end":{"line":2199,"column":4,"offset":68730}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","title":"maximum-sum-circular-subarray"},"children":[],"position":{"start":{"line":2201,"column":1,"offset":68732},"end":{"line":2201,"column":138,"offset":68869}}}],"position":{"start":{"line":2201,"column":1,"offset":68732},"end":{"line":2201,"column":138,"offset":68869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};\n"}],"position":{"start":{"line":2203,"column":1,"offset":68871},"end":{"line":2224,"column":4,"offset":69377}}}],"position":{"start":{"line":2203,"column":1,"offset":68871},"end":{"line":2224,"column":4,"offset":69377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#balanced-binary-tree---leetcode"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2226,"column":2,"offset":69380},"end":{"line":2226,"column":142,"offset":69520}}}],"position":{"start":{"line":2226,"column":1,"offset":69379},"end":{"line":2226,"column":177,"offset":69555}}}],"position":{"start":{"line":2226,"column":1,"offset":69379},"end":{"line":2226,"column":177,"offset":69555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"➤ Balanced Binary Tree - LeetCode","position":{"start":{"line":2228,"column":3,"offset":69559},"end":{"line":2228,"column":36,"offset":69592}}}],"position":{"start":{"line":2228,"column":1,"offset":69557},"end":{"line":2228,"column":36,"offset":69592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2230,"column":3,"offset":69596},"end":{"line":2230,"column":144,"offset":69737}}}],"position":{"start":{"line":2230,"column":3,"offset":69596},"end":{"line":2230,"column":144,"offset":69737}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2230,"column":1,"offset":69594},"end":{"line":2230,"column":144,"offset":69737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":2232,"column":1,"offset":69739},"end":{"line":2232,"column":57,"offset":69795}}}],"position":{"start":{"line":2232,"column":1,"offset":69739},"end":{"line":2232,"column":57,"offset":69795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":2234,"column":1,"offset":69797},"end":{"line":2234,"column":63,"offset":69859}}}],"position":{"start":{"line":2234,"column":1,"offset":69797},"end":{"line":2234,"column":63,"offset":69859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":2236,"column":3,"offset":69863},"end":{"line":2236,"column":57,"offset":69917}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":2236,"column":58,"offset":69918},"end":{"line":2236,"column":63,"offset":69923}}}],"position":{"start":{"line":2236,"column":57,"offset":69917},"end":{"line":2236,"column":64,"offset":69924}}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":2236,"column":64,"offset":69924},"end":{"line":2236,"column":105,"offset":69965}}}],"position":{"start":{"line":2236,"column":3,"offset":69863},"end":{"line":2236,"column":105,"offset":69965}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2236,"column":1,"offset":69861},"end":{"line":2236,"column":105,"offset":69965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":2238,"column":3,"offset":69969},"end":{"line":2238,"column":13,"offset":69979}}}],"position":{"start":{"line":2238,"column":1,"offset":69967},"end":{"line":2238,"column":15,"offset":69981}}}],"position":{"start":{"line":2238,"column":1,"offset":69967},"end":{"line":2238,"column":15,"offset":69981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null},"children":[],"position":{"start":{"line":2240,"column":1,"offset":69983},"end":{"line":2240,"column":66,"offset":70048}}}],"position":{"start":{"line":2240,"column":1,"offset":69983},"end":{"line":2240,"column":66,"offset":70048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2242,"column":3,"offset":70052},"end":{"line":2242,"column":9,"offset":70058}}}],"position":{"start":{"line":2242,"column":1,"offset":70050},"end":{"line":2242,"column":11,"offset":70060}}},{"type":"text","value":" root = ","position":{"start":{"line":2242,"column":11,"offset":70060},"end":{"line":2242,"column":19,"offset":70068}}},{"type":"text","value":"[","position":{"start":{"line":2242,"column":19,"offset":70068},"end":{"line":2242,"column":21,"offset":70070}}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":2242,"column":21,"offset":70070},"end":{"line":2243,"column":1,"offset":70093}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2243,"column":3,"offset":70095},"end":{"line":2243,"column":10,"offset":70102}}}],"position":{"start":{"line":2243,"column":1,"offset":70093},"end":{"line":2243,"column":12,"offset":70104}}},{"type":"text","value":" true","position":{"start":{"line":2243,"column":12,"offset":70104},"end":{"line":2243,"column":17,"offset":70109}}}],"position":{"start":{"line":2242,"column":1,"offset":70050},"end":{"line":2243,"column":17,"offset":70109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":2245,"column":3,"offset":70113},"end":{"line":2245,"column":13,"offset":70123}}}],"position":{"start":{"line":2245,"column":1,"offset":70111},"end":{"line":2245,"column":15,"offset":70125}}}],"position":{"start":{"line":2245,"column":1,"offset":70111},"end":{"line":2245,"column":15,"offset":70125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null},"children":[],"position":{"start":{"line":2247,"column":1,"offset":70127},"end":{"line":2247,"column":66,"offset":70192}}}],"position":{"start":{"line":2247,"column":1,"offset":70127},"end":{"line":2247,"column":66,"offset":70192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2249,"column":3,"offset":70196},"end":{"line":2249,"column":9,"offset":70202}}}],"position":{"start":{"line":2249,"column":1,"offset":70194},"end":{"line":2249,"column":11,"offset":70204}}},{"type":"text","value":" root = ","position":{"start":{"line":2249,"column":11,"offset":70204},"end":{"line":2249,"column":19,"offset":70212}}},{"type":"text","value":"[","position":{"start":{"line":2249,"column":19,"offset":70212},"end":{"line":2249,"column":21,"offset":70214}}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":2249,"column":21,"offset":70214},"end":{"line":2250,"column":1,"offset":70239}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2250,"column":3,"offset":70241},"end":{"line":2250,"column":10,"offset":70248}}}],"position":{"start":{"line":2250,"column":1,"offset":70239},"end":{"line":2250,"column":12,"offset":70250}}},{"type":"text","value":" false","position":{"start":{"line":2250,"column":12,"offset":70250},"end":{"line":2250,"column":18,"offset":70256}}}],"position":{"start":{"line":2249,"column":1,"offset":70194},"end":{"line":2250,"column":18,"offset":70256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":2252,"column":3,"offset":70260},"end":{"line":2252,"column":13,"offset":70270}}}],"position":{"start":{"line":2252,"column":1,"offset":70258},"end":{"line":2252,"column":15,"offset":70272}}}],"position":{"start":{"line":2252,"column":1,"offset":70258},"end":{"line":2252,"column":15,"offset":70272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2254,"column":3,"offset":70276},"end":{"line":2254,"column":9,"offset":70282}}}],"position":{"start":{"line":2254,"column":1,"offset":70274},"end":{"line":2254,"column":11,"offset":70284}}},{"type":"text","value":" root = ","position":{"start":{"line":2254,"column":11,"offset":70284},"end":{"line":2254,"column":19,"offset":70292}}},{"type":"text","value":"[","position":{"start":{"line":2254,"column":19,"offset":70292},"end":{"line":2254,"column":21,"offset":70294}}},{"type":"text","value":"]\n","position":{"start":{"line":2254,"column":21,"offset":70294},"end":{"line":2255,"column":1,"offset":70296}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2255,"column":3,"offset":70298},"end":{"line":2255,"column":10,"offset":70305}}}],"position":{"start":{"line":2255,"column":1,"offset":70296},"end":{"line":2255,"column":12,"offset":70307}}},{"type":"text","value":" true","position":{"start":{"line":2255,"column":12,"offset":70307},"end":{"line":2255,"column":17,"offset":70312}}}],"position":{"start":{"line":2254,"column":1,"offset":70274},"end":{"line":2255,"column":17,"offset":70312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":2257,"column":3,"offset":70316},"end":{"line":2257,"column":15,"offset":70328}}}],"position":{"start":{"line":2257,"column":1,"offset":70314},"end":{"line":2257,"column":17,"offset":70330}}}],"position":{"start":{"line":2257,"column":1,"offset":70314},"end":{"line":2257,"column":17,"offset":70330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":2259,"column":5,"offset":70336},"end":{"line":2259,"column":53,"offset":70384}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 5000]"}],"position":{"start":{"line":2259,"column":53,"offset":70384},"end":{"line":2259,"column":64,"offset":70395}}},{"type":"text","value":".","position":{"start":{"line":2259,"column":64,"offset":70395},"end":{"line":2259,"column":65,"offset":70396}}}],"position":{"start":{"line":2259,"column":1,"offset":70332},"end":{"line":2259,"column":65,"offset":70396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-104 <= Node.val <= 104"}],"position":{"start":{"line":2260,"column":5,"offset":70401},"end":{"line":2260,"column":30,"offset":70426}}}],"position":{"start":{"line":2260,"column":1,"offset":70397},"end":{"line":2260,"column":30,"offset":70426}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2259,"column":1,"offset":70332},"end":{"line":2260,"column":30,"offset":70426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/balanced-binary-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2262,"column":2,"offset":70429},"end":{"line":2262,"column":8,"offset":70435}}}],"position":{"start":{"line":2262,"column":1,"offset":70428},"end":{"line":2262,"column":62,"offset":70489}}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":2262,"column":62,"offset":70489},"end":{"line":2262,"column":106,"offset":70533}}}],"position":{"start":{"line":2262,"column":1,"offset":70428},"end":{"line":2262,"column":106,"offset":70533}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2264,"column":3,"offset":70537},"end":{"line":2264,"column":144,"offset":70678}}}],"position":{"start":{"line":2264,"column":3,"offset":70537},"end":{"line":2264,"column":144,"offset":70678}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2264,"column":1,"offset":70535},"end":{"line":2264,"column":144,"offset":70678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":2266,"column":1,"offset":70680},"end":{"line":2266,"column":98,"offset":70777}}}],"position":{"start":{"line":2266,"column":1,"offset":70680},"end":{"line":2266,"column":98,"offset":70777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":2268,"column":1,"offset":70779},"end":{"line":2268,"column":119,"offset":70897}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":2268,"column":120,"offset":70898},"end":{"line":2268,"column":125,"offset":70903}}}],"position":{"start":{"line":2268,"column":119,"offset":70897},"end":{"line":2268,"column":126,"offset":70904}}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":2268,"column":126,"offset":70904},"end":{"line":2268,"column":160,"offset":70938}}}],"position":{"start":{"line":2268,"column":1,"offset":70779},"end":{"line":2268,"column":160,"offset":70938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":2270,"column":3,"offset":70942},"end":{"line":2270,"column":11,"offset":70950}}}],"position":{"start":{"line":2270,"column":1,"offset":70940},"end":{"line":2270,"column":13,"offset":70952}}}],"position":{"start":{"line":2270,"column":1,"offset":70940},"end":{"line":2270,"column":13,"offset":70952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":2272,"column":1,"offset":70954},"end":{"line":2272,"column":25,"offset":70978}}},{"type":"text","value":"[","position":{"start":{"line":2272,"column":25,"offset":70978},"end":{"line":2272,"column":27,"offset":70980}}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":2272,"column":27,"offset":70980},"end":{"line":2272,"column":41,"offset":70994}}}],"position":{"start":{"line":2272,"column":1,"offset":70954},"end":{"line":2272,"column":41,"offset":70994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":2274,"column":1,"offset":70996},"end":{"line":2274,"column":25,"offset":71020}}},{"type":"text","value":"[","position":{"start":{"line":2274,"column":25,"offset":71020},"end":{"line":2274,"column":27,"offset":71022}}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":2274,"column":27,"offset":71022},"end":{"line":2274,"column":98,"offset":71093}}}],"position":{"start":{"line":2274,"column":1,"offset":70996},"end":{"line":2274,"column":98,"offset":71093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"  0\n / \\\\\n"}],"position":{"start":{"line":2276,"column":1,"offset":71095},"end":{"line":2277,"column":10,"offset":71112}}}],"position":{"start":{"line":2276,"column":1,"offset":71095},"end":{"line":2277,"column":10,"offset":71112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"-","position":{"start":{"line":2279,"column":1,"offset":71114},"end":{"line":2279,"column":3,"offset":71116}}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":2279,"column":3,"offset":71116},"end":{"line":2281,"column":1,"offset":71124}}},{"type":"text","value":"-","position":{"start":{"line":2281,"column":1,"offset":71124},"end":{"line":2281,"column":3,"offset":71126}}},{"type":"text","value":"10 5","position":{"start":{"line":2281,"column":3,"offset":71126},"end":{"line":2281,"column":7,"offset":71130}}}],"position":{"start":{"line":2279,"column":1,"offset":71114},"end":{"line":2281,"column":7,"offset":71130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2283,"column":2,"offset":71133},"end":{"line":2283,"column":8,"offset":71139}}}],"position":{"start":{"line":2283,"column":1,"offset":71132},"end":{"line":2283,"column":84,"offset":71215}}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":2283,"column":84,"offset":71215},"end":{"line":2283,"column":106,"offset":71237}}}],"position":{"start":{"line":2283,"column":1,"offset":71132},"end":{"line":2283,"column":106,"offset":71237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":2285,"column":3,"offset":71241},"end":{"line":2285,"column":144,"offset":71382}}}],"position":{"start":{"line":2285,"column":3,"offset":71241},"end":{"line":2285,"column":144,"offset":71382}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2285,"column":1,"offset":71239},"end":{"line":2285,"column":144,"offset":71382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":2287,"column":1,"offset":71384},"end":{"line":2287,"column":157,"offset":71540}}}],"position":{"start":{"line":2287,"column":1,"offset":71384},"end":{"line":2287,"column":157,"offset":71540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":2289,"column":1,"offset":71542},"end":{"line":2289,"column":56,"offset":71597}}}],"position":{"start":{"line":2289,"column":1,"offset":71542},"end":{"line":2289,"column":56,"offset":71597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":2291,"column":5,"offset":71603},"end":{"line":2291,"column":33,"offset":71631}}}],"position":{"start":{"line":2291,"column":1,"offset":71599},"end":{"line":2291,"column":33,"offset":71631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":2292,"column":5,"offset":71636},"end":{"line":2292,"column":43,"offset":71674}}}],"position":{"start":{"line":2292,"column":1,"offset":71632},"end":{"line":2292,"column":43,"offset":71674}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2291,"column":1,"offset":71599},"end":{"line":2292,"column":43,"offset":71674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":2294,"column":3,"offset":71678},"end":{"line":2294,"column":13,"offset":71688}}}],"position":{"start":{"line":2294,"column":1,"offset":71676},"end":{"line":2294,"column":15,"offset":71690}}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":2294,"column":15,"offset":71690},"end":{"line":2294,"column":54,"offset":71729}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(height of tree)"}],"position":{"start":{"line":2294,"column":54,"offset":71729},"end":{"line":2294,"column":73,"offset":71748}}},{"type":"text","value":"?","position":{"start":{"line":2294,"column":73,"offset":71748},"end":{"line":2294,"column":74,"offset":71749}}}],"position":{"start":{"line":2294,"column":1,"offset":71676},"end":{"line":2294,"column":74,"offset":71749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":2296,"column":3,"offset":71753},"end":{"line":2296,"column":13,"offset":71763}}}],"position":{"start":{"line":2296,"column":1,"offset":71751},"end":{"line":2296,"column":15,"offset":71765}}}],"position":{"start":{"line":2296,"column":1,"offset":71751},"end":{"line":2296,"column":15,"offset":71765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null},"children":[],"position":{"start":{"line":2298,"column":1,"offset":71767},"end":{"line":2298,"column":67,"offset":71833}}}],"position":{"start":{"line":2298,"column":1,"offset":71767},"end":{"line":2298,"column":67,"offset":71833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2300,"column":3,"offset":71837},"end":{"line":2300,"column":9,"offset":71843}}}],"position":{"start":{"line":2300,"column":1,"offset":71835},"end":{"line":2300,"column":11,"offset":71845}}},{"type":"text","value":" root = ","position":{"start":{"line":2300,"column":11,"offset":71845},"end":{"line":2300,"column":19,"offset":71853}}},{"type":"text","value":"[","position":{"start":{"line":2300,"column":19,"offset":71853},"end":{"line":2300,"column":21,"offset":71855}}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":2300,"column":21,"offset":71855},"end":{"line":2301,"column":1,"offset":71882}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2301,"column":3,"offset":71884},"end":{"line":2301,"column":10,"offset":71891}}}],"position":{"start":{"line":2301,"column":1,"offset":71882},"end":{"line":2301,"column":12,"offset":71893}}},{"type":"text","value":" ","position":{"start":{"line":2301,"column":12,"offset":71893},"end":{"line":2301,"column":13,"offset":71894}}},{"type":"text","value":"[","position":{"start":{"line":2301,"column":13,"offset":71894},"end":{"line":2301,"column":15,"offset":71896}}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":2301,"column":15,"offset":71896},"end":{"line":2302,"column":1,"offset":71917}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":2302,"column":3,"offset":71919},"end":{"line":2302,"column":15,"offset":71931}}}],"position":{"start":{"line":2302,"column":1,"offset":71917},"end":{"line":2302,"column":17,"offset":71933}}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":2302,"column":17,"offset":71933},"end":{"line":2303,"column":21,"offset":72028}}},{"type":"text","value":"[","position":{"start":{"line":2303,"column":21,"offset":72028},"end":{"line":2303,"column":23,"offset":72030}}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":2303,"column":23,"offset":72030},"end":{"line":2304,"column":44,"offset":72119}}},{"type":"text","value":"[","position":{"start":{"line":2304,"column":44,"offset":72119},"end":{"line":2304,"column":46,"offset":72121}}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":2304,"column":46,"offset":72121},"end":{"line":2305,"column":1,"offset":72166}}},{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null},"children":[],"position":{"start":{"line":2305,"column":1,"offset":72166},"end":{"line":2305,"column":70,"offset":72235}}}],"position":{"start":{"line":2300,"column":1,"offset":71835},"end":{"line":2305,"column":70,"offset":72235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":2307,"column":3,"offset":72239},"end":{"line":2307,"column":13,"offset":72249}}}],"position":{"start":{"line":2307,"column":1,"offset":72237},"end":{"line":2307,"column":15,"offset":72251}}}],"position":{"start":{"line":2307,"column":1,"offset":72237},"end":{"line":2307,"column":15,"offset":72251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2309,"column":3,"offset":72255},"end":{"line":2309,"column":9,"offset":72261}}}],"position":{"start":{"line":2309,"column":1,"offset":72253},"end":{"line":2309,"column":11,"offset":72263}}},{"type":"text","value":" root = ","position":{"start":{"line":2309,"column":11,"offset":72263},"end":{"line":2309,"column":19,"offset":72271}}},{"type":"text","value":"[","position":{"start":{"line":2309,"column":19,"offset":72271},"end":{"line":2309,"column":21,"offset":72273}}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":2309,"column":21,"offset":72273},"end":{"line":2310,"column":1,"offset":72300}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2310,"column":3,"offset":72302},"end":{"line":2310,"column":10,"offset":72309}}}],"position":{"start":{"line":2310,"column":1,"offset":72300},"end":{"line":2310,"column":12,"offset":72311}}},{"type":"text","value":" ","position":{"start":{"line":2310,"column":12,"offset":72311},"end":{"line":2310,"column":13,"offset":72312}}},{"type":"text","value":"[","position":{"start":{"line":2310,"column":13,"offset":72312},"end":{"line":2310,"column":15,"offset":72314}}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":2310,"column":15,"offset":72314},"end":{"line":2311,"column":1,"offset":72332}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":2311,"column":3,"offset":72334},"end":{"line":2311,"column":15,"offset":72346}}}],"position":{"start":{"line":2311,"column":1,"offset":72332},"end":{"line":2311,"column":17,"offset":72348}}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":2311,"column":17,"offset":72348},"end":{"line":2311,"column":66,"offset":72397}}}],"position":{"start":{"line":2309,"column":1,"offset":72253},"end":{"line":2311,"column":66,"offset":72397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":2313,"column":3,"offset":72401},"end":{"line":2313,"column":13,"offset":72411}}}],"position":{"start":{"line":2313,"column":1,"offset":72399},"end":{"line":2313,"column":15,"offset":72413}}}],"position":{"start":{"line":2313,"column":1,"offset":72399},"end":{"line":2313,"column":15,"offset":72413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":2315,"column":3,"offset":72417},"end":{"line":2315,"column":9,"offset":72423}}}],"position":{"start":{"line":2315,"column":1,"offset":72415},"end":{"line":2315,"column":11,"offset":72425}}},{"type":"text","value":" root = ","position":{"start":{"line":2315,"column":11,"offset":72425},"end":{"line":2315,"column":19,"offset":72433}}},{"type":"text","value":"[","position":{"start":{"line":2315,"column":19,"offset":72433},"end":{"line":2315,"column":21,"offset":72435}}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":2315,"column":21,"offset":72435},"end":{"line":2316,"column":1,"offset":72446}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":2316,"column":3,"offset":72448},"end":{"line":2316,"column":10,"offset":72455}}}],"position":{"start":{"line":2316,"column":1,"offset":72446},"end":{"line":2316,"column":12,"offset":72457}}},{"type":"text","value":" ","position":{"start":{"line":2316,"column":12,"offset":72457},"end":{"line":2316,"column":13,"offset":72458}}},{"type":"text","value":"[","position":{"start":{"line":2316,"column":13,"offset":72458},"end":{"line":2316,"column":15,"offset":72460}}},{"type":"text","value":"]","position":{"start":{"line":2316,"column":15,"offset":72460},"end":{"line":2316,"column":16,"offset":72461}}}],"position":{"start":{"line":2315,"column":1,"offset":72415},"end":{"line":2316,"column":16,"offset":72461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":2318,"column":3,"offset":72465},"end":{"line":2318,"column":15,"offset":72477}}}],"position":{"start":{"line":2318,"column":1,"offset":72463},"end":{"line":2318,"column":17,"offset":72479}}}],"position":{"start":{"line":2318,"column":1,"offset":72463},"end":{"line":2318,"column":17,"offset":72479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":2320,"column":5,"offset":72485},"end":{"line":2320,"column":53,"offset":72533}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 104]"}],"position":{"start":{"line":2320,"column":53,"offset":72533},"end":{"line":2320,"column":63,"offset":72543}}},{"type":"text","value":".","position":{"start":{"line":2320,"column":63,"offset":72543},"end":{"line":2320,"column":64,"offset":72544}}}],"position":{"start":{"line":2320,"column":1,"offset":72481},"end":{"line":2320,"column":64,"offset":72544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= Node.val <= 105"}],"position":{"start":{"line":2321,"column":5,"offset":72549},"end":{"line":2321,"column":30,"offset":72574}}}],"position":{"start":{"line":2321,"column":1,"offset":72545},"end":{"line":2321,"column":30,"offset":72574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":2322,"column":5,"offset":72579},"end":{"line":2322,"column":21,"offset":72595}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"unique","position":{"start":{"line":2322,"column":23,"offset":72597},"end":{"line":2322,"column":29,"offset":72603}}}],"position":{"start":{"line":2322,"column":21,"offset":72595},"end":{"line":2322,"column":31,"offset":72605}}},{"type":"text","value":" value.","position":{"start":{"line":2322,"column":31,"offset":72605},"end":{"line":2322,"column":38,"offset":72612}}}],"position":{"start":{"line":2322,"column":1,"offset":72575},"end":{"line":2322,"column":38,"offset":72612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":2323,"column":5,"offset":72617},"end":{"line":2323,"column":11,"offset":72623}}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":2323,"column":11,"offset":72623},"end":{"line":2323,"column":42,"offset":72654}}}],"position":{"start":{"line":2323,"column":1,"offset":72613},"end":{"line":2323,"column":42,"offset":72654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= key <= 105"}],"position":{"start":{"line":2324,"column":5,"offset":72659},"end":{"line":2324,"column":25,"offset":72679}}}],"position":{"start":{"line":2324,"column":1,"offset":72655},"end":{"line":2324,"column":25,"offset":72679}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2320,"column":1,"offset":72481},"end":{"line":2324,"column":25,"offset":72679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/delete-node-in-a-bst/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":2326,"column":2,"offset":72682},"end":{"line":2326,"column":8,"offset":72688}}}],"position":{"start":{"line":2326,"column":1,"offset":72681},"end":{"line":2326,"column":62,"offset":72742}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":2326,"column":62,"offset":72742},"end":{"line":2326,"column":173,"offset":72853}}},{"type":"text","value":"\n","position":{"start":{"line":2326,"column":173,"offset":72853},"end":{"line":2327,"column":1,"offset":72854}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":2327,"column":1,"offset":72854},"end":{"line":2327,"column":112,"offset":72965}}}],"position":{"start":{"line":2326,"column":1,"offset":72681},"end":{"line":2327,"column":112,"offset":72965}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\n/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};\n"}],"position":{"start":{"line":2329,"column":1,"offset":72967},"end":{"line":2353,"column":4,"offset":73544}}}],"position":{"start":{"line":2329,"column":1,"offset":72967},"end":{"line":2353,"column":4,"offset":73544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#-"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":2355,"column":2,"offset":73547},"end":{"line":2355,"column":142,"offset":73687}}}],"position":{"start":{"line":2355,"column":1,"offset":73546},"end":{"line":2355,"column":147,"offset":73692}}}],"position":{"start":{"line":2355,"column":1,"offset":73546},"end":{"line":2355,"column":147,"offset":73692}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2356,"column":1,"offset":73693}}}}