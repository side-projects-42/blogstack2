{"expireTime":9007200914465209000,"key":"transformer-remark-markdown-html-ast-6858d7f8827f512a823e06b1a2612a18--","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"index","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":8,"offset":9}}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":8,"offset":9}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":5,"column":1,"offset":11},"end":{"line":5,"column":175,"offset":185}}}],"position":{"start":{"line":5,"column":1,"offset":11},"end":{"line":5,"column":175,"offset":185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":7,"column":1,"offset":187},"end":{"line":7,"column":319,"offset":505}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/"},"children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":7,"column":320,"offset":506},"end":{"line":7,"column":355,"offset":541}}}],"position":{"start":{"line":7,"column":319,"offset":505},"end":{"line":7,"column":388,"offset":574}}},{"type":"text","value":" ","position":{"start":{"line":7,"column":388,"offset":574},"end":{"line":7,"column":389,"offset":575}}},{"type":"text","value":"(","position":{"start":{"line":7,"column":389,"offset":575},"end":{"line":7,"column":391,"offset":577}}},{"type":"text","value":"MDN","position":{"start":{"line":7,"column":391,"offset":577},"end":{"line":7,"column":394,"offset":580}}},{"type":"text","value":")","position":{"start":{"line":7,"column":394,"offset":580},"end":{"line":7,"column":396,"offset":582}}},{"type":"text","value":".","position":{"start":{"line":7,"column":396,"offset":582},"end":{"line":7,"column":397,"offset":583}}}],"position":{"start":{"line":7,"column":1,"offset":187},"end":{"line":7,"column":397,"offset":583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":9,"column":4,"offset":588},"end":{"line":9,"column":11,"offset":595}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":9,"column":11,"offset":595},"end":{"line":9,"column":18,"offset":602}}},{"type":"text","value":" and ","position":{"start":{"line":9,"column":18,"offset":602},"end":{"line":9,"column":23,"offset":607}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":9,"column":23,"offset":607},"end":{"line":9,"column":28,"offset":612}}},{"type":"text","value":" over ","position":{"start":{"line":9,"column":28,"offset":612},"end":{"line":9,"column":34,"offset":618}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":9,"column":34,"offset":618},"end":{"line":9,"column":39,"offset":623}}}],"position":{"start":{"line":9,"column":1,"offset":585},"end":{"line":9,"column":39,"offset":623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":11,"column":1,"offset":625},"end":{"line":11,"column":99,"offset":723}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":11,"column":99,"offset":723},"end":{"line":11,"column":104,"offset":728}}},{"type":"text","value":":","position":{"start":{"line":11,"column":104,"offset":728},"end":{"line":11,"column":105,"offset":729}}}],"position":{"start":{"line":11,"column":1,"offset":625},"end":{"line":11,"column":105,"offset":729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ar myVariable = 5;\n"}],"position":{"start":{"line":13,"column":1,"offset":731},"end":{"line":15,"column":4,"offset":761}}}],"position":{"start":{"line":13,"column":1,"offset":731},"end":{"line":15,"column":4,"offset":761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both the ","position":{"start":{"line":17,"column":1,"offset":763},"end":{"line":17,"column":10,"offset":772}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":17,"column":10,"offset":772},"end":{"line":17,"column":17,"offset":779}}},{"type":"text","value":" and ","position":{"start":{"line":17,"column":17,"offset":779},"end":{"line":17,"column":22,"offset":784}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":17,"column":22,"offset":784},"end":{"line":17,"column":27,"offset":789}}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":17,"column":27,"offset":789},"end":{"line":17,"column":91,"offset":853}}}],"position":{"start":{"line":17,"column":1,"offset":763},"end":{"line":17,"column":91,"offset":853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":19,"column":1,"offset":855},"end":{"line":19,"column":5,"offset":859}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":19,"column":5,"offset":859},"end":{"line":19,"column":12,"offset":866}}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":19,"column":12,"offset":866},"end":{"line":19,"column":67,"offset":921}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":19,"column":67,"offset":921},"end":{"line":19,"column":74,"offset":928}}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":19,"column":74,"offset":928},"end":{"line":19,"column":211,"offset":1065}}}],"position":{"start":{"line":19,"column":1,"offset":855},"end":{"line":19,"column":211,"offset":1065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":21,"column":1,"offset":1067},"end":{"line":21,"column":42,"offset":1108}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":21,"column":42,"offset":1108},"end":{"line":21,"column":47,"offset":1113}}},{"type":"text","value":".","position":{"start":{"line":21,"column":47,"offset":1113},"end":{"line":21,"column":48,"offset":1114}}}],"position":{"start":{"line":21,"column":1,"offset":1067},"end":{"line":21,"column":48,"offset":1114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":23,"column":1,"offset":1116},"end":{"line":23,"column":25,"offset":1140}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":23,"column":25,"offset":1140},"end":{"line":23,"column":32,"offset":1147}}},{"type":"text","value":" and ","position":{"start":{"line":23,"column":32,"offset":1147},"end":{"line":23,"column":37,"offset":1152}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":23,"column":37,"offset":1152},"end":{"line":23,"column":42,"offset":1157}}},{"type":"text","value":" instead of ","position":{"start":{"line":23,"column":42,"offset":1157},"end":{"line":23,"column":54,"offset":1169}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":23,"column":54,"offset":1169},"end":{"line":23,"column":59,"offset":1174}}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":23,"column":59,"offset":1174},"end":{"line":23,"column":106,"offset":1221}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":23,"column":106,"offset":1221},"end":{"line":23,"column":113,"offset":1228}}},{"type":"text","value":", both ","position":{"start":{"line":23,"column":113,"offset":1228},"end":{"line":23,"column":120,"offset":1235}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":23,"column":120,"offset":1235},"end":{"line":23,"column":127,"offset":1242}}},{"type":"text","value":" and ","position":{"start":{"line":23,"column":127,"offset":1242},"end":{"line":23,"column":132,"offset":1247}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":23,"column":132,"offset":1247},"end":{"line":23,"column":137,"offset":1252}}},{"type":"text","value":" are ","position":{"start":{"line":23,"column":137,"offset":1252},"end":{"line":23,"column":142,"offset":1257}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"block scoped","position":{"start":{"line":23,"column":143,"offset":1258},"end":{"line":23,"column":155,"offset":1270}}}],"position":{"start":{"line":23,"column":142,"offset":1257},"end":{"line":23,"column":156,"offset":1271}}},{"type":"text","value":" as opposed to ","position":{"start":{"line":23,"column":156,"offset":1271},"end":{"line":23,"column":171,"offset":1286}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function scoped","position":{"start":{"line":23,"column":172,"offset":1287},"end":{"line":23,"column":187,"offset":1302}}}],"position":{"start":{"line":23,"column":171,"offset":1286},"end":{"line":23,"column":188,"offset":1303}}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":23,"column":188,"offset":1303},"end":{"line":23,"column":234,"offset":1349}}}],"position":{"start":{"line":23,"column":1,"offset":1116},"end":{"line":23,"column":234,"offset":1349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":25,"column":4,"offset":1354},"end":{"line":25,"column":19,"offset":1369}}}],"position":{"start":{"line":25,"column":1,"offset":1351},"end":{"line":25,"column":19,"offset":1369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":27,"column":1,"offset":1371},"end":{"line":27,"column":121,"offset":1491}}}],"position":{"start":{"line":27,"column":1,"offset":1371},"end":{"line":27,"column":121,"offset":1491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];\n"}],"position":{"start":{"line":29,"column":1,"offset":1493},"end":{"line":34,"column":4,"offset":1593}}}],"position":{"start":{"line":29,"column":1,"offset":1493},"end":{"line":34,"column":4,"offset":1593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":36,"column":1,"offset":1595},"end":{"line":36,"column":116,"offset":1710}}}],"position":{"start":{"line":36,"column":1,"offset":1595},"end":{"line":36,"column":116,"offset":1710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const formattedPopulations = cities.map((city) => {\n  const popMM = (city.pop / 1000000).toFixed(2);\n  return popMM + ' million';\n});\nconsole.log(formattedPopulations);\n"}],"position":{"start":{"line":38,"column":1,"offset":1712},"end":{"line":44,"column":4,"offset":1892}}}],"position":{"start":{"line":38,"column":1,"offset":1712},"end":{"line":44,"column":4,"offset":1892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":46,"column":1,"offset":1894},"end":{"line":46,"column":45,"offset":1938}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}],"position":{"start":{"line":46,"column":45,"offset":1938},"end":{"line":46,"column":53,"offset":1946}}},{"type":"text","value":" for the function.","position":{"start":{"line":46,"column":53,"offset":1946},"end":{"line":46,"column":71,"offset":1964}}}],"position":{"start":{"line":46,"column":1,"offset":1894},"end":{"line":46,"column":71,"offset":1964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":48,"column":1,"offset":1966},"end":{"line":48,"column":65,"offset":2030}}},{"type":"text","value":"(","position":{"start":{"line":48,"column":65,"offset":2030},"end":{"line":48,"column":67,"offset":2032}}},{"type":"text","value":"or single expression","position":{"start":{"line":48,"column":67,"offset":2032},"end":{"line":48,"column":87,"offset":2052}}},{"type":"text","value":")","position":{"start":{"line":48,"column":87,"offset":2052},"end":{"line":48,"column":89,"offset":2054}}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":48,"column":89,"offset":2054},"end":{"line":48,"column":127,"offset":2092}}}],"position":{"start":{"line":48,"column":1,"offset":1966},"end":{"line":48,"column":127,"offset":2092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const formattedPopulations2 = cities.map((city) => (\n  (city.pop / 1000000).toFixed(2) + ' million'\n));\n"}],"position":{"start":{"line":50,"column":1,"offset":2094},"end":{"line":54,"column":4,"offset":2209}}}],"position":{"start":{"line":50,"column":1,"offset":2094},"end":{"line":54,"column":4,"offset":2209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":56,"column":1,"offset":2211},"end":{"line":56,"column":23,"offset":2233}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}],"position":{"start":{"line":56,"column":23,"offset":2233},"end":{"line":56,"column":31,"offset":2241}}},{"type":"text","value":" as it's implied.","position":{"start":{"line":56,"column":31,"offset":2241},"end":{"line":56,"column":48,"offset":2258}}}],"position":{"start":{"line":56,"column":1,"offset":2211},"end":{"line":56,"column":48,"offset":2258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":58,"column":1,"offset":2260},"end":{"line":58,"column":70,"offset":2329}}}],"position":{"start":{"line":58,"column":1,"offset":2260},"end":{"line":58,"column":70,"offset":2329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const pops = cities.map(city => city.pop);\nconsole.log(pops);\n"}],"position":{"start":{"line":60,"column":1,"offset":2331},"end":{"line":63,"column":4,"offset":2404}}}],"position":{"start":{"line":60,"column":1,"offset":2331},"end":{"line":63,"column":4,"offset":2404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":65,"column":1,"offset":2406},"end":{"line":65,"column":110,"offset":2515}}}],"position":{"start":{"line":65,"column":1,"offset":2406},"end":{"line":65,"column":110,"offset":2515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const popsNoArrow = cities.map(function(city) { return city.pop });\n"}],"position":{"start":{"line":67,"column":1,"offset":2517},"end":{"line":69,"column":4,"offset":2596}}}],"position":{"start":{"line":67,"column":1,"offset":2517},"end":{"line":69,"column":4,"offset":2596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":71,"column":1,"offset":2598},"end":{"line":71,"column":61,"offset":2658}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":71,"column":61,"offset":2658},"end":{"line":71,"column":67,"offset":2664}}},{"type":"text","value":" object.","position":{"start":{"line":71,"column":67,"offset":2664},"end":{"line":71,"column":75,"offset":2672}}}],"position":{"start":{"line":71,"column":1,"offset":2598},"end":{"line":71,"column":75,"offset":2672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":73,"column":1,"offset":2674},"end":{"line":73,"column":56,"offset":2729}}},{"type":"text","value":"(","position":{"start":{"line":73,"column":56,"offset":2729},"end":{"line":73,"column":58,"offset":2731}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function () {}"}],"position":{"start":{"line":73,"column":58,"offset":2731},"end":{"line":73,"column":74,"offset":2747}}},{"type":"text","value":")","position":{"start":{"line":73,"column":74,"offset":2747},"end":{"line":73,"column":76,"offset":2749}}},{"type":"text","value":" will bind ","position":{"start":{"line":73,"column":76,"offset":2749},"end":{"line":73,"column":87,"offset":2760}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":73,"column":87,"offset":2760},"end":{"line":73,"column":93,"offset":2766}}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":73,"column":93,"offset":2766},"end":{"line":73,"column":211,"offset":2884}}}],"position":{"start":{"line":73,"column":1,"offset":2674},"end":{"line":73,"column":211,"offset":2884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"}],"position":{"start":{"line":75,"column":1,"offset":2886},"end":{"line":104,"column":4,"offset":3376}}}],"position":{"start":{"line":75,"column":1,"offset":2886},"end":{"line":104,"column":4,"offset":3376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The method ","position":{"start":{"line":106,"column":1,"offset":3378},"end":{"line":106,"column":12,"offset":3389}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printSongs()"}],"position":{"start":{"line":106,"column":12,"offset":3389},"end":{"line":106,"column":26,"offset":3403}}},{"type":"text","value":" iterates over ","position":{"start":{"line":106,"column":26,"offset":3403},"end":{"line":106,"column":41,"offset":3418}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.songs"}],"position":{"start":{"line":106,"column":41,"offset":3418},"end":{"line":106,"column":53,"offset":3430}}},{"type":"text","value":" with ","position":{"start":{"line":106,"column":53,"offset":3430},"end":{"line":106,"column":59,"offset":3436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"forEach()"}],"position":{"start":{"line":106,"column":59,"offset":3436},"end":{"line":106,"column":70,"offset":3447}}},{"type":"text","value":". In this context, ","position":{"start":{"line":106,"column":70,"offset":3447},"end":{"line":106,"column":89,"offset":3466}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":106,"column":89,"offset":3466},"end":{"line":106,"column":95,"offset":3472}}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":106,"column":95,"offset":3472},"end":{"line":106,"column":119,"offset":3496}}},{"type":"text","value":"(","position":{"start":{"line":106,"column":119,"offset":3496},"end":{"line":106,"column":121,"offset":3498}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jukebox"}],"position":{"start":{"line":106,"column":121,"offset":3498},"end":{"line":106,"column":130,"offset":3507}}},{"type":"text","value":")","position":{"start":{"line":106,"column":130,"offset":3507},"end":{"line":106,"column":132,"offset":3509}}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":106,"column":132,"offset":3509},"end":{"line":106,"column":188,"offset":3565}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"forEach()"}],"position":{"start":{"line":106,"column":188,"offset":3565},"end":{"line":106,"column":199,"offset":3576}}},{"type":"text","value":" binds its internal ","position":{"start":{"line":106,"column":199,"offset":3576},"end":{"line":106,"column":219,"offset":3596}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":106,"column":219,"offset":3596},"end":{"line":106,"column":225,"offset":3602}}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":106,"column":225,"offset":3602},"end":{"line":106,"column":257,"offset":3634}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this.printSong(song)"}],"position":{"start":{"line":106,"column":257,"offset":3634},"end":{"line":106,"column":279,"offset":3656}}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":106,"column":279,"offset":3656},"end":{"line":106,"column":335,"offset":3712}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":106,"column":336,"offset":3713},"end":{"line":106,"column":339,"offset":3716}}}],"position":{"start":{"line":106,"column":335,"offset":3712},"end":{"line":106,"column":340,"offset":3717}}},{"type":"text","value":" the method on ","position":{"start":{"line":106,"column":340,"offset":3717},"end":{"line":106,"column":355,"offset":3732}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jukebox"}],"position":{"start":{"line":106,"column":355,"offset":3732},"end":{"line":106,"column":364,"offset":3741}}},{"type":"text","value":".","position":{"start":{"line":106,"column":364,"offset":3741},"end":{"line":106,"column":365,"offset":3742}}}],"position":{"start":{"line":106,"column":1,"offset":3378},"end":{"line":106,"column":365,"offset":3742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":108,"column":1,"offset":3744},"end":{"line":108,"column":119,"offset":3862}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"capturing the ","position":{"start":{"line":108,"column":121,"offset":3864},"end":{"line":108,"column":135,"offset":3878}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":108,"column":135,"offset":3878},"end":{"line":108,"column":141,"offset":3884}}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":108,"column":141,"offset":3884},"end":{"line":108,"column":172,"offset":3915}}}],"position":{"start":{"line":108,"column":119,"offset":3862},"end":{"line":108,"column":174,"offset":3917}}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":108,"column":174,"offset":3917},"end":{"line":108,"column":204,"offset":3947}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printSongs()"}],"position":{"start":{"line":108,"column":204,"offset":3947},"end":{"line":108,"column":218,"offset":3961}}},{"type":"text","value":" has the expected result:","position":{"start":{"line":108,"column":218,"offset":3961},"end":{"line":108,"column":243,"offset":3986}}}],"position":{"start":{"line":108,"column":1,"offset":3744},"end":{"line":108,"column":243,"offset":3986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"}],"position":{"start":{"line":110,"column":1,"offset":3988},"end":{"line":120,"column":4,"offset":4129}}}],"position":{"start":{"line":110,"column":1,"offset":3988},"end":{"line":120,"column":4,"offset":4129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":122,"column":1,"offset":4131},"end":{"line":122,"column":89,"offset":4219}}}],"position":{"start":{"line":122,"column":1,"offset":4131},"end":{"line":122,"column":89,"offset":4219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Modules","position":{"start":{"line":124,"column":4,"offset":4224},"end":{"line":124,"column":11,"offset":4231}}}],"position":{"start":{"line":124,"column":1,"offset":4221},"end":{"line":124,"column":11,"offset":4231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":126,"column":1,"offset":4233},"end":{"line":126,"column":41,"offset":4273}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import"}],"position":{"start":{"line":126,"column":41,"offset":4273},"end":{"line":126,"column":49,"offset":4281}}},{"type":"text","value":"/","position":{"start":{"line":126,"column":49,"offset":4281},"end":{"line":126,"column":50,"offset":4282}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":126,"column":50,"offset":4282},"end":{"line":126,"column":58,"offset":4290}}},{"type":"text","value":" syntax.","position":{"start":{"line":126,"column":58,"offset":4290},"end":{"line":126,"column":66,"offset":4298}}}],"position":{"start":{"line":126,"column":1,"offset":4233},"end":{"line":126,"column":66,"offset":4298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Named exports","position":{"start":{"line":128,"column":3,"offset":4302},"end":{"line":128,"column":16,"offset":4315}}}],"position":{"start":{"line":128,"column":1,"offset":4300},"end":{"line":128,"column":18,"offset":4317}}}],"position":{"start":{"line":128,"column":1,"offset":4300},"end":{"line":128,"column":18,"offset":4317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":130,"column":1,"offset":4319},"end":{"line":130,"column":30,"offset":4348}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":130,"column":30,"offset":4348},"end":{"line":130,"column":38,"offset":4356}}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":130,"column":38,"offset":4356},"end":{"line":130,"column":142,"offset":4460}}}],"position":{"start":{"line":130,"column":1,"offset":4319},"end":{"line":130,"column":142,"offset":4460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"export const sayHi = () => (console.log('Hi!'));\nexport const sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));\n"}],"position":{"start":{"line":132,"column":1,"offset":4462},"end":{"line":137,"column":4,"offset":4630}}}],"position":{"start":{"line":132,"column":1,"offset":4462},"end":{"line":137,"column":4,"offset":4630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":139,"column":1,"offset":4632},"end":{"line":139,"column":61,"offset":4692}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import"}],"position":{"start":{"line":139,"column":61,"offset":4692},"end":{"line":139,"column":69,"offset":4700}}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":139,"column":69,"offset":4700},"end":{"line":139,"column":226,"offset":4857}}}],"position":{"start":{"line":139,"column":1,"offset":4632},"end":{"line":139,"column":226,"offset":4857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();\n"}],"position":{"start":{"line":141,"column":1,"offset":4859},"end":{"line":146,"column":4,"offset":4935}}}],"position":{"start":{"line":141,"column":1,"offset":4859},"end":{"line":146,"column":4,"offset":4935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":148,"column":1,"offset":4937},"end":{"line":148,"column":36,"offset":4972}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":148,"column":37,"offset":4973},"end":{"line":148,"column":40,"offset":4976}}}],"position":{"start":{"line":148,"column":36,"offset":4972},"end":{"line":148,"column":41,"offset":4977}}},{"type":"text","value":" exported ","position":{"start":{"line":148,"column":41,"offset":4977},"end":{"line":148,"column":51,"offset":4987}}},{"type":"text","value":"(","position":{"start":{"line":148,"column":51,"offset":4987},"end":{"line":148,"column":53,"offset":4989}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"saySomething"}],"position":{"start":{"line":148,"column":53,"offset":4989},"end":{"line":148,"column":67,"offset":5003}}},{"type":"text","value":")","position":{"start":{"line":148,"column":67,"offset":5003},"end":{"line":148,"column":69,"offset":5005}}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":148,"column":69,"offset":5005},"end":{"line":148,"column":107,"offset":5043}}}],"position":{"start":{"line":148,"column":1,"offset":4937},"end":{"line":148,"column":107,"offset":5043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":150,"column":1,"offset":5045},"end":{"line":150,"column":28,"offset":5072}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"relative path","position":{"start":{"line":150,"column":30,"offset":5074},"end":{"line":150,"column":43,"offset":5087}}}],"position":{"start":{"line":150,"column":28,"offset":5072},"end":{"line":150,"column":45,"offset":5089}}},{"type":"text","value":" to ","position":{"start":{"line":150,"column":45,"offset":5089},"end":{"line":150,"column":49,"offset":5093}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"from"}],"position":{"start":{"line":150,"column":49,"offset":5093},"end":{"line":150,"column":55,"offset":5099}}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":150,"column":55,"offset":5099},"end":{"line":150,"column":133,"offset":5177}}}],"position":{"start":{"line":150,"column":1,"offset":5045},"end":{"line":150,"column":133,"offset":5177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":152,"column":1,"offset":5179},"end":{"line":152,"column":25,"offset":5203}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export"}],"position":{"start":{"line":152,"column":25,"offset":5203},"end":{"line":152,"column":33,"offset":5211}}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":152,"column":33,"offset":5211},"end":{"line":152,"column":151,"offset":5329}}}],"position":{"start":{"line":152,"column":1,"offset":5179},"end":{"line":152,"column":151,"offset":5329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const sayHi = () => (console.log('Hi!'));\nconst sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));\n\nexport { sayHi, sayBye };\n"}],"position":{"start":{"line":154,"column":1,"offset":5331},"end":{"line":161,"column":4,"offset":5512}}}],"position":{"start":{"line":154,"column":1,"offset":5331},"end":{"line":161,"column":4,"offset":5512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":163,"column":1,"offset":5514},"end":{"line":163,"column":116,"offset":5629}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"import * as <Namespace>"}],"position":{"start":{"line":163,"column":116,"offset":5629},"end":{"line":163,"column":141,"offset":5654}}},{"type":"text","value":" syntax:","position":{"start":{"line":163,"column":141,"offset":5654},"end":{"line":163,"column":149,"offset":5662}}}],"position":{"start":{"line":163,"column":1,"offset":5514},"end":{"line":163,"column":149,"offset":5662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();\n"}],"position":{"start":{"line":165,"column":1,"offset":5664},"end":{"line":173,"column":4,"offset":5785}}}],"position":{"start":{"line":165,"column":1,"offset":5664},"end":{"line":173,"column":4,"offset":5785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Default export","position":{"start":{"line":175,"column":3,"offset":5789},"end":{"line":175,"column":17,"offset":5803}}}],"position":{"start":{"line":175,"column":1,"offset":5787},"end":{"line":175,"column":19,"offset":5805}}}],"position":{"start":{"line":175,"column":1,"offset":5787},"end":{"line":175,"column":19,"offset":5805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":177,"column":1,"offset":5807},"end":{"line":177,"column":92,"offset":5898}}}],"position":{"start":{"line":177,"column":1,"offset":5807},"end":{"line":177,"column":92,"offset":5898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const sayHi = () => (console.log('Hi!'));\nconst sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;\n"}],"position":{"start":{"line":179,"column":1,"offset":5900},"end":{"line":188,"column":4,"offset":6119}}}],"position":{"start":{"line":179,"column":1,"offset":5900},"end":{"line":188,"column":4,"offset":6119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":190,"column":1,"offset":6121},"end":{"line":190,"column":148,"offset":6268}}}],"position":{"start":{"line":190,"column":1,"offset":6121},"end":{"line":190,"column":148,"offset":6268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();\n"}],"position":{"start":{"line":192,"column":1,"offset":6270},"end":{"line":197,"column":4,"offset":6358}}}],"position":{"start":{"line":192,"column":1,"offset":6270},"end":{"line":197,"column":4,"offset":6358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":199,"column":1,"offset":6360},"end":{"line":199,"column":107,"offset":6466}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-dom"}],"position":{"start":{"line":199,"column":107,"offset":6466},"end":{"line":199,"column":118,"offset":6477}}},{"type":"text","value":", you can import ","position":{"start":{"line":199,"column":118,"offset":6477},"end":{"line":199,"column":135,"offset":6494}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ReactDOM"}],"position":{"start":{"line":199,"column":135,"offset":6494},"end":{"line":199,"column":145,"offset":6504}}},{"type":"text","value":" ","position":{"start":{"line":199,"column":145,"offset":6504},"end":{"line":199,"column":146,"offset":6505}}},{"type":"text","value":"(","position":{"start":{"line":199,"column":146,"offset":6505},"end":{"line":199,"column":148,"offset":6507}}},{"type":"text","value":"a default export","position":{"start":{"line":199,"column":148,"offset":6507},"end":{"line":199,"column":164,"offset":6523}}},{"type":"text","value":")","position":{"start":{"line":199,"column":164,"offset":6523},"end":{"line":199,"column":166,"offset":6525}}},{"type":"text","value":" like this:","position":{"start":{"line":199,"column":166,"offset":6525},"end":{"line":199,"column":177,"offset":6536}}}],"position":{"start":{"line":199,"column":1,"offset":6360},"end":{"line":199,"column":177,"offset":6536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import ReactDOM from 'react-dom';\n\nReactDOM.render(\n\n);\n"}],"position":{"start":{"line":201,"column":1,"offset":6538},"end":{"line":207,"column":4,"offset":6605}}}],"position":{"start":{"line":201,"column":1,"offset":6538},"end":{"line":207,"column":4,"offset":6605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":209,"column":1,"offset":6607},"end":{"line":209,"column":37,"offset":6643}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()"}],"position":{"start":{"line":209,"column":37,"offset":6643},"end":{"line":209,"column":47,"offset":6653}}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":209,"column":47,"offset":6653},"end":{"line":209,"column":83,"offset":6689}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"render()"}],"position":{"start":{"line":209,"column":83,"offset":6689},"end":{"line":209,"column":93,"offset":6699}}},{"type":"text","value":" function like this:","position":{"start":{"line":209,"column":93,"offset":6699},"end":{"line":209,"column":113,"offset":6719}}}],"position":{"start":{"line":209,"column":1,"offset":6607},"end":{"line":209,"column":113,"offset":6719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import { render } from 'react-dom';\n\nrender(\n\n);\n"}],"position":{"start":{"line":211,"column":1,"offset":6721},"end":{"line":217,"column":4,"offset":6781}}}],"position":{"start":{"line":211,"column":1,"offset":6721},"end":{"line":217,"column":4,"offset":6781}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":219,"column":1,"offset":6783},"end":{"line":219,"column":60,"offset":6842}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"react-dom"}],"position":{"start":{"line":219,"column":60,"offset":6842},"end":{"line":219,"column":71,"offset":6853}}},{"type":"text","value":" looks something like this:","position":{"start":{"line":219,"column":71,"offset":6853},"end":{"line":219,"column":98,"offset":6880}}}],"position":{"start":{"line":219,"column":1,"offset":6783},"end":{"line":219,"column":98,"offset":6880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"export const render = (component, target) => {\n\n};\n\nconst ReactDOM = {\n  render,\n\n};\n\nexport default ReactDOM;\n"}],"position":{"start":{"line":221,"column":1,"offset":6882},"end":{"line":232,"column":4,"offset":7004}}}],"position":{"start":{"line":221,"column":1,"offset":6882},"end":{"line":232,"column":4,"offset":7004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":234,"column":1,"offset":7006},"end":{"line":234,"column":73,"offset":7078}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"code/webpack/es6-modules"}],"position":{"start":{"line":234,"column":73,"offset":7078},"end":{"line":234,"column":99,"offset":7104}}},{"type":"text","value":".","position":{"start":{"line":234,"column":99,"offset":7104},"end":{"line":234,"column":100,"offset":7105}}}],"position":{"start":{"line":234,"column":1,"offset":7006},"end":{"line":234,"column":100,"offset":7105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":236,"column":1,"offset":7107},"end":{"line":236,"column":66,"offset":7172}}},{"type":"element","tagName":"a","properties":{"href":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/"},"children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":236,"column":67,"offset":7173},"end":{"line":236,"column":88,"offset":7194}}}],"position":{"start":{"line":236,"column":66,"offset":7172},"end":{"line":236,"column":146,"offset":7252}}},{"type":"text","value":"\".","position":{"start":{"line":236,"column":146,"offset":7252},"end":{"line":236,"column":148,"offset":7254}}}],"position":{"start":{"line":236,"column":1,"offset":7107},"end":{"line":236,"column":148,"offset":7254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":238,"column":4,"offset":7259},"end":{"line":238,"column":21,"offset":7276}}}],"position":{"start":{"line":238,"column":1,"offset":7256},"end":{"line":238,"column":21,"offset":7276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use ","position":{"start":{"line":240,"column":1,"offset":7278},"end":{"line":240,"column":8,"offset":7285}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":240,"column":8,"offset":7285},"end":{"line":240,"column":25,"offset":7302}}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":240,"column":25,"offset":7302},"end":{"line":240,"column":137,"offset":7414}}}],"position":{"start":{"line":240,"column":1,"offset":7278},"end":{"line":240,"column":137,"offset":7414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":242,"column":1,"offset":7416},"end":{"line":242,"column":18,"offset":7433}}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":242,"column":18,"offset":7433},"end":{"line":242,"column":108,"offset":7523}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"copies","position":{"start":{"line":242,"column":109,"offset":7524},"end":{"line":242,"column":115,"offset":7530}}}],"position":{"start":{"line":242,"column":108,"offset":7523},"end":{"line":242,"column":116,"offset":7531}}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":242,"column":116,"offset":7531},"end":{"line":242,"column":177,"offset":7592}}}],"position":{"start":{"line":242,"column":1,"offset":7416},"end":{"line":242,"column":177,"offset":7592}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);\n"}],"position":{"start":{"line":244,"column":1,"offset":7594},"end":{"line":249,"column":4,"offset":7722}}}],"position":{"start":{"line":244,"column":1,"offset":7594},"end":{"line":249,"column":4,"offset":7722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":251,"column":1,"offset":7724},"end":{"line":251,"column":47,"offset":7770}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":251,"column":47,"offset":7770},"end":{"line":251,"column":64,"offset":7787}}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":251,"column":64,"offset":7787},"end":{"line":251,"column":126,"offset":7849}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":251,"column":126,"offset":7849},"end":{"line":251,"column":143,"offset":7866}}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":251,"column":143,"offset":7866},"end":{"line":251,"column":280,"offset":8003}}}],"position":{"start":{"line":251,"column":1,"offset":7724},"end":{"line":251,"column":280,"offset":8003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });\n"}],"position":{"start":{"line":253,"column":1,"offset":8005},"end":{"line":255,"column":4,"offset":8082}}}],"position":{"start":{"line":253,"column":1,"offset":8005},"end":{"line":255,"column":4,"offset":8082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.assign()"}],"position":{"start":{"line":257,"column":1,"offset":8084},"end":{"line":257,"column":18,"offset":8101}}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":257,"column":18,"offset":8101},"end":{"line":257,"column":85,"offset":8168}}}],"position":{"start":{"line":257,"column":1,"offset":8084},"end":{"line":257,"column":85,"offset":8168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Template literals","position":{"start":{"line":259,"column":4,"offset":8173},"end":{"line":259,"column":21,"offset":8190}}}],"position":{"start":{"line":259,"column":1,"offset":8170},"end":{"line":259,"column":21,"offset":8190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":261,"column":1,"offset":8192},"end":{"line":261,"column":71,"offset":8262}}}],"position":{"start":{"line":261,"column":1,"offset":8192},"end":{"line":261,"column":71,"offset":8262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';\n"}],"position":{"start":{"line":263,"column":1,"offset":8264},"end":{"line":265,"column":4,"offset":8350}}}],"position":{"start":{"line":263,"column":1,"offset":8264},"end":{"line":265,"column":4,"offset":8350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":267,"column":1,"offset":8352},"end":{"line":267,"column":69,"offset":8420}}}],"position":{"start":{"line":267,"column":1,"offset":8352},"end":{"line":267,"column":69,"offset":8420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;\n"}],"position":{"start":{"line":269,"column":1,"offset":8422},"end":{"line":271,"column":4,"offset":8500}}}],"position":{"start":{"line":269,"column":1,"offset":8422},"end":{"line":271,"column":4,"offset":8500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":273,"column":4,"offset":8505},"end":{"line":273,"column":24,"offset":8525}}},{"type":"text","value":"(","position":{"start":{"line":273,"column":24,"offset":8525},"end":{"line":273,"column":26,"offset":8527}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"..."}],"position":{"start":{"line":273,"column":26,"offset":8527},"end":{"line":273,"column":31,"offset":8532}}},{"type":"text","value":")","position":{"start":{"line":273,"column":31,"offset":8532},"end":{"line":273,"column":33,"offset":8534}}}],"position":{"start":{"line":273,"column":1,"offset":8502},"end":{"line":273,"column":33,"offset":8534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":275,"column":1,"offset":8536},"end":{"line":275,"column":25,"offset":8560}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"..."}],"position":{"start":{"line":275,"column":25,"offset":8560},"end":{"line":275,"column":30,"offset":8565}}},{"type":"text","value":" operator will ","position":{"start":{"line":275,"column":30,"offset":8565},"end":{"line":275,"column":45,"offset":8580}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"expand","position":{"start":{"line":275,"column":46,"offset":8581},"end":{"line":275,"column":52,"offset":8587}}}],"position":{"start":{"line":275,"column":45,"offset":8580},"end":{"line":275,"column":53,"offset":8588}}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":275,"column":53,"offset":8588},"end":{"line":275,"column":200,"offset":8735}}}],"position":{"start":{"line":275,"column":1,"offset":8536},"end":{"line":275,"column":200,"offset":8735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":277,"column":1,"offset":8737},"end":{"line":277,"column":20,"offset":8756}}}],"position":{"start":{"line":277,"column":1,"offset":8737},"end":{"line":277,"column":20,"offset":8756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);\n"}],"position":{"start":{"line":279,"column":1,"offset":8758},"end":{"line":285,"column":4,"offset":8866}}}],"position":{"start":{"line":279,"column":1,"offset":8758},"end":{"line":285,"column":4,"offset":8866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":287,"column":1,"offset":8868},"end":{"line":287,"column":47,"offset":8914}}}],"position":{"start":{"line":287,"column":1,"offset":8868},"end":{"line":287,"column":47,"offset":8914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const d = [ a, b, 7, 8, 9 ];\nconsole.log(d);\n"}],"position":{"start":{"line":289,"column":1,"offset":8916},"end":{"line":292,"column":4,"offset":8972}}}],"position":{"start":{"line":289,"column":1,"offset":8916},"end":{"line":292,"column":4,"offset":8972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":294,"column":4,"offset":8977},"end":{"line":294,"column":28,"offset":9001}}}],"position":{"start":{"line":294,"column":1,"offset":8974},"end":{"line":294,"column":28,"offset":9001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":296,"column":1,"offset":9003},"end":{"line":296,"column":79,"offset":9081}}}],"position":{"start":{"line":296,"column":1,"offset":9003},"end":{"line":296,"column":79,"offset":9081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const explicit = {\n  getState: getState,\n  dispatch: dispatch,\n};\n"}],"position":{"start":{"line":298,"column":1,"offset":9083},"end":{"line":303,"column":4,"offset":9160}}}],"position":{"start":{"line":298,"column":1,"offset":9083},"end":{"line":303,"column":4,"offset":9160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":305,"column":1,"offset":9162},"end":{"line":305,"column":98,"offset":9259}}}],"position":{"start":{"line":305,"column":1,"offset":9162},"end":{"line":305,"column":98,"offset":9259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const implicit = {\n  getState,\n  dispatch,\n};\n"}],"position":{"start":{"line":307,"column":1,"offset":9261},"end":{"line":312,"column":4,"offset":9318}}}],"position":{"start":{"line":307,"column":1,"offset":9261},"end":{"line":312,"column":4,"offset":9318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":314,"column":1,"offset":9320},"end":{"line":314,"column":161,"offset":9480}}}],"position":{"start":{"line":314,"column":1,"offset":9320},"end":{"line":314,"column":161,"offset":9480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":316,"column":4,"offset":9485},"end":{"line":316,"column":21,"offset":9502}}}],"position":{"start":{"line":316,"column":1,"offset":9482},"end":{"line":316,"column":21,"offset":9502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":318,"column":1,"offset":9504},"end":{"line":318,"column":82,"offset":9585}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":318,"column":82,"offset":9585},"end":{"line":318,"column":93,"offset":9596}}},{"type":"text","value":" when the function is called.","position":{"start":{"line":318,"column":93,"offset":9596},"end":{"line":318,"column":122,"offset":9625}}}],"position":{"start":{"line":318,"column":1,"offset":9504},"end":{"line":318,"column":122,"offset":9625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This:","position":{"start":{"line":320,"column":1,"offset":9627},"end":{"line":320,"column":6,"offset":9632}}}],"position":{"start":{"line":320,"column":1,"offset":9627},"end":{"line":320,"column":6,"offset":9632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}\n"}],"position":{"start":{"line":322,"column":1,"offset":9634},"end":{"line":329,"column":4,"offset":9746}}}],"position":{"start":{"line":322,"column":1,"offset":9634},"end":{"line":329,"column":4,"offset":9746}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":331,"column":1,"offset":9748},"end":{"line":331,"column":24,"offset":9771}}}],"position":{"start":{"line":331,"column":1,"offset":9748},"end":{"line":331,"column":24,"offset":9771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"function divide(a, b = 1) {\n  return a / b;\n}\n"}],"position":{"start":{"line":333,"column":1,"offset":9773},"end":{"line":337,"column":4,"offset":9830}}}],"position":{"start":{"line":333,"column":1,"offset":9773},"end":{"line":337,"column":4,"offset":9830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":339,"column":1,"offset":9832},"end":{"line":339,"column":51,"offset":9882}}}],"position":{"start":{"line":339,"column":1,"offset":9832},"end":{"line":339,"column":51,"offset":9882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);\n"}],"position":{"start":{"line":341,"column":1,"offset":9884},"end":{"line":347,"column":4,"offset":9947}}}],"position":{"start":{"line":341,"column":1,"offset":9884},"end":{"line":347,"column":4,"offset":9947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":349,"column":1,"offset":9949},"end":{"line":349,"column":23,"offset":9971}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b"}],"position":{"start":{"line":349,"column":23,"offset":9971},"end":{"line":349,"column":26,"offset":9974}}},{"type":"text","value":" in the example above is ","position":{"start":{"line":349,"column":26,"offset":9974},"end":{"line":349,"column":51,"offset":9999}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":349,"column":51,"offset":9999},"end":{"line":349,"column":62,"offset":10010}}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":349,"column":62,"offset":10010},"end":{"line":349,"column":104,"offset":10052}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":349,"column":104,"offset":10052},"end":{"line":349,"column":110,"offset":10058}}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":349,"column":110,"offset":10058},"end":{"line":349,"column":145,"offset":10093}}}],"position":{"start":{"line":349,"column":1,"offset":9949},"end":{"line":349,"column":145,"offset":10093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"divide(14, null);\n"}],"position":{"start":{"line":351,"column":1,"offset":10095},"end":{"line":353,"column":4,"offset":10124}}}],"position":{"start":{"line":351,"column":1,"offset":10095},"end":{"line":353,"column":4,"offset":10124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":355,"column":4,"offset":10129},"end":{"line":355,"column":29,"offset":10154}}}],"position":{"start":{"line":355,"column":1,"offset":10126},"end":{"line":355,"column":29,"offset":10154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"For arrays","position":{"start":{"line":357,"column":5,"offset":10160},"end":{"line":357,"column":15,"offset":10170}}}],"position":{"start":{"line":357,"column":1,"offset":10156},"end":{"line":357,"column":15,"offset":10170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":359,"column":1,"offset":10172},"end":{"line":359,"column":83,"offset":10254}}}],"position":{"start":{"line":359,"column":1,"offset":10172},"end":{"line":359,"column":83,"offset":10254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];\n"}],"position":{"start":{"line":361,"column":1,"offset":10256},"end":{"line":365,"column":4,"offset":10363}}}],"position":{"start":{"line":361,"column":1,"offset":10256},"end":{"line":365,"column":4,"offset":10363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":367,"column":1,"offset":10365},"end":{"line":367,"column":83,"offset":10447}}}],"position":{"start":{"line":367,"column":1,"offset":10365},"end":{"line":367,"column":83,"offset":10447}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const [ veg1, veg2 ] = [ 'asparagus', 'broccoli', 'onion' ];\nconsole.log(veg1);\nconsole.log(veg2);\n"}],"position":{"start":{"line":369,"column":1,"offset":10449},"end":{"line":373,"column":4,"offset":10559}}}],"position":{"start":{"line":369,"column":1,"offset":10449},"end":{"line":373,"column":4,"offset":10559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":375,"column":1,"offset":10561},"end":{"line":375,"column":134,"offset":10694}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'onion'"}],"position":{"start":{"line":375,"column":134,"offset":10694},"end":{"line":375,"column":143,"offset":10703}}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":375,"column":143,"offset":10703},"end":{"line":375,"column":187,"offset":10747}}}],"position":{"start":{"line":375,"column":1,"offset":10561},"end":{"line":375,"column":187,"offset":10747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"For objects","position":{"start":{"line":377,"column":5,"offset":10753},"end":{"line":377,"column":16,"offset":10764}}}],"position":{"start":{"line":377,"column":1,"offset":10749},"end":{"line":377,"column":16,"offset":10764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":379,"column":1,"offset":10766},"end":{"line":379,"column":77,"offset":10842}}}],"position":{"start":{"line":379,"column":1,"offset":10766},"end":{"line":379,"column":77,"offset":10842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const smoothie = {\n  fats: [ 'avocado', 'peanut butter', 'greek yogurt' ],\n  liquids: [ 'almond milk' ],\n  greens: [ 'spinach' ],\n  fruits: [ 'blueberry', 'banana' ],\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);\n"}],"position":{"start":{"line":381,"column":1,"offset":10844},"end":{"line":393,"column":4,"offset":11108}}}],"position":{"start":{"line":381,"column":1,"offset":10844},"end":{"line":393,"column":4,"offset":11108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":395,"column":5,"offset":11114},"end":{"line":395,"column":31,"offset":11140}}}],"position":{"start":{"line":395,"column":1,"offset":11110},"end":{"line":395,"column":31,"offset":11140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":397,"column":1,"offset":11142},"end":{"line":397,"column":121,"offset":11262}}}],"position":{"start":{"line":397,"column":1,"offset":11142},"end":{"line":397,"column":121,"offset":11262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const containsSpinach = ({ greens }) => {\n  if (greens.find(g => g === 'spinach')) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\ncontainsSpinach(smoothie);\n"}],"position":{"start":{"line":399,"column":1,"offset":11264},"end":{"line":409,"column":4,"offset":11441}}}],"position":{"start":{"line":399,"column":1,"offset":11264},"end":{"line":409,"column":4,"offset":11441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":411,"column":1,"offset":11443},"end":{"line":411,"column":51,"offset":11493}}}],"position":{"start":{"line":411,"column":1,"offset":11443},"end":{"line":411,"column":51,"offset":11493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const IngredientList = ({ ingredients, onClick }) => (\n  <ul className='IngredientList'>\n    {\n      ingredients.map(i => (\n        <li\n          key={i.id}\n          onClick={() => onClick(i.id)}\n          className='item'\n        >\n          {i.name}\n        </li>\n      ))\n    }\n  </ul>\n)\n"}],"position":{"start":{"line":413,"column":1,"offset":11495},"end":{"line":429,"column":4,"offset":11798}}}],"position":{"start":{"line":413,"column":1,"offset":11495},"end":{"line":429,"column":4,"offset":11798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":431,"column":1,"offset":11800},"end":{"line":431,"column":64,"offset":11863}}},{"type":"text","value":"(","position":{"start":{"line":431,"column":64,"offset":11863},"end":{"line":431,"column":66,"offset":11865}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ingredients"}],"position":{"start":{"line":431,"column":66,"offset":11865},"end":{"line":431,"column":79,"offset":11878}}},{"type":"text","value":" and ","position":{"start":{"line":431,"column":79,"offset":11878},"end":{"line":431,"column":84,"offset":11883}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"onClick"}],"position":{"start":{"line":431,"column":84,"offset":11883},"end":{"line":431,"column":93,"offset":11892}}},{"type":"text","value":")","position":{"start":{"line":431,"column":93,"offset":11892},"end":{"line":431,"column":95,"offset":11894}}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":431,"column":95,"offset":11894},"end":{"line":431,"column":150,"offset":11949}}}],"position":{"start":{"line":431,"column":1,"offset":11800},"end":{"line":431,"column":150,"offset":11949}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":432,"column":1,"offset":11950}}}}