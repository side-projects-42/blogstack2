{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-6fa6c2d5be2ee523366fe35e8adcaf56--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"> ## Excerpt","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":16,"offset":17},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":16,"offset":17},"indent":[]}},{"type":"blockquote","children":[],"position":{"start":{"line":5,"column":1,"offset":19},"end":{"line":5,"column":2,"offset":20},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":7,"column":1,"offset":22},"end":{"line":7,"column":4,"offset":25},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Lists and Keys - React","position":{"start":{"line":9,"column":3,"offset":29},"end":{"line":9,"column":25,"offset":51},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":27},"end":{"line":9,"column":25,"offset":51},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":11,"column":6,"offset":58},"end":{"line":11,"column":13,"offset":65},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":55},"end":{"line":11,"column":13,"offset":65},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A JavaScript library for building user interfaces","position":{"start":{"line":13,"column":3,"offset":70},"end":{"line":13,"column":52,"offset":119},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":70},"end":{"line":13,"column":52,"offset":119},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":53},"end":{"line":13,"column":52,"offset":119},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":15,"column":1,"offset":121},"end":{"line":15,"column":4,"offset":124},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, let's review how you transform lists in JavaScript.","position":{"start":{"line":17,"column":1,"offset":126},"end":{"line":17,"column":59,"offset":184},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":126},"end":{"line":17,"column":59,"offset":184},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the code below, we use the ","position":{"start":{"line":19,"column":1,"offset":186},"end":{"line":19,"column":34,"offset":219},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":19,"column":35,"offset":220},"end":{"line":19,"column":42,"offset":227},"indent":[]}}],"position":{"start":{"line":19,"column":34,"offset":219},"end":{"line":19,"column":135,"offset":320},"indent":[]}},{"type":"text","value":" function to take an array of ","position":{"start":{"line":19,"column":135,"offset":320},"end":{"line":19,"column":165,"offset":350},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":19,"column":165,"offset":350},"end":{"line":19,"column":174,"offset":359},"indent":[]}},{"type":"text","value":" and double their values. We assign the new array returned by ","position":{"start":{"line":19,"column":174,"offset":359},"end":{"line":19,"column":236,"offset":421},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":19,"column":236,"offset":421},"end":{"line":19,"column":243,"offset":428},"indent":[]}},{"type":"text","value":" to the variable ","position":{"start":{"line":19,"column":243,"offset":428},"end":{"line":19,"column":260,"offset":445},"indent":[]}},{"type":"inlineCode","value":"doubled","position":{"start":{"line":19,"column":260,"offset":445},"end":{"line":19,"column":269,"offset":454},"indent":[]}},{"type":"text","value":" and log it:","position":{"start":{"line":19,"column":269,"offset":454},"end":{"line":19,"column":281,"offset":466},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":186},"end":{"line":19,"column":281,"offset":466},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map((number) => number * 2);console.log(doubled);","position":{"start":{"line":21,"column":1,"offset":468},"end":{"line":24,"column":4,"offset":582},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This code logs ","position":{"start":{"line":26,"column":1,"offset":584},"end":{"line":26,"column":16,"offset":599},"indent":[]}},{"type":"inlineCode","value":"[2, 4, 6, 8, 10]","position":{"start":{"line":26,"column":16,"offset":599},"end":{"line":26,"column":34,"offset":617},"indent":[]}},{"type":"text","value":" to the console.","position":{"start":{"line":26,"column":34,"offset":617},"end":{"line":26,"column":50,"offset":633},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":584},"end":{"line":26,"column":50,"offset":633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In React, transforming arrays into lists of ","position":{"start":{"line":28,"column":1,"offset":635},"end":{"line":28,"column":45,"offset":679},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/rendering-elements.html","children":[{"type":"text","value":"elements","position":{"start":{"line":28,"column":46,"offset":680},"end":{"line":28,"column":54,"offset":688},"indent":[]}}],"position":{"start":{"line":28,"column":45,"offset":679},"end":{"line":28,"column":105,"offset":739},"indent":[]}},{"type":"text","value":" is nearly identical.","position":{"start":{"line":28,"column":105,"offset":739},"end":{"line":28,"column":126,"offset":760},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":635},"end":{"line":28,"column":126,"offset":760},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#rendering-multiple-components","children":[],"position":{"start":{"line":30,"column":5,"offset":766},"end":{"line":30,"column":83,"offset":844},"indent":[]}},{"type":"text","value":"Rendering Multiple Components","position":{"start":{"line":30,"column":83,"offset":844},"end":{"line":30,"column":112,"offset":873},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":762},"end":{"line":30,"column":112,"offset":873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can build collections of elements and ","position":{"start":{"line":32,"column":1,"offset":875},"end":{"line":32,"column":43,"offset":917},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/introducing-jsx.html#embedding-expressions-in-jsx","children":[{"type":"text","value":"include them in JSX","position":{"start":{"line":32,"column":44,"offset":918},"end":{"line":32,"column":63,"offset":937},"indent":[]}}],"position":{"start":{"line":32,"column":43,"offset":917},"end":{"line":32,"column":140,"offset":1014},"indent":[]}},{"type":"text","value":" using curly braces ","position":{"start":{"line":32,"column":140,"offset":1014},"end":{"line":32,"column":160,"offset":1034},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":32,"column":160,"offset":1034},"end":{"line":32,"column":164,"offset":1038},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":32,"column":164,"offset":1038},"end":{"line":32,"column":165,"offset":1039},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":875},"end":{"line":32,"column":165,"offset":1039},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below, we loop through the ","position":{"start":{"line":34,"column":1,"offset":1041},"end":{"line":34,"column":28,"offset":1068},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":34,"column":28,"offset":1068},"end":{"line":34,"column":37,"offset":1077},"indent":[]}},{"type":"text","value":" array using the JavaScript ","position":{"start":{"line":34,"column":37,"offset":1077},"end":{"line":34,"column":65,"offset":1105},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":34,"column":66,"offset":1106},"end":{"line":34,"column":73,"offset":1113},"indent":[]}}],"position":{"start":{"line":34,"column":65,"offset":1105},"end":{"line":34,"column":166,"offset":1206},"indent":[]}},{"type":"text","value":" function. We return a ","position":{"start":{"line":34,"column":166,"offset":1206},"end":{"line":34,"column":189,"offset":1229},"indent":[]}},{"type":"inlineCode","value":"<li>","position":{"start":{"line":34,"column":189,"offset":1229},"end":{"line":34,"column":195,"offset":1235},"indent":[]}},{"type":"text","value":" element for each item. Finally, we assign the resulting array of elements to ","position":{"start":{"line":34,"column":195,"offset":1235},"end":{"line":34,"column":273,"offset":1313},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":34,"column":273,"offset":1313},"end":{"line":34,"column":284,"offset":1324},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":34,"column":284,"offset":1324},"end":{"line":34,"column":285,"offset":1325},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1041},"end":{"line":34,"column":285,"offset":1325},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>  <li>{number}</li>);","position":{"start":{"line":36,"column":1,"offset":1327},"end":{"line":39,"column":4,"offset":1430},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We include the entire ","position":{"start":{"line":41,"column":1,"offset":1432},"end":{"line":41,"column":23,"offset":1454},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":41,"column":23,"offset":1454},"end":{"line":41,"column":34,"offset":1465},"indent":[]}},{"type":"text","value":" array inside a ","position":{"start":{"line":41,"column":34,"offset":1465},"end":{"line":41,"column":50,"offset":1481},"indent":[]}},{"type":"inlineCode","value":"<ul>","position":{"start":{"line":41,"column":50,"offset":1481},"end":{"line":41,"column":56,"offset":1487},"indent":[]}},{"type":"text","value":" element, and ","position":{"start":{"line":41,"column":56,"offset":1487},"end":{"line":41,"column":70,"offset":1501},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/rendering-elements.html#rendering-an-element-into-the-dom","children":[{"type":"text","value":"render it to the DOM","position":{"start":{"line":41,"column":71,"offset":1502},"end":{"line":41,"column":91,"offset":1522},"indent":[]}}],"position":{"start":{"line":41,"column":70,"offset":1501},"end":{"line":41,"column":176,"offset":1607},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":41,"column":176,"offset":1607},"end":{"line":41,"column":177,"offset":1608},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1432},"end":{"line":41,"column":177,"offset":1608},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ReactDOM.render(\n  <ul>{listItems}</ul>,  document.getElementById('root')\n);","position":{"start":{"line":43,"column":1,"offset":1610},"end":{"line":47,"column":4,"offset":1694},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/GjPyQr?editors=0011","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":49,"column":4,"offset":1699},"end":{"line":49,"column":21,"offset":1716},"indent":[]}}],"position":{"start":{"line":49,"column":2,"offset":1697},"end":{"line":49,"column":23,"offset":1718},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1696},"end":{"line":49,"column":76,"offset":1771},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1696},"end":{"line":49,"column":76,"offset":1771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This code displays a bullet list of numbers between 1 and 5.","position":{"start":{"line":51,"column":1,"offset":1773},"end":{"line":51,"column":61,"offset":1833},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1773},"end":{"line":51,"column":61,"offset":1833},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#basic-list-component","children":[],"position":{"start":{"line":53,"column":5,"offset":1839},"end":{"line":53,"column":74,"offset":1908},"indent":[]}},{"type":"text","value":"Basic List Component","position":{"start":{"line":53,"column":74,"offset":1908},"end":{"line":53,"column":94,"offset":1928},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1835},"end":{"line":53,"column":94,"offset":1928},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Usually you would render lists inside a ","position":{"start":{"line":55,"column":1,"offset":1930},"end":{"line":55,"column":41,"offset":1970},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html","children":[{"type":"text","value":"component","position":{"start":{"line":55,"column":42,"offset":1971},"end":{"line":55,"column":51,"offset":1980},"indent":[]}}],"position":{"start":{"line":55,"column":41,"offset":1970},"end":{"line":55,"column":104,"offset":2033},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":55,"column":104,"offset":2033},"end":{"line":55,"column":105,"offset":2034},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1930},"end":{"line":55,"column":105,"offset":2034},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can refactor the previous example into a component that accepts an array of ","position":{"start":{"line":57,"column":1,"offset":2036},"end":{"line":57,"column":80,"offset":2115},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":57,"column":80,"offset":2115},"end":{"line":57,"column":89,"offset":2124},"indent":[]}},{"type":"text","value":" and outputs a list of elements.","position":{"start":{"line":57,"column":89,"offset":2124},"end":{"line":57,"column":121,"offset":2156},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2036},"end":{"line":57,"column":121,"offset":2156},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>    <li>{number}</li>  );  return (\n    <ul>{listItems}</ul>  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,  document.getElementById('root')\n);","position":{"start":{"line":59,"column":1,"offset":2158},"end":{"line":70,"column":4,"offset":2460},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you run this code, you'll be given a warning that a key should be provided for list items. A \"key\" is a special string attribute you need to include when creating lists of elements. We'll discuss why it's important in the next section.","position":{"start":{"line":72,"column":1,"offset":2462},"end":{"line":72,"column":241,"offset":2702},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2462},"end":{"line":72,"column":241,"offset":2702},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's assign a ","position":{"start":{"line":74,"column":1,"offset":2704},"end":{"line":74,"column":16,"offset":2719},"indent":[]}},{"type":"inlineCode","value":"key","position":{"start":{"line":74,"column":16,"offset":2719},"end":{"line":74,"column":21,"offset":2724},"indent":[]}},{"type":"text","value":" to our list items inside ","position":{"start":{"line":74,"column":21,"offset":2724},"end":{"line":74,"column":47,"offset":2750},"indent":[]}},{"type":"inlineCode","value":"numbers.map()","position":{"start":{"line":74,"column":47,"offset":2750},"end":{"line":74,"column":62,"offset":2765},"indent":[]}},{"type":"text","value":" and fix the missing key issue.","position":{"start":{"line":74,"column":62,"offset":2765},"end":{"line":74,"column":93,"offset":2796},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2704},"end":{"line":74,"column":93,"offset":2796},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li key={number.toString()}>      {number}\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":76,"column":1,"offset":2798},"end":{"line":93,"column":4,"offset":3140},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/jrXYRR?editors=0011","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":95,"column":4,"offset":3145},"end":{"line":95,"column":21,"offset":3162},"indent":[]}}],"position":{"start":{"line":95,"column":2,"offset":3143},"end":{"line":95,"column":23,"offset":3164},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3142},"end":{"line":95,"column":76,"offset":3217},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":3142},"end":{"line":95,"column":76,"offset":3217},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#keys","children":[],"position":{"start":{"line":97,"column":4,"offset":3222},"end":{"line":97,"column":57,"offset":3275},"indent":[]}},{"type":"text","value":"Keys","position":{"start":{"line":97,"column":57,"offset":3275},"end":{"line":97,"column":61,"offset":3279},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3219},"end":{"line":97,"column":61,"offset":3279},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity:","position":{"start":{"line":99,"column":1,"offset":3281},"end":{"line":99,"column":172,"offset":3452},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3281},"end":{"line":99,"column":172,"offset":3452},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li key={number.toString()}>    {number}\n  </li>\n);","position":{"start":{"line":101,"column":1,"offset":3454},"end":{"line":107,"column":4,"offset":3590},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The best way to pick a key is to use a string that uniquely identifies a list item among its siblings. Most often you would use IDs from your data as keys:","position":{"start":{"line":109,"column":1,"offset":3592},"end":{"line":109,"column":156,"offset":3747},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3592},"end":{"line":109,"column":156,"offset":3747},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const todoItems = todos.map((todo) =>\n  <li key={todo.id}>    {todo.text}\n  </li>\n);","position":{"start":{"line":111,"column":1,"offset":3749},"end":{"line":116,"column":4,"offset":3841},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you don't have stable IDs for rendered items, you may use the item index as a key as a last resort:","position":{"start":{"line":118,"column":1,"offset":3843},"end":{"line":118,"column":105,"offset":3947},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3843},"end":{"line":118,"column":105,"offset":3947},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const todoItems = todos.map((todo, index) =>\n    <li key={index}>    {todo.text}\n  </li>\n);","position":{"start":{"line":120,"column":1,"offset":3949},"end":{"line":125,"column":4,"offset":4048},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We don't recommend using indexes for keys if the order of items may change. This can negatively impact performance and may cause issues with component state. Check out Robin Pokorny's article for an ","position":{"start":{"line":127,"column":1,"offset":4050},"end":{"line":127,"column":200,"offset":4249},"indent":[]}},{"type":"link","title":null,"url":"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318","children":[{"type":"text","value":"in-depth explanation on the negative impacts of using an index as a key","position":{"start":{"line":127,"column":201,"offset":4250},"end":{"line":127,"column":272,"offset":4321},"indent":[]}}],"position":{"start":{"line":127,"column":200,"offset":4249},"end":{"line":127,"column":354,"offset":4403},"indent":[]}},{"type":"text","value":". If you choose not to assign an explicit key to list items then React will default to using indexes as keys.","position":{"start":{"line":127,"column":354,"offset":4403},"end":{"line":127,"column":463,"offset":4512},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4050},"end":{"line":127,"column":463,"offset":4512},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an ","position":{"start":{"line":129,"column":1,"offset":4514},"end":{"line":129,"column":12,"offset":4525},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/reconciliation.html#recursing-on-children","children":[{"type":"text","value":"in-depth explanation about why keys are necessary","position":{"start":{"line":129,"column":13,"offset":4526},"end":{"line":129,"column":62,"offset":4575},"indent":[]}}],"position":{"start":{"line":129,"column":12,"offset":4525},"end":{"line":129,"column":131,"offset":4644},"indent":[]}},{"type":"text","value":" if you're interested in learning more.","position":{"start":{"line":129,"column":131,"offset":4644},"end":{"line":129,"column":170,"offset":4683},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4514},"end":{"line":129,"column":170,"offset":4683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys only make sense in the context of the surrounding array.","position":{"start":{"line":131,"column":1,"offset":4685},"end":{"line":131,"column":62,"offset":4746},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":4685},"end":{"line":131,"column":62,"offset":4746},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, if you ","position":{"start":{"line":133,"column":1,"offset":4748},"end":{"line":133,"column":21,"offset":4768},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html#extracting-components","children":[{"type":"text","value":"extract","position":{"start":{"line":133,"column":22,"offset":4769},"end":{"line":133,"column":29,"offset":4776},"indent":[]}}],"position":{"start":{"line":133,"column":21,"offset":4768},"end":{"line":133,"column":104,"offset":4851},"indent":[]}},{"type":"text","value":" a ","position":{"start":{"line":133,"column":104,"offset":4851},"end":{"line":133,"column":107,"offset":4854},"indent":[]}},{"type":"inlineCode","value":"ListItem","position":{"start":{"line":133,"column":107,"offset":4854},"end":{"line":133,"column":117,"offset":4864},"indent":[]}},{"type":"text","value":" component, you should keep the key on the ","position":{"start":{"line":133,"column":117,"offset":4864},"end":{"line":133,"column":160,"offset":4907},"indent":[]}},{"type":"inlineCode","value":"<ListItem />","position":{"start":{"line":133,"column":160,"offset":4907},"end":{"line":133,"column":174,"offset":4921},"indent":[]}},{"type":"text","value":" elements in the array rather than on the ","position":{"start":{"line":133,"column":174,"offset":4921},"end":{"line":133,"column":216,"offset":4963},"indent":[]}},{"type":"inlineCode","value":"<li>","position":{"start":{"line":133,"column":216,"offset":4963},"end":{"line":133,"column":222,"offset":4969},"indent":[]}},{"type":"text","value":" element in the ","position":{"start":{"line":133,"column":222,"offset":4969},"end":{"line":133,"column":238,"offset":4985},"indent":[]}},{"type":"inlineCode","value":"ListItem","position":{"start":{"line":133,"column":238,"offset":4985},"end":{"line":133,"column":248,"offset":4995},"indent":[]}},{"type":"text","value":" itself.","position":{"start":{"line":133,"column":248,"offset":4995},"end":{"line":133,"column":256,"offset":5003},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4748},"end":{"line":133,"column":256,"offset":5003},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example: Incorrect Key Usage","position":{"start":{"line":135,"column":3,"offset":5007},"end":{"line":135,"column":31,"offset":5035},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":5005},"end":{"line":135,"column":33,"offset":5037},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":5005},"end":{"line":135,"column":33,"offset":5037},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function ListItem(props) {\n  const value = props.value;\n  return (\n        <li key={value.toString()}>      {value}\n    </li>\n  );\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n        <ListItem value={number} />  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":137,"column":1,"offset":5039},"end":{"line":162,"column":4,"offset":5505},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example: Correct Key Usage","position":{"start":{"line":164,"column":3,"offset":5509},"end":{"line":164,"column":29,"offset":5535},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5507},"end":{"line":164,"column":31,"offset":5537},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5507},"end":{"line":164,"column":31,"offset":5537},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function ListItem(props) {\n    return <li>{props.value}</li>;}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n        <ListItem key={number.toString()} value={number} />  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":166,"column":1,"offset":5539},"end":{"line":186,"column":4,"offset":5959},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/ZXeOGM?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":188,"column":4,"offset":5964},"end":{"line":188,"column":21,"offset":5981},"indent":[]}}],"position":{"start":{"line":188,"column":2,"offset":5962},"end":{"line":188,"column":23,"offset":5983},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5961},"end":{"line":188,"column":76,"offset":6036},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":5961},"end":{"line":188,"column":76,"offset":6036},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A good rule of thumb is that elements inside the ","position":{"start":{"line":190,"column":1,"offset":6038},"end":{"line":190,"column":50,"offset":6087},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":190,"column":50,"offset":6087},"end":{"line":190,"column":57,"offset":6094},"indent":[]}},{"type":"text","value":" call need keys.","position":{"start":{"line":190,"column":57,"offset":6094},"end":{"line":190,"column":73,"offset":6110},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6038},"end":{"line":190,"column":73,"offset":6110},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#keys-must-only-be-unique-among-siblings","children":[],"position":{"start":{"line":192,"column":5,"offset":6116},"end":{"line":192,"column":93,"offset":6204},"indent":[]}},{"type":"text","value":"Keys Must Only Be Unique Among Siblings","position":{"start":{"line":192,"column":93,"offset":6204},"end":{"line":192,"column":132,"offset":6243},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":6112},"end":{"line":192,"column":132,"offset":6243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys used within arrays should be unique among their siblings. However, they don't need to be globally unique. We can use the same keys when we produce two different arrays:","position":{"start":{"line":194,"column":1,"offset":6245},"end":{"line":194,"column":174,"offset":6418},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6245},"end":{"line":194,"column":174,"offset":6418},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function Blog(props) {\n  const sidebar = (    <ul>\n      {props.posts.map((post) =>\n        <li key={post.id}>          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n  const content = props.posts.map((post) =>    <div key={post.id}>      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n    </div>\n  );\n  return (\n    <div>\n      {sidebar}      <hr />\n      {content}    </div>\n  );\n}\n\nconst posts = [\n  {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n  {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n];\nReactDOM.render(\n  <Blog posts={posts} />,\n  document.getElementById('root')\n);","position":{"start":{"line":196,"column":1,"offset":6420},"end":{"line":224,"column":4,"offset":7067},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/NRZYGN?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":226,"column":4,"offset":7072},"end":{"line":226,"column":21,"offset":7089},"indent":[]}}],"position":{"start":{"line":226,"column":2,"offset":7070},"end":{"line":226,"column":23,"offset":7091},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7069},"end":{"line":226,"column":76,"offset":7144},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":7069},"end":{"line":226,"column":76,"offset":7144},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys serve as a hint to React but they don't get passed to your components. If you need the same value in your component, pass it explicitly as a prop with a different name:","position":{"start":{"line":228,"column":1,"offset":7146},"end":{"line":228,"column":174,"offset":7319},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":7146},"end":{"line":228,"column":174,"offset":7319},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const content = posts.map((post) =>\n  <Post\n    key={post.id}    id={post.id}    title={post.title} />\n);","position":{"start":{"line":230,"column":1,"offset":7321},"end":{"line":235,"column":4,"offset":7434},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With the example above, the ","position":{"start":{"line":237,"column":1,"offset":7436},"end":{"line":237,"column":29,"offset":7464},"indent":[]}},{"type":"inlineCode","value":"Post","position":{"start":{"line":237,"column":29,"offset":7464},"end":{"line":237,"column":35,"offset":7470},"indent":[]}},{"type":"text","value":" component can read ","position":{"start":{"line":237,"column":35,"offset":7470},"end":{"line":237,"column":55,"offset":7490},"indent":[]}},{"type":"inlineCode","value":"props.id","position":{"start":{"line":237,"column":55,"offset":7490},"end":{"line":237,"column":65,"offset":7500},"indent":[]}},{"type":"text","value":", but not ","position":{"start":{"line":237,"column":65,"offset":7500},"end":{"line":237,"column":75,"offset":7510},"indent":[]}},{"type":"inlineCode","value":"props.key","position":{"start":{"line":237,"column":75,"offset":7510},"end":{"line":237,"column":86,"offset":7521},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":237,"column":86,"offset":7521},"end":{"line":237,"column":87,"offset":7522},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":7436},"end":{"line":237,"column":87,"offset":7522},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#embedding-map-in-jsx","children":[],"position":{"start":{"line":239,"column":5,"offset":7528},"end":{"line":239,"column":74,"offset":7597},"indent":[]}},{"type":"text","value":"Embedding map() in JSX","position":{"start":{"line":239,"column":74,"offset":7597},"end":{"line":239,"column":96,"offset":7619},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":7524},"end":{"line":239,"column":96,"offset":7619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the examples above we declared a separate ","position":{"start":{"line":241,"column":1,"offset":7621},"end":{"line":241,"column":46,"offset":7666},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":241,"column":46,"offset":7666},"end":{"line":241,"column":57,"offset":7677},"indent":[]}},{"type":"text","value":" variable and included it in JSX:","position":{"start":{"line":241,"column":57,"offset":7677},"end":{"line":241,"column":90,"offset":7710},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":7621},"end":{"line":241,"column":90,"offset":7710},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>    <ListItem key={number.toString()}              value={number} />  );  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}","position":{"start":{"line":243,"column":1,"offset":7712},"end":{"line":252,"column":4,"offset":7951},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"JSX allows ","position":{"start":{"line":254,"column":1,"offset":7953},"end":{"line":254,"column":12,"offset":7964},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/introducing-jsx.html#embedding-expressions-in-jsx","children":[{"type":"text","value":"embedding any expression","position":{"start":{"line":254,"column":13,"offset":7965},"end":{"line":254,"column":37,"offset":7989},"indent":[]}}],"position":{"start":{"line":254,"column":12,"offset":7964},"end":{"line":254,"column":114,"offset":8066},"indent":[]}},{"type":"text","value":" in curly braces so we could inline the ","position":{"start":{"line":254,"column":114,"offset":8066},"end":{"line":254,"column":154,"offset":8106},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":254,"column":154,"offset":8106},"end":{"line":254,"column":161,"offset":8113},"indent":[]}},{"type":"text","value":" result:","position":{"start":{"line":254,"column":161,"offset":8113},"end":{"line":254,"column":169,"offset":8121},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":7953},"end":{"line":254,"column":169,"offset":8121},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  return (\n    <ul>\n      {numbers.map((number) =>        <ListItem key={number.toString()}                  value={number} />      )}    </ul>\n  );\n}","position":{"start":{"line":256,"column":1,"offset":8123},"end":{"line":264,"column":4,"offset":8343},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/BLvYrB?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":266,"column":4,"offset":8348},"end":{"line":266,"column":21,"offset":8365},"indent":[]}}],"position":{"start":{"line":266,"column":2,"offset":8346},"end":{"line":266,"column":23,"offset":8367},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8345},"end":{"line":266,"column":76,"offset":8420},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8345},"end":{"line":266,"column":76,"offset":8420},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sometimes this results in clearer code, but this style can also be abused. Like in JavaScript, it is up to you to decide whether it is worth extracting a variable for readability. Keep in mind that if the ","position":{"start":{"line":268,"column":1,"offset":8422},"end":{"line":268,"column":206,"offset":8627},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":268,"column":206,"offset":8627},"end":{"line":268,"column":213,"offset":8634},"indent":[]}},{"type":"text","value":" body is too nested, it might be a good time to ","position":{"start":{"line":268,"column":213,"offset":8634},"end":{"line":268,"column":261,"offset":8682},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html#extracting-components","children":[{"type":"text","value":"extract a component","position":{"start":{"line":268,"column":262,"offset":8683},"end":{"line":268,"column":281,"offset":8702},"indent":[]}}],"position":{"start":{"line":268,"column":261,"offset":8682},"end":{"line":268,"column":356,"offset":8777},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":268,"column":356,"offset":8777},"end":{"line":268,"column":357,"offset":8778},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8422},"end":{"line":268,"column":357,"offset":8778},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So many times I have seen developers use the ","position":{"start":{"line":270,"column":1,"offset":8780},"end":{"line":270,"column":46,"offset":8825},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"index","position":{"start":{"line":270,"column":47,"offset":8826},"end":{"line":270,"column":52,"offset":8831},"indent":[]}}],"position":{"start":{"line":270,"column":46,"offset":8825},"end":{"line":270,"column":53,"offset":8832},"indent":[]}},{"type":"text","value":" of an item as its ","position":{"start":{"line":270,"column":53,"offset":8832},"end":{"line":270,"column":72,"offset":8851},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":270,"column":73,"offset":8852},"end":{"line":270,"column":76,"offset":8855},"indent":[]}}],"position":{"start":{"line":270,"column":72,"offset":8851},"end":{"line":270,"column":77,"offset":8856},"indent":[]}},{"type":"text","value":" when they render a list.","position":{"start":{"line":270,"column":77,"offset":8856},"end":{"line":270,"column":102,"offset":8881},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8780},"end":{"line":270,"column":102,"offset":8881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todos.map((todo, index) => (","position":{"start":{"line":272,"column":1,"offset":8883},"end":{"line":272,"column":29,"offset":8911},"indent":[]}},{"type":"break","position":{"start":{"line":272,"column":29,"offset":8911},"end":{"line":273,"column":1,"offset":8914},"indent":[1]}},{"type":"text","value":" <Todo {...todo} key={index} />","position":{"start":{"line":273,"column":1,"offset":8914},"end":{"line":273,"column":32,"offset":8945},"indent":[]}},{"type":"break","position":{"start":{"line":273,"column":32,"offset":8945},"end":{"line":274,"column":1,"offset":8948},"indent":[1]}},{"type":"text","value":" ));","position":{"start":{"line":274,"column":1,"offset":8948},"end":{"line":274,"column":5,"offset":8952},"indent":[]}},{"type":"break","position":{"start":{"line":274,"column":5,"offset":8952},"end":{"line":275,"column":1,"offset":8955},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":275,"column":1,"offset":8955},"end":{"line":275,"column":2,"offset":8956},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":8883},"end":{"line":275,"column":2,"offset":8956},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It looks elegant and it does get rid of the warning (which was the ‘real' issue, right?). What is the danger here?","position":{"start":{"line":277,"column":1,"offset":8958},"end":{"line":277,"column":115,"offset":9072},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":8958},"end":{"line":277,"column":115,"offset":9072},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"It may break your application and display wrong data!","position":{"start":{"line":279,"column":3,"offset":9076},"end":{"line":279,"column":56,"offset":9129},"indent":[]}}],"position":{"start":{"line":279,"column":3,"offset":9076},"end":{"line":279,"column":56,"offset":9129},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":9074},"end":{"line":279,"column":56,"offset":9129},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let me explain, a ","position":{"start":{"line":281,"column":1,"offset":9131},"end":{"line":281,"column":19,"offset":9149},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":281,"column":20,"offset":9150},"end":{"line":281,"column":23,"offset":9153},"indent":[]}}],"position":{"start":{"line":281,"column":19,"offset":9149},"end":{"line":281,"column":24,"offset":9154},"indent":[]}},{"type":"text","value":" is the only thing React uses to identify DOM elements. What happens if you push an item to the list or remove something in the middle? If the ","position":{"start":{"line":281,"column":24,"offset":9154},"end":{"line":281,"column":167,"offset":9297},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":281,"column":168,"offset":9298},"end":{"line":281,"column":171,"offset":9301},"indent":[]}}],"position":{"start":{"line":281,"column":167,"offset":9297},"end":{"line":281,"column":172,"offset":9302},"indent":[]}},{"type":"text","value":" is same as before React assumes that the DOM element represents the same component as before. But that is no longer true.","position":{"start":{"line":281,"column":172,"offset":9302},"end":{"line":281,"column":294,"offset":9424},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":9131},"end":{"line":281,"column":294,"offset":9424},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/27/1*9N62zUlyJcQet8kr7e_FVg.png?q=20","alt":"medium blog image","position":{"start":{"line":283,"column":1,"offset":9426},"end":{"line":283,"column":87,"offset":9512},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":9426},"end":{"line":283,"column":87,"offset":9512},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/630/1*9N62zUlyJcQet8kr7e_FVg.png","alt":"medium blog image","position":{"start":{"line":285,"column":1,"offset":9514},"end":{"line":285,"column":83,"offset":9596},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":9514},"end":{"line":285,"column":83,"offset":9596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Stephen describes the problem he run into on ","position":{"start":{"line":287,"column":1,"offset":9598},"end":{"line":287,"column":46,"offset":9643},"indent":[]}},{"type":"link","title":null,"url":"https://egghead.io/forums/lesson-discussion/topics/break-up-components-into-smaller-pieces-using-functional-components#post-6310","children":[{"type":"text","value":"egghead.io","position":{"start":{"line":287,"column":47,"offset":9644},"end":{"line":287,"column":57,"offset":9654},"indent":[]}}],"position":{"start":{"line":287,"column":46,"offset":9643},"end":{"line":287,"column":188,"offset":9785},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":9598},"end":{"line":287,"column":188,"offset":9785},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To demonstrate the potential danger I created ","position":{"start":{"line":289,"column":1,"offset":9787},"end":{"line":289,"column":47,"offset":9833},"indent":[]}},{"type":"link","title":null,"url":"https://jsbin.com/wohima/edit?output","children":[{"type":"text","value":"a simple example","position":{"start":{"line":289,"column":48,"offset":9834},"end":{"line":289,"column":64,"offset":9850},"indent":[]}}],"position":{"start":{"line":289,"column":47,"offset":9833},"end":{"line":289,"column":103,"offset":9889},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":289,"column":103,"offset":9889},"end":{"line":289,"column":105,"offset":9891},"indent":[]}},{"type":"link","title":null,"url":"http://jsbin.com/wohima/edit?js,output","children":[{"type":"text","value":"with source","position":{"start":{"line":289,"column":106,"offset":9892},"end":{"line":289,"column":117,"offset":9903},"indent":[]}}],"position":{"start":{"line":289,"column":105,"offset":9891},"end":{"line":289,"column":158,"offset":9944},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":289,"column":158,"offset":9944},"end":{"line":289,"column":160,"offset":9946},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":9787},"end":{"line":289,"column":160,"offset":9946},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/630/1*GFYGPdDFLYcLFzx-E-GEcw.jpeg","alt":"medium blog image","position":{"start":{"line":291,"column":1,"offset":9948},"end":{"line":291,"column":84,"offset":10031},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":9948},"end":{"line":291,"column":84,"offset":10031},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Screenshot of the example showing the danger of using the index as key.","position":{"start":{"line":293,"column":1,"offset":10033},"end":{"line":293,"column":72,"offset":10104},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":10033},"end":{"line":293,"column":72,"offset":10104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It turns out, when nothing is passed React uses the ","position":{"start":{"line":295,"column":1,"offset":10106},"end":{"line":295,"column":53,"offset":10158},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"index","position":{"start":{"line":295,"column":54,"offset":10159},"end":{"line":295,"column":59,"offset":10164},"indent":[]}}],"position":{"start":{"line":295,"column":53,"offset":10158},"end":{"line":295,"column":60,"offset":10165},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":295,"column":60,"offset":10165},"end":{"line":295,"column":64,"offset":10169},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":295,"column":65,"offset":10170},"end":{"line":295,"column":68,"offset":10173},"indent":[]}}],"position":{"start":{"line":295,"column":64,"offset":10169},"end":{"line":295,"column":69,"offset":10174},"indent":[]}},{"type":"text","value":" because it is the best guess at the moment. Moreover, it will warn you that it is suboptimal (it says that in a bit confusing words, yes). If you provide it by yourself React just thinks that you know what you are doing which — remember the example — can lead to unpredictable results.","position":{"start":{"line":295,"column":69,"offset":10174},"end":{"line":295,"column":355,"offset":10460},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":10106},"end":{"line":295,"column":355,"offset":10460},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Better","position":{"start":{"line":297,"column":4,"offset":10465},"end":{"line":297,"column":10,"offset":10471},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":10462},"end":{"line":297,"column":10,"offset":10471},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each such item should have a ","position":{"start":{"line":299,"column":1,"offset":10473},"end":{"line":299,"column":30,"offset":10502},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"permanent","position":{"start":{"line":299,"column":31,"offset":10503},"end":{"line":299,"column":40,"offset":10512},"indent":[]}}],"position":{"start":{"line":299,"column":30,"offset":10502},"end":{"line":299,"column":41,"offset":10513},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":299,"column":41,"offset":10513},"end":{"line":299,"column":46,"offset":10518},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"unique","position":{"start":{"line":299,"column":47,"offset":10519},"end":{"line":299,"column":53,"offset":10525},"indent":[]}}],"position":{"start":{"line":299,"column":46,"offset":10518},"end":{"line":299,"column":54,"offset":10526},"indent":[]}},{"type":"text","value":" property. Ideally, it should be assigned when the item is created. Of course, I am speaking about an ","position":{"start":{"line":299,"column":54,"offset":10526},"end":{"line":299,"column":156,"offset":10628},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":299,"column":157,"offset":10629},"end":{"line":299,"column":159,"offset":10631},"indent":[]}}],"position":{"start":{"line":299,"column":156,"offset":10628},"end":{"line":299,"column":160,"offset":10632},"indent":[]}},{"type":"text","value":". Then we can use it the following way:","position":{"start":{"line":299,"column":160,"offset":10632},"end":{"line":299,"column":199,"offset":10671},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":10473},"end":{"line":299,"column":199,"offset":10671},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{","position":{"start":{"line":301,"column":1,"offset":10673},"end":{"line":301,"column":2,"offset":10674},"indent":[]}},{"type":"break","position":{"start":{"line":301,"column":2,"offset":10674},"end":{"line":302,"column":1,"offset":10677},"indent":[1]}},{"type":"text","value":" todos.map((todo) => (","position":{"start":{"line":302,"column":1,"offset":10677},"end":{"line":302,"column":23,"offset":10699},"indent":[]}},{"type":"break","position":{"start":{"line":302,"column":23,"offset":10699},"end":{"line":303,"column":1,"offset":10702},"indent":[1]}},{"type":"text","value":" <Todo {...todo} key={todo.id} />","position":{"start":{"line":303,"column":1,"offset":10702},"end":{"line":303,"column":34,"offset":10735},"indent":[]}},{"type":"break","position":{"start":{"line":303,"column":34,"offset":10735},"end":{"line":304,"column":1,"offset":10738},"indent":[1]}},{"type":"text","value":" ));","position":{"start":{"line":304,"column":1,"offset":10738},"end":{"line":304,"column":5,"offset":10742},"indent":[]}},{"type":"break","position":{"start":{"line":304,"column":5,"offset":10742},"end":{"line":305,"column":1,"offset":10745},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":305,"column":1,"offset":10745},"end":{"line":305,"column":2,"offset":10746},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":10673},"end":{"line":305,"column":2,"offset":10746},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":307,"column":5,"offset":10752},"end":{"line":307,"column":10,"offset":10757},"indent":[]}}],"position":{"start":{"line":307,"column":3,"offset":10750},"end":{"line":307,"column":12,"offset":10759},"indent":[]}},{"type":"text","value":" First look at the existing properties of the items. It is possible they already have something that can be used as an ","position":{"start":{"line":307,"column":12,"offset":10759},"end":{"line":307,"column":131,"offset":10878},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":307,"column":132,"offset":10879},"end":{"line":307,"column":134,"offset":10881},"indent":[]}}],"position":{"start":{"line":307,"column":131,"offset":10878},"end":{"line":307,"column":135,"offset":10882},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":307,"column":135,"offset":10882},"end":{"line":307,"column":136,"offset":10883},"indent":[]}}],"position":{"start":{"line":307,"column":3,"offset":10750},"end":{"line":307,"column":136,"offset":10883},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":10748},"end":{"line":307,"column":136,"offset":10883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One way to do so it to just move the numbering one step up in the abstraction. Using a global index makes sure any two items would have different ","position":{"start":{"line":309,"column":1,"offset":10885},"end":{"line":309,"column":147,"offset":11031},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":309,"column":147,"offset":11031},"end":{"line":309,"column":149,"offset":11033},"indent":[]}},{"type":"text","value":"id_s.","position":{"start":{"line":309,"column":149,"offset":11033},"end":{"line":309,"column":154,"offset":11038},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":10885},"end":{"line":309,"column":154,"offset":11038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let todoCounter = 1;const createNewTodo = (text) => ({","position":{"start":{"line":311,"column":1,"offset":11040},"end":{"line":311,"column":55,"offset":11094},"indent":[]}},{"type":"break","position":{"start":{"line":311,"column":55,"offset":11094},"end":{"line":312,"column":1,"offset":11097},"indent":[1]}},{"type":"text","value":" completed: false,","position":{"start":{"line":312,"column":1,"offset":11097},"end":{"line":312,"column":19,"offset":11115},"indent":[]}},{"type":"break","position":{"start":{"line":312,"column":19,"offset":11115},"end":{"line":313,"column":1,"offset":11118},"indent":[1]}},{"type":"text","value":" id: todoCounter++,","position":{"start":{"line":313,"column":1,"offset":11118},"end":{"line":313,"column":20,"offset":11137},"indent":[]}},{"type":"break","position":{"start":{"line":313,"column":20,"offset":11137},"end":{"line":314,"column":1,"offset":11140},"indent":[1]}},{"type":"text","value":" text","position":{"start":{"line":314,"column":1,"offset":11140},"end":{"line":314,"column":6,"offset":11145},"indent":[]}},{"type":"break","position":{"start":{"line":314,"column":6,"offset":11145},"end":{"line":315,"column":1,"offset":11148},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":315,"column":1,"offset":11148},"end":{"line":315,"column":2,"offset":11149},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":11040},"end":{"line":315,"column":2,"offset":11149},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Much better","position":{"start":{"line":317,"column":4,"offset":11154},"end":{"line":317,"column":15,"offset":11165},"indent":[]}}],"position":{"start":{"line":317,"column":1,"offset":11151},"end":{"line":317,"column":15,"offset":11165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A production solution should use a more robust approach that would handle a distributed creation of items. For such, I recommend ","position":{"start":{"line":319,"column":1,"offset":11167},"end":{"line":319,"column":130,"offset":11296},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/ai/nanoid/","children":[{"type":"text","value":"nanoid","position":{"start":{"line":319,"column":131,"offset":11297},"end":{"line":319,"column":137,"offset":11303},"indent":[]}}],"position":{"start":{"line":319,"column":130,"offset":11296},"end":{"line":319,"column":169,"offset":11335},"indent":[]}},{"type":"text","value":". It quickly generates short non-sequential url-friendly unique ids. The code could look like the following:","position":{"start":{"line":319,"column":169,"offset":11335},"end":{"line":319,"column":277,"offset":11443},"indent":[]}}],"position":{"start":{"line":319,"column":1,"offset":11167},"end":{"line":319,"column":277,"offset":11443},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import { nanoid } from 'nanoid';const createNewTodo = (text) => ({","position":{"start":{"line":321,"column":1,"offset":11445},"end":{"line":321,"column":67,"offset":11511},"indent":[]}},{"type":"break","position":{"start":{"line":321,"column":67,"offset":11511},"end":{"line":322,"column":1,"offset":11514},"indent":[1]}},{"type":"text","value":" completed: false,","position":{"start":{"line":322,"column":1,"offset":11514},"end":{"line":322,"column":19,"offset":11532},"indent":[]}},{"type":"break","position":{"start":{"line":322,"column":19,"offset":11532},"end":{"line":323,"column":1,"offset":11535},"indent":[1]}},{"type":"text","value":" id: nanoid(),","position":{"start":{"line":323,"column":1,"offset":11535},"end":{"line":323,"column":15,"offset":11549},"indent":[]}},{"type":"break","position":{"start":{"line":323,"column":15,"offset":11549},"end":{"line":324,"column":1,"offset":11552},"indent":[1]}},{"type":"text","value":" text","position":{"start":{"line":324,"column":1,"offset":11552},"end":{"line":324,"column":6,"offset":11557},"indent":[]}},{"type":"break","position":{"start":{"line":324,"column":6,"offset":11557},"end":{"line":325,"column":1,"offset":11560},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":325,"column":1,"offset":11560},"end":{"line":325,"column":2,"offset":11561},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":11445},"end":{"line":325,"column":2,"offset":11561},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"TL;DR:","position":{"start":{"line":327,"column":5,"offset":11567},"end":{"line":327,"column":11,"offset":11573},"indent":[]}}],"position":{"start":{"line":327,"column":3,"offset":11565},"end":{"line":327,"column":13,"offset":11575},"indent":[]}},{"type":"text","value":" Generate a unique ","position":{"start":{"line":327,"column":13,"offset":11575},"end":{"line":327,"column":32,"offset":11594},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":327,"column":33,"offset":11595},"end":{"line":327,"column":35,"offset":11597},"indent":[]}}],"position":{"start":{"line":327,"column":32,"offset":11594},"end":{"line":327,"column":36,"offset":11598},"indent":[]}},{"type":"text","value":" for every item and use it as ","position":{"start":{"line":327,"column":36,"offset":11598},"end":{"line":327,"column":66,"offset":11628},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":327,"column":67,"offset":11629},"end":{"line":327,"column":70,"offset":11632},"indent":[]}}],"position":{"start":{"line":327,"column":66,"offset":11628},"end":{"line":327,"column":71,"offset":11633},"indent":[]}},{"type":"text","value":" when rendering the list.","position":{"start":{"line":327,"column":71,"offset":11633},"end":{"line":327,"column":96,"offset":11658},"indent":[]}}],"position":{"start":{"line":327,"column":3,"offset":11565},"end":{"line":327,"column":96,"offset":11658},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":11563},"end":{"line":327,"column":96,"offset":11658},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update: Exception from the rule","position":{"start":{"line":329,"column":4,"offset":11663},"end":{"line":329,"column":35,"offset":11694},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":11660},"end":{"line":329,"column":35,"offset":11694},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many people asked if they always, ","position":{"start":{"line":331,"column":1,"offset":11696},"end":{"line":331,"column":35,"offset":11730},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"always","position":{"start":{"line":331,"column":36,"offset":11731},"end":{"line":331,"column":42,"offset":11737},"indent":[]}}],"position":{"start":{"line":331,"column":35,"offset":11730},"end":{"line":331,"column":43,"offset":11738},"indent":[]}},{"type":"text","value":" have to generate ids. Others have suggested use cases when using the index as a key seems justifiable.","position":{"start":{"line":331,"column":43,"offset":11738},"end":{"line":331,"column":146,"offset":11841},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":11696},"end":{"line":331,"column":146,"offset":11841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is true that sometimes generating new ids is redundant and may be avoided. For example translation of license terms or list of contributors.","position":{"start":{"line":333,"column":1,"offset":11843},"end":{"line":333,"column":144,"offset":11986},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":11843},"end":{"line":333,"column":144,"offset":11986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To help you decide, I put together three conditions which these examples have in common:","position":{"start":{"line":335,"column":1,"offset":11988},"end":{"line":335,"column":89,"offset":12076},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":11988},"end":{"line":335,"column":89,"offset":12076},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the list and items are static-they are not computed and do not change;","position":{"start":{"line":337,"column":5,"offset":12082},"end":{"line":337,"column":75,"offset":12152},"indent":[]}}],"position":{"start":{"line":337,"column":5,"offset":12082},"end":{"line":337,"column":75,"offset":12152},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":12078},"end":{"line":337,"column":75,"offset":12152},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the items in the list have no ids;","position":{"start":{"line":338,"column":5,"offset":12157},"end":{"line":338,"column":39,"offset":12191},"indent":[]}}],"position":{"start":{"line":338,"column":5,"offset":12157},"end":{"line":338,"column":39,"offset":12191},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":12153},"end":{"line":338,"column":39,"offset":12191},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the list is ","position":{"start":{"line":339,"column":5,"offset":12196},"end":{"line":339,"column":17,"offset":12208},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"never","position":{"start":{"line":339,"column":18,"offset":12209},"end":{"line":339,"column":23,"offset":12214},"indent":[]}}],"position":{"start":{"line":339,"column":17,"offset":12208},"end":{"line":339,"column":24,"offset":12215},"indent":[]}},{"type":"text","value":" reordered or filtered.","position":{"start":{"line":339,"column":24,"offset":12215},"end":{"line":339,"column":47,"offset":12238},"indent":[]}}],"position":{"start":{"line":339,"column":5,"offset":12196},"end":{"line":339,"column":47,"offset":12238},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":12192},"end":{"line":339,"column":47,"offset":12238},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":12078},"end":{"line":339,"column":47,"offset":12238},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When ","position":{"start":{"line":341,"column":1,"offset":12240},"end":{"line":341,"column":6,"offset":12245},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"all","position":{"start":{"line":341,"column":7,"offset":12246},"end":{"line":341,"column":10,"offset":12249},"indent":[]}}],"position":{"start":{"line":341,"column":6,"offset":12245},"end":{"line":341,"column":11,"offset":12250},"indent":[]}},{"type":"text","value":" of them are met, you ","position":{"start":{"line":341,"column":11,"offset":12250},"end":{"line":341,"column":33,"offset":12272},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"may safely use the index as a key","position":{"start":{"line":341,"column":35,"offset":12274},"end":{"line":341,"column":68,"offset":12307},"indent":[]}}],"position":{"start":{"line":341,"column":33,"offset":12272},"end":{"line":341,"column":70,"offset":12309},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":341,"column":70,"offset":12309},"end":{"line":341,"column":71,"offset":12310},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":12240},"end":{"line":341,"column":71,"offset":12310},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update 2: React, Preact, and ","position":{"start":{"line":343,"column":4,"offset":12315},"end":{"line":343,"column":33,"offset":12344},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":343,"column":33,"offset":12344},"end":{"line":343,"column":35,"offset":12346},"indent":[]}},{"type":"text","value":"react","position":{"start":{"line":343,"column":35,"offset":12346},"end":{"line":343,"column":40,"offset":12351},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":12312},"end":{"line":343,"column":40,"offset":12351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although in this article I write about React, the problem is not exclusive to it. In similar libraries, like Preact, the danger is present, too. However, the effects can be different.","position":{"start":{"line":345,"column":1,"offset":12353},"end":{"line":345,"column":184,"offset":12536},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":12353},"end":{"line":345,"column":184,"offset":12536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See the following StackOverflow question, where the last element disappears. Also please note the explanation in the answers provided by the creator of Preact,","position":{"start":{"line":347,"column":1,"offset":12538},"end":{"line":347,"column":160,"offset":12697},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":12538},"end":{"line":347,"column":160,"offset":12697},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":348,"column":1,"offset":12698}}}}