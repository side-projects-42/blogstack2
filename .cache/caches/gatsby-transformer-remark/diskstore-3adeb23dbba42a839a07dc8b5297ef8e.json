{"expireTime":9007200914465212000,"key":"transformer-remark-markdown-html-b3937845d6b14bf3515e41f6b5e676bd--","val":"<h1>ðŸ’» PSQLðŸ’»</h1>\n<blockquote>\n<p>source</p>\n</blockquote>\n<h2>Basic Commands</h2>\n<h3>Login to postgresql</h3>\n<pre><code class=\"language-sql\">psql -U postgres\npsql -d mydb -U myuser -W\npsql -h myhost -d mydb -U myuser -W\npsql -U myuser -h myhost \"dbname=mydb sslmode=require\" # ssl connection\n</code></pre>\n<h3>Default Admin Login</h3>\n<pre><code class=\"language-console\">sudo -u postgres psql -U postgres\nsudo -u postgres psql\n</code></pre>\n<h3>List databases on postgresql server</h3>\n<h3>Determine system tables</h3>\n<pre><code class=\"language-console\">select * from pg_tables where tableowner = 'postgres';\n</code></pre>\n<h3>List databases from within a pg shell</h3>\n<h3>List databases from UNIX command prompt</h3>\n<h3>Describe a table</h3>\n<h3>Quit psql</h3>\n<h3>Switch postgres database within admin login shell</h3>\n<h3>Reset a user password as admin</h3>\n<pre><code class=\"language-console\">alter user usertochange with password 'new_passwd';\n</code></pre>\n<h3>Show all tables</h3>\n<h3>List all Schemas</h3>\n<h3>List all users</h3>\n<h3>Load data into postgresql</h3>\n<pre><code class=\"language-console\">psql -W -U username -H hostname &#x3C; file.sql\n</code></pre>\n<h3>Dump (Backup) Data into file</h3>\n<pre><code class=\"language-console\">pg_dump -W -U username -h hostname database_name > file.sql\n</code></pre>\n<h3>Increment a sequence</h3>\n<pre><code class=\"language-console\">SELECT nextval('my_id_seq');\n</code></pre>\n<h3>Create new user</h3>\n<pre><code class=\"language-console\">CREATE USER lemmy WITH PASSWORD 'myPassword';\n# or\n\nsudo -u postgres createuser lemmy -W\n</code></pre>\n<h3>Change user password</h3>\n<pre><code class=\"language-console\">ALTER USER Postgres WITH PASSWORD 'mypass';\n</code></pre>\n<h3>Grant user createdb privilege</h3>\n<pre><code class=\"language-console\">ALTER USER myuser WITH createdb;\n</code></pre>\n<h3>Create a superuser user</h3>\n<pre><code class=\"language-console\">create user mysuper with password '1234' SUPERUSER\n# or even better\ncreate user mysuper with password '1234' SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN REPLICATION;\n# or\nsudo -u postgres createuser lemmy -W -s\n</code></pre>\n<h3>Upgrade an existing user to superuser</h3>\n<pre><code class=\"language-console\">alter user mysuper with superuser;\n# or even better\nalter user mysuper with SUPERUSER CREATEDB CREATEROLE INHERIT LOGIN REPLICATION\n</code></pre>\n<h3>Show Database Version</h3>\n<h3>Change Database Owner</h3>\n<pre><code class=\"language-console\">alter database database_name owner to new_owner;\n</code></pre>\n<h3>Copy a database</h3>\n<pre><code class=\"language-console\">CREATE DATABASE newdb WITH TEMPLATE originaldb;\n</code></pre>\n<h3>View Database Connections</h3>\n<pre><code class=\"language-console\">SELECT * FROM pg_stat_activity;\n</code></pre>\n<h3>View show data directory (works on 9.1+)</h3>\n<h3>Show run-time parameters</h3>\n<pre><code class=\"language-console\">show all;\nselect * from pg_settings;\n</code></pre>\n<h3>Show the block size setting</h3>\n<pre><code class=\"language-console\"># show block_size;\n block_size\n------------\n 8192\n(1 row)\n</code></pre>\n<h3>Show stored procedure source</h3>\n<pre><code class=\"language-console\">SELECT prosrc FROM pg_proc WHERE proname = 'procname'\n</code></pre>\n<h3>Grant examples</h3>\n<pre><code class=\"language-sql\"># readonly to all tables for myuser\ngrant select on all tables in schema public to myuser;\n# all privileges on table1 and table2 to myuser\ngrant all privileges on table1, table2, table3 to myuser;\n</code></pre>\n<h3>Restore Postgres .dump file</h3>\n<pre><code class=\"language-sql\">pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb latest.dump\n</code></pre>\n<p><a href=\"https://gist.github.com/kagemusha/1569836\">source</a></p>\n<h3>Find all active sessions and kill them (i.e. for when needing to drop or rename db)</h3>\n<p>Source: <a href=\"http://stackoverflow.com/questions/5408156/how-to-drop-a-postgresql-database-if-there-are-active-connections-to-it\">http://stackoverflow.com/questions/5408156/how-to-drop-a-postgresql-database-if-there-are-active-connections-to-it</a></p>\n<pre><code class=\"language-sql\"># Postgres 9.6 and above\nSELECT pg_terminate_backend(pg_stat_activity.pid)\nFROM pg_stat_activity\nWHERE pg_stat_activity.datname = 'TARGET_DB'\n AND pid &#x3C;> pg_backend_pid();\n\n# Postgres 9.6 and below\nSELECT pg_terminate_backend(pg_stat_activity.procpid)\nFROM pg_stat_activity\nWHERE pg_stat_activity.datname = 'TARGET_DB'\nAND procpid &#x3C;> pg_backend_pid();\n</code></pre>\n<h2>Handy Queries</h2>\n<pre><code class=\"language-sql\">-- List procedure/function\nSELECT * FROM pg_proc WHERE proname='__procedurename__';\n\n-- List view (including the definition)\nSELECT * FROM pg_views WHERE viewname='__viewname__';\n\n-- Show DB table space in use\nSELECT pg_size_pretty(pg_total_relation_size('__table_name__'));:\n\n-- Show DB space in use\nSELECT pg_size_pretty(pg_database_size('__database_name__'));\n\n-- Show current user's statement timeout\nshow statement_timeout;\n\n-- Show table indexes\nSELECT * FROM pg_indexes WHERE tablename='__table_name__' AND schemaname='__schema_name__';\n\n-- Get all indexes from all tables of a schema:\nSELECT\n   t.relname AS table_name,\n   i.relname AS index_name,\n   a.attname AS column_name\nFROM\n   pg_class t,\n   pg_class i,\n   pg_index ix,\n   pg_attribute a,\n   pg_namespace n\nWHERE\n   t.oid = ix.indrelid\n   AND i.oid = ix.indexrelid\n   AND a.attrelid = t.oid\n   AND a.attnum = ANY(ix.indkey)\n   AND t.relnamespace = n.oid\n   AND n.nspname = 'kartones'\nORDER BY\n   t.relname,\n   i.relname\n\n-- Queries being executed at a certain DB\nSELECT datname, application_name, pid, backend_start, query_start, state_change, state, query\n  FROM pg_stat_activity\n  WHERE datname='__database_name__';\n\n-- Get all queries from all dbs waiting for data (might be hung)\nSELECT * FROM pg_stat_activity WHERE waiting='t';\n</code></pre>\n<h3>Query analysis</h3>\n<pre><code class=\"language-console\">-- See the query plan for the given query\nEXPLAIN __query__\n\n-- See and execute the query plan for the given query\nEXPLAIN ANALYZE __query__\n\n-- Collect statistics\nANALYZE [__table__]\n</code></pre>\n<h2>Querying Data</h2>\n<h3>From a Single Table</h3>\n<pre><code class=\"language-console\">-- Query data in columns c1, c2 from a table\nSELECT c1, c2 FROM t;\n\n-- Query distinct rows from a table\nSELECT DISTINCT c1\nFROM t\nWHERE condition;\n\n-- Sort the result set in ascending or descending order\nSELECT c1, c2\nFROM t\nORDER BY c1 ASC [DESC];\n\n-- Skip offset of rows and return the next n rows\nSELECT c1, c2\nFROM t\nORDER BY c1\nLIMIT n\nOFFSET offset;\n\n-- Group rows using an aggregate function\nSELECT c1, aggregate(c2)\nFROM t\nGROUP BY c1;\n\n-- Filter groups using HAVING clause\nSELECT c1, aggregate(c2) FROM t\nGROUP BY c1\nHAVING condition;\n</code></pre>\n<h3>From Multiple Tables</h3>\n<pre><code class=\"language-sql\">-- Inner join t1 and t2\nSELECT c1, c2\nFROM t1\nINNER JOIN t2\nON condition;\n\n-- Left join t1 and t1\nSELECT c1, c2\nFROM t1\nLEFT JOIN t2\nON condition;\n\n-- Right join t1 and t2\nSELECT c1, c2\nFROM t1\nRIGHT JOIN t2\nON condition;\n\n-- Perform full outer join\nSELECT c1, c2\nFROM t1\nFULL OUTER JOIN t2\nON condition;\n\n-- Produce a Cartesian product of rows in tables\nSELECT c1, c2\nFROM t1\nCROSS JOIN t2;\n\n-- Another way to perform cross join\nSELECT c1, c2\nFROM t1, t2;\n\n-- Join t1 to itself using INNER JOIN clause\nSELECT c1, c2\nFROM t1 A\nINNER JOIN t2 B ON condition\n</code></pre>\n<h3>Using SQL Operators</h3>\n<pre><code class=\"language-sql\">-- Combine rows from two queries\nSELECT c1, c2 FROM t1\nUNION [ALL]\nSELECT c1, c2 FROM t2;\n\n-- Return the intersection of two queries\nSELECT c1, c2 FROM t1\nINTERSECT\nSELECT c1, c2 FROM t2;\n\n-- Subtract a result set from another result set\nSELECT c1, c2 FROM t1\nEXCEPT\nSELECT c1, c2 FROM t2;\n\n-- Query rows using pattern matching %, _\nSELECT c1, c2 FROM t1\nWHERE c1 [NOT] LIKE pattern;\n\n-- Query rows in a list\nSELECT c1, c2\nFROM t\nWHERE c1\n[NOT] IN value_list;\n\n-- Query rows between two values\nSELECT c1, c2\nFROM t\nWHERE c1\nBETWEEN low AND high;\n\n-- Check if values in a table is NULL or not\nSELECT c1, c2 FROM t\nWHERE c1 IS [NOT] NULL;\n</code></pre>\n<h2>Source</h2>\n<ul>\n<li><a href=\"https://www.postgresql.org/docs/9.6/static/app-psql.html\">PostgreSQL 9.6.0 Documentation</a></li>\n<li><a href=\"https://pgexercises.com\">PostgreSQL Exercises</a></li>\n<li><a href=\"http://www.postgresqltutorial.com/postgresql-cheat-sheets\">PostgreSQL Tutorial</a></li>\n</ul>"}