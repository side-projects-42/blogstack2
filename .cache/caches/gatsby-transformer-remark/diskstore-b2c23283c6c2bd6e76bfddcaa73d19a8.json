{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-538d822a8c21f8acdb283ed52d660c77--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Array.prototype.forEach()","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":28,"offset":29},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":28,"offset":29},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":5,"column":1,"offset":31},"end":{"line":5,"column":5,"offset":35},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":5,"column":5,"offset":35},"end":{"line":5,"column":16,"offset":46},"indent":[]}},{"type":"text","value":" method executes a provided function once for each array element.","position":{"start":{"line":5,"column":16,"offset":46},"end":{"line":5,"column":81,"offset":111},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":31},"end":{"line":5,"column":81,"offset":111},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":7,"column":4,"offset":116},"end":{"line":7,"column":10,"offset":122},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":113},"end":{"line":7,"column":10,"offset":122},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Arrow function\nforEach((element) => { ... } )\nforEach((element, index) => { ... } )\nforEach((element, index, array) => { ... } )\n\n// Callback function\nforEach(callbackFn)\nforEach(callbackFn, thisArg)\n\n// Inline callback function\nforEach(function callbackFn(element) { ... })\nforEach(function callbackFn(element, index) { ... })\nforEach(function callbackFn(element, index, array){ ... })\nforEach(function callbackFn(element, index, array) { ... }, thisArg)","position":{"start":{"line":9,"column":1,"offset":124},"end":{"line":22,"column":73,"offset":630},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":24,"column":5,"offset":636},"end":{"line":24,"column":15,"offset":646},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":632},"end":{"line":24,"column":15,"offset":646},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":26,"column":1,"offset":648},"end":{"line":26,"column":13,"offset":660},"indent":[]}},{"type":"text","value":"\nFunction to execute on each element. It accepts between one and three arguments:","position":{"start":{"line":26,"column":13,"offset":660},"end":{"line":27,"column":81,"offset":741},"indent":[1]}}],"position":{"start":{"line":26,"column":1,"offset":648},"end":{"line":27,"column":81,"offset":741},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"element","position":{"start":{"line":29,"column":1,"offset":743},"end":{"line":29,"column":10,"offset":752},"indent":[]}},{"type":"text","value":"\nThe current element being processed in the array.","position":{"start":{"line":29,"column":10,"offset":752},"end":{"line":30,"column":50,"offset":802},"indent":[1]}}],"position":{"start":{"line":29,"column":1,"offset":743},"end":{"line":30,"column":50,"offset":802},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"index","position":{"start":{"line":32,"column":1,"offset":804},"end":{"line":32,"column":8,"offset":811},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":32,"column":8,"offset":811},"end":{"line":32,"column":9,"offset":812},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":32,"column":9,"offset":812},"end":{"line":32,"column":45,"offset":848},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":32,"column":45,"offset":848},"end":{"line":32,"column":53,"offset":856},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":32,"column":53,"offset":856},"end":{"line":32,"column":60,"offset":863},"indent":[]}},{"type":"text","value":"\nThe index of ","position":{"start":{"line":32,"column":60,"offset":863},"end":{"line":33,"column":14,"offset":877},"indent":[1]}},{"type":"inlineCode","value":"element","position":{"start":{"line":33,"column":14,"offset":877},"end":{"line":33,"column":23,"offset":886},"indent":[]}},{"type":"text","value":" in the array.","position":{"start":{"line":33,"column":23,"offset":886},"end":{"line":33,"column":37,"offset":900},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":804},"end":{"line":33,"column":37,"offset":900},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"array","position":{"start":{"line":35,"column":1,"offset":902},"end":{"line":35,"column":8,"offset":909},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":35,"column":8,"offset":909},"end":{"line":35,"column":9,"offset":910},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":35,"column":9,"offset":910},"end":{"line":35,"column":45,"offset":946},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":35,"column":45,"offset":946},"end":{"line":35,"column":53,"offset":954},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":35,"column":53,"offset":954},"end":{"line":35,"column":60,"offset":961},"indent":[]}},{"type":"text","value":"\nThe array ","position":{"start":{"line":35,"column":60,"offset":961},"end":{"line":36,"column":11,"offset":972},"indent":[1]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":36,"column":11,"offset":972},"end":{"line":36,"column":22,"offset":983},"indent":[]}},{"type":"text","value":" was called upon.","position":{"start":{"line":36,"column":22,"offset":983},"end":{"line":36,"column":39,"offset":1000},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":902},"end":{"line":36,"column":39,"offset":1000},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"thisArg","position":{"start":{"line":38,"column":1,"offset":1002},"end":{"line":38,"column":10,"offset":1011},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":38,"column":10,"offset":1011},"end":{"line":38,"column":11,"offset":1012},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":38,"column":11,"offset":1012},"end":{"line":38,"column":47,"offset":1048},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":38,"column":47,"offset":1048},"end":{"line":38,"column":55,"offset":1056},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":38,"column":55,"offset":1056},"end":{"line":38,"column":62,"offset":1063},"indent":[]}},{"type":"text","value":"\nValue to use as ","position":{"start":{"line":38,"column":62,"offset":1063},"end":{"line":39,"column":17,"offset":1080},"indent":[1]}},{"type":"inlineCode","value":"this","position":{"start":{"line":39,"column":17,"offset":1080},"end":{"line":39,"column":23,"offset":1086},"indent":[]}},{"type":"text","value":" when executing ","position":{"start":{"line":39,"column":23,"offset":1086},"end":{"line":39,"column":39,"offset":1102},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":39,"column":39,"offset":1102},"end":{"line":39,"column":51,"offset":1114},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":39,"column":51,"offset":1114},"end":{"line":39,"column":52,"offset":1115},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1002},"end":{"line":39,"column":52,"offset":1115},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":41,"column":5,"offset":1121},"end":{"line":41,"column":17,"offset":1133},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1117},"end":{"line":41,"column":17,"offset":1133},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":43,"column":1,"offset":1135},"end":{"line":43,"column":12,"offset":1146},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":43,"column":12,"offset":1146},"end":{"line":43,"column":13,"offset":1147},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1135},"end":{"line":43,"column":13,"offset":1147},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":45,"column":4,"offset":1152},"end":{"line":45,"column":15,"offset":1163},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1149},"end":{"line":45,"column":15,"offset":1163},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":47,"column":1,"offset":1165},"end":{"line":47,"column":12,"offset":1176},"indent":[]}},{"type":"text","value":" calls a provided ","position":{"start":{"line":47,"column":12,"offset":1176},"end":{"line":47,"column":30,"offset":1194},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":47,"column":30,"offset":1194},"end":{"line":47,"column":42,"offset":1206},"indent":[]}},{"type":"text","value":" function once for each element in an array in ascending index order. It is not invoked for index properties that have been deleted or are uninitialized. (For sparse arrays, ","position":{"start":{"line":47,"column":42,"offset":1206},"end":{"line":47,"column":216,"offset":1380},"indent":[]}},{"type":"link","title":null,"url":"#sparsearray","children":[{"type":"text","value":"see example below","position":{"start":{"line":47,"column":217,"offset":1381},"end":{"line":47,"column":234,"offset":1398},"indent":[]}}],"position":{"start":{"line":47,"column":216,"offset":1380},"end":{"line":47,"column":249,"offset":1413},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":47,"column":249,"offset":1413},"end":{"line":47,"column":251,"offset":1415},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1165},"end":{"line":47,"column":251,"offset":1415},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":49,"column":1,"offset":1417},"end":{"line":49,"column":13,"offset":1429},"indent":[]}},{"type":"text","value":" is invoked with three arguments:","position":{"start":{"line":49,"column":13,"offset":1429},"end":{"line":49,"column":46,"offset":1462},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1417},"end":{"line":49,"column":46,"offset":1462},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the value of the element","position":{"start":{"line":51,"column":5,"offset":1468},"end":{"line":51,"column":29,"offset":1492},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1468},"end":{"line":51,"column":29,"offset":1492},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1464},"end":{"line":51,"column":29,"offset":1492},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the index of the element","position":{"start":{"line":52,"column":5,"offset":1497},"end":{"line":52,"column":29,"offset":1521},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1497},"end":{"line":52,"column":29,"offset":1521},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1493},"end":{"line":52,"column":29,"offset":1521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the Array object being traversed","position":{"start":{"line":53,"column":5,"offset":1526},"end":{"line":53,"column":37,"offset":1558},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":1526},"end":{"line":53,"column":37,"offset":1558},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1522},"end":{"line":53,"column":37,"offset":1558},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1464},"end":{"line":53,"column":37,"offset":1558},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If a ","position":{"start":{"line":55,"column":1,"offset":1560},"end":{"line":55,"column":6,"offset":1565},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":55,"column":6,"offset":1565},"end":{"line":55,"column":15,"offset":1574},"indent":[]}},{"type":"text","value":" parameter is provided to ","position":{"start":{"line":55,"column":15,"offset":1574},"end":{"line":55,"column":41,"offset":1600},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":55,"column":41,"offset":1600},"end":{"line":55,"column":52,"offset":1611},"indent":[]}},{"type":"text","value":", it will be used as callback's ","position":{"start":{"line":55,"column":52,"offset":1611},"end":{"line":55,"column":84,"offset":1643},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":84,"offset":1643},"end":{"line":55,"column":90,"offset":1649},"indent":[]}},{"type":"text","value":" value. The ","position":{"start":{"line":55,"column":90,"offset":1649},"end":{"line":55,"column":102,"offset":1661},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":55,"column":102,"offset":1661},"end":{"line":55,"column":111,"offset":1670},"indent":[]}},{"type":"text","value":" value ultimately observable by ","position":{"start":{"line":55,"column":111,"offset":1670},"end":{"line":55,"column":143,"offset":1702},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":55,"column":143,"offset":1702},"end":{"line":55,"column":155,"offset":1714},"indent":[]}},{"type":"text","value":" is determined according to ","position":{"start":{"line":55,"column":155,"offset":1714},"end":{"line":55,"column":183,"offset":1742},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"text","value":"the usual rules for determining the ","position":{"start":{"line":55,"column":184,"offset":1743},"end":{"line":55,"column":220,"offset":1779},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":55,"column":220,"offset":1779},"end":{"line":55,"column":226,"offset":1785},"indent":[]}},{"type":"text","value":" seen by a function","position":{"start":{"line":55,"column":226,"offset":1785},"end":{"line":55,"column":245,"offset":1804},"indent":[]}}],"position":{"start":{"line":55,"column":183,"offset":1742},"end":{"line":55,"column":268,"offset":1827},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":55,"column":268,"offset":1827},"end":{"line":55,"column":269,"offset":1828},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1560},"end":{"line":55,"column":269,"offset":1828},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The range of elements processed by ","position":{"start":{"line":57,"column":1,"offset":1830},"end":{"line":57,"column":36,"offset":1865},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":57,"column":36,"offset":1865},"end":{"line":57,"column":47,"offset":1876},"indent":[]}},{"type":"text","value":" is set before the first invocation of ","position":{"start":{"line":57,"column":47,"offset":1876},"end":{"line":57,"column":86,"offset":1915},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":57,"column":86,"offset":1915},"end":{"line":57,"column":98,"offset":1927},"indent":[]}},{"type":"text","value":". Elements which are appended to the array after the call to ","position":{"start":{"line":57,"column":98,"offset":1927},"end":{"line":57,"column":159,"offset":1988},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":57,"column":159,"offset":1988},"end":{"line":57,"column":170,"offset":1999},"indent":[]}},{"type":"text","value":" begins will not be visited by ","position":{"start":{"line":57,"column":170,"offset":1999},"end":{"line":57,"column":201,"offset":2030},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":57,"column":201,"offset":2030},"end":{"line":57,"column":213,"offset":2042},"indent":[]}},{"type":"text","value":". If existing elements of the array are changed or deleted, their value as passed to ","position":{"start":{"line":57,"column":213,"offset":2042},"end":{"line":57,"column":298,"offset":2127},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":57,"column":298,"offset":2127},"end":{"line":57,"column":310,"offset":2139},"indent":[]}},{"type":"text","value":" will be the value at the time ","position":{"start":{"line":57,"column":310,"offset":2139},"end":{"line":57,"column":341,"offset":2170},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":57,"column":341,"offset":2170},"end":{"line":57,"column":352,"offset":2181},"indent":[]}},{"type":"text","value":" visits them; elements that are deleted before being visited are not visited. If elements that are already visited are removed (e.g. using ","position":{"start":{"line":57,"column":352,"offset":2181},"end":{"line":57,"column":491,"offset":2320},"indent":[]}},{"type":"link","title":null,"url":"shift","children":[{"type":"inlineCode","value":"shift()","position":{"start":{"line":57,"column":492,"offset":2321},"end":{"line":57,"column":501,"offset":2330},"indent":[]}}],"position":{"start":{"line":57,"column":491,"offset":2320},"end":{"line":57,"column":509,"offset":2338},"indent":[]}},{"type":"text","value":") during the iteration, later elements will be skipped. (","position":{"start":{"line":57,"column":509,"offset":2338},"end":{"line":57,"column":566,"offset":2395},"indent":[]}},{"type":"link","title":null,"url":"#Modifying_the_array_during_iteration","children":[{"type":"text","value":"See this example, below","position":{"start":{"line":57,"column":567,"offset":2396},"end":{"line":57,"column":590,"offset":2419},"indent":[]}}],"position":{"start":{"line":57,"column":566,"offset":2395},"end":{"line":57,"column":630,"offset":2459},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":57,"column":630,"offset":2459},"end":{"line":57,"column":632,"offset":2461},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1830},"end":{"line":57,"column":632,"offset":2461},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":59,"column":1,"offset":2463},"end":{"line":59,"column":12,"offset":2474},"indent":[]}},{"type":"text","value":" executes the ","position":{"start":{"line":59,"column":12,"offset":2474},"end":{"line":59,"column":26,"offset":2488},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":59,"column":26,"offset":2488},"end":{"line":59,"column":38,"offset":2500},"indent":[]}},{"type":"text","value":" function once for each array element; unlike ","position":{"start":{"line":59,"column":38,"offset":2500},"end":{"line":59,"column":84,"offset":2546},"indent":[]}},{"type":"link","title":null,"url":"map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":59,"column":85,"offset":2547},"end":{"line":59,"column":92,"offset":2554},"indent":[]}}],"position":{"start":{"line":59,"column":84,"offset":2546},"end":{"line":59,"column":98,"offset":2560},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":59,"column":98,"offset":2560},"end":{"line":59,"column":102,"offset":2564},"indent":[]}},{"type":"link","title":null,"url":"reduce","children":[{"type":"inlineCode","value":"reduce()","position":{"start":{"line":59,"column":103,"offset":2565},"end":{"line":59,"column":113,"offset":2575},"indent":[]}}],"position":{"start":{"line":59,"column":102,"offset":2564},"end":{"line":59,"column":122,"offset":2584},"indent":[]}},{"type":"text","value":" it always returns the value ","position":{"start":{"line":59,"column":122,"offset":2584},"end":{"line":59,"column":151,"offset":2613},"indent":[]}},{"type":"link","title":null,"url":"../undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":59,"column":152,"offset":2614},"end":{"line":59,"column":163,"offset":2625},"indent":[]}}],"position":{"start":{"line":59,"column":151,"offset":2613},"end":{"line":59,"column":178,"offset":2640},"indent":[]}},{"type":"text","value":" and is not chainable. The typical use case is to execute side effects at the end of a chain.","position":{"start":{"line":59,"column":178,"offset":2640},"end":{"line":59,"column":271,"offset":2733},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2463},"end":{"line":59,"column":271,"offset":2733},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":61,"column":1,"offset":2735},"end":{"line":61,"column":12,"offset":2746},"indent":[]}},{"type":"text","value":" does not mutate the array on which it is called. (However, ","position":{"start":{"line":61,"column":12,"offset":2746},"end":{"line":61,"column":72,"offset":2806},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":61,"column":72,"offset":2806},"end":{"line":61,"column":84,"offset":2818},"indent":[]}},{"type":"text","value":" may do so)","position":{"start":{"line":61,"column":84,"offset":2818},"end":{"line":61,"column":95,"offset":2829},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2735},"end":{"line":61,"column":95,"offset":2829},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":63,"column":3,"offset":2833},"end":{"line":63,"column":8,"offset":2838},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2831},"end":{"line":63,"column":10,"offset":2840},"indent":[]}},{"type":"text","value":" There is no way to stop or break a ","position":{"start":{"line":63,"column":10,"offset":2840},"end":{"line":63,"column":46,"offset":2876},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":63,"column":46,"offset":2876},"end":{"line":63,"column":57,"offset":2887},"indent":[]}},{"type":"text","value":" loop other than by throwing an exception. If you need such behavior, the ","position":{"start":{"line":63,"column":57,"offset":2887},"end":{"line":63,"column":131,"offset":2961},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":63,"column":131,"offset":2961},"end":{"line":63,"column":142,"offset":2972},"indent":[]}},{"type":"text","value":" method is the wrong tool.","position":{"start":{"line":63,"column":142,"offset":2972},"end":{"line":63,"column":168,"offset":2998},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2831},"end":{"line":63,"column":168,"offset":2998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Early termination may be accomplished with:","position":{"start":{"line":65,"column":1,"offset":3000},"end":{"line":65,"column":44,"offset":3043},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":3000},"end":{"line":65,"column":44,"offset":3043},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A simple ","position":{"start":{"line":67,"column":3,"offset":3047},"end":{"line":67,"column":12,"offset":3056},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for","children":[{"type":"text","value":"for","position":{"start":{"line":67,"column":13,"offset":3057},"end":{"line":67,"column":16,"offset":3060},"indent":[]}}],"position":{"start":{"line":67,"column":12,"offset":3056},"end":{"line":67,"column":39,"offset":3083},"indent":[]}},{"type":"text","value":" loop","position":{"start":{"line":67,"column":39,"offset":3083},"end":{"line":67,"column":44,"offset":3088},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":3047},"end":{"line":67,"column":44,"offset":3088},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3045},"end":{"line":67,"column":44,"offset":3088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":68,"column":3,"offset":3091},"end":{"line":68,"column":5,"offset":3093},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for...of","children":[{"type":"text","value":"for...of","position":{"start":{"line":68,"column":6,"offset":3094},"end":{"line":68,"column":14,"offset":3102},"indent":[]}}],"position":{"start":{"line":68,"column":5,"offset":3093},"end":{"line":68,"column":42,"offset":3130},"indent":[]}},{"type":"text","value":" / ","position":{"start":{"line":68,"column":42,"offset":3130},"end":{"line":68,"column":45,"offset":3133},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for...in","children":[{"type":"text","value":"for...in","position":{"start":{"line":68,"column":46,"offset":3134},"end":{"line":68,"column":54,"offset":3142},"indent":[]}}],"position":{"start":{"line":68,"column":45,"offset":3133},"end":{"line":68,"column":82,"offset":3170},"indent":[]}},{"type":"text","value":" loops","position":{"start":{"line":68,"column":82,"offset":3170},"end":{"line":68,"column":88,"offset":3176},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":3091},"end":{"line":68,"column":88,"offset":3176},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3089},"end":{"line":68,"column":88,"offset":3176},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"every","children":[{"type":"inlineCode","value":"Array.prototype.every()","position":{"start":{"line":69,"column":4,"offset":3180},"end":{"line":69,"column":29,"offset":3205},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":3179},"end":{"line":69,"column":37,"offset":3213},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":3179},"end":{"line":69,"column":37,"offset":3213},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":3177},"end":{"line":69,"column":37,"offset":3213},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"some","children":[{"type":"inlineCode","value":"Array.prototype.some()","position":{"start":{"line":70,"column":4,"offset":3217},"end":{"line":70,"column":28,"offset":3241},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":3216},"end":{"line":70,"column":35,"offset":3248},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":3216},"end":{"line":70,"column":35,"offset":3248},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3214},"end":{"line":70,"column":35,"offset":3248},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"find","children":[{"type":"inlineCode","value":"Array.prototype.find()","position":{"start":{"line":71,"column":4,"offset":3252},"end":{"line":71,"column":28,"offset":3276},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":3251},"end":{"line":71,"column":35,"offset":3283},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":3251},"end":{"line":71,"column":35,"offset":3283},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3249},"end":{"line":71,"column":35,"offset":3283},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"findindex","children":[{"type":"inlineCode","value":"Array.prototype.findIndex()","position":{"start":{"line":72,"column":4,"offset":3287},"end":{"line":72,"column":33,"offset":3316},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":3286},"end":{"line":72,"column":45,"offset":3328},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":3286},"end":{"line":72,"column":45,"offset":3328},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3284},"end":{"line":72,"column":45,"offset":3328},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3045},"end":{"line":72,"column":45,"offset":3328},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Array methods: ","position":{"start":{"line":74,"column":1,"offset":3330},"end":{"line":74,"column":16,"offset":3345},"indent":[]}},{"type":"link","title":null,"url":"every","children":[{"type":"inlineCode","value":"every()","position":{"start":{"line":74,"column":17,"offset":3346},"end":{"line":74,"column":26,"offset":3355},"indent":[]}}],"position":{"start":{"line":74,"column":16,"offset":3345},"end":{"line":74,"column":34,"offset":3363},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":74,"column":34,"offset":3363},"end":{"line":74,"column":36,"offset":3365},"indent":[]}},{"type":"link","title":null,"url":"some","children":[{"type":"inlineCode","value":"some()","position":{"start":{"line":74,"column":37,"offset":3366},"end":{"line":74,"column":45,"offset":3374},"indent":[]}}],"position":{"start":{"line":74,"column":36,"offset":3365},"end":{"line":74,"column":52,"offset":3381},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":74,"column":52,"offset":3381},"end":{"line":74,"column":54,"offset":3383},"indent":[]}},{"type":"link","title":null,"url":"find","children":[{"type":"inlineCode","value":"find()","position":{"start":{"line":74,"column":55,"offset":3384},"end":{"line":74,"column":63,"offset":3392},"indent":[]}}],"position":{"start":{"line":74,"column":54,"offset":3383},"end":{"line":74,"column":70,"offset":3399},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":74,"column":70,"offset":3399},"end":{"line":74,"column":76,"offset":3405},"indent":[]}},{"type":"link","title":null,"url":"findindex","children":[{"type":"inlineCode","value":"findIndex()","position":{"start":{"line":74,"column":77,"offset":3406},"end":{"line":74,"column":90,"offset":3419},"indent":[]}}],"position":{"start":{"line":74,"column":76,"offset":3405},"end":{"line":74,"column":102,"offset":3431},"indent":[]}},{"type":"text","value":" test the array elements with a predicate returning a truthy value to determine if further iteration is required.","position":{"start":{"line":74,"column":102,"offset":3431},"end":{"line":74,"column":215,"offset":3544},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3330},"end":{"line":74,"column":215,"offset":3544},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":76,"column":3,"offset":3548},"end":{"line":76,"column":8,"offset":3553},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3546},"end":{"line":76,"column":10,"offset":3555},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":76,"column":10,"offset":3555},"end":{"line":76,"column":11,"offset":3556},"indent":[]}},{"type":"inlineCode","value":"forEach","position":{"start":{"line":76,"column":11,"offset":3556},"end":{"line":76,"column":20,"offset":3565},"indent":[]}},{"type":"text","value":" expects a synchronous function.","position":{"start":{"line":76,"column":20,"offset":3565},"end":{"line":76,"column":52,"offset":3597},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":3546},"end":{"line":76,"column":52,"offset":3597},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach","position":{"start":{"line":78,"column":1,"offset":3599},"end":{"line":78,"column":10,"offset":3608},"indent":[]}},{"type":"text","value":" does not wait for promises. Make sure you are aware of the implications while using promises (or async functions) as ","position":{"start":{"line":78,"column":10,"offset":3608},"end":{"line":78,"column":128,"offset":3726},"indent":[]}},{"type":"inlineCode","value":"forEach","position":{"start":{"line":78,"column":128,"offset":3726},"end":{"line":78,"column":137,"offset":3735},"indent":[]}},{"type":"text","value":" callback.","position":{"start":{"line":78,"column":137,"offset":3735},"end":{"line":78,"column":147,"offset":3745},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3599},"end":{"line":78,"column":147,"offset":3745},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let ratings = [5, 4, 5];\nlet sum = 0;\n\nlet sumFunction = async function (a, b)\n{\n  return a + b\n}\n\nratings.forEach(async function(rating) {\n  sum = await sumFunction(sum, rating)\n})\n\nconsole.log(sum)\n// Naively expected output: 14\n// Actual output: 0","position":{"start":{"line":80,"column":1,"offset":3747},"end":{"line":94,"column":24,"offset":4045},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":96,"column":4,"offset":4050},"end":{"line":96,"column":12,"offset":4058},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4047},"end":{"line":96,"column":12,"offset":4058},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":98,"column":1,"offset":4060},"end":{"line":98,"column":12,"offset":4071},"indent":[]}},{"type":"text","value":" was added to the ECMA-262 standard in the 5","position":{"start":{"line":98,"column":12,"offset":4071},"end":{"line":98,"column":56,"offset":4115},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":98,"column":56,"offset":4115},"end":{"line":98,"column":61,"offset":4120},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":98,"column":61,"offset":4120},"end":{"line":98,"column":63,"offset":4122},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":98,"column":63,"offset":4122},"end":{"line":98,"column":69,"offset":4128},"indent":[]}},{"type":"text","value":" edition, and it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of ","position":{"start":{"line":98,"column":69,"offset":4128},"end":{"line":98,"column":252,"offset":4311},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":98,"column":252,"offset":4311},"end":{"line":98,"column":263,"offset":4322},"indent":[]}},{"type":"text","value":" in implementations which do not natively support it.","position":{"start":{"line":98,"column":263,"offset":4322},"end":{"line":98,"column":316,"offset":4375},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4060},"end":{"line":98,"column":316,"offset":4375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This algorithm is exactly the one specified in ECMA-262, 5","position":{"start":{"line":100,"column":1,"offset":4377},"end":{"line":100,"column":59,"offset":4435},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":100,"column":59,"offset":4435},"end":{"line":100,"column":64,"offset":4440},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":100,"column":64,"offset":4440},"end":{"line":100,"column":66,"offset":4442},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":100,"column":66,"offset":4442},"end":{"line":100,"column":72,"offset":4448},"indent":[]}},{"type":"text","value":" edition, assuming ","position":{"start":{"line":100,"column":72,"offset":4448},"end":{"line":100,"column":91,"offset":4467},"indent":[]}},{"type":"link","title":null,"url":"../object","children":[{"type":"inlineCode","value":"Object","position":{"start":{"line":100,"column":92,"offset":4468},"end":{"line":100,"column":100,"offset":4476},"indent":[]}}],"position":{"start":{"line":100,"column":91,"offset":4467},"end":{"line":100,"column":112,"offset":4488},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":100,"column":112,"offset":4488},"end":{"line":100,"column":117,"offset":4493},"indent":[]}},{"type":"link","title":null,"url":"../typeerror","children":[{"type":"inlineCode","value":"TypeError","position":{"start":{"line":100,"column":118,"offset":4494},"end":{"line":100,"column":129,"offset":4505},"indent":[]}}],"position":{"start":{"line":100,"column":117,"offset":4493},"end":{"line":100,"column":144,"offset":4520},"indent":[]}},{"type":"text","value":" have their original values and that ","position":{"start":{"line":100,"column":144,"offset":4520},"end":{"line":100,"column":181,"offset":4557},"indent":[]}},{"type":"inlineCode","value":"fun.call","position":{"start":{"line":100,"column":181,"offset":4557},"end":{"line":100,"column":191,"offset":4567},"indent":[]}},{"type":"text","value":" evaluates to the original value of ","position":{"start":{"line":100,"column":191,"offset":4567},"end":{"line":100,"column":227,"offset":4603},"indent":[]}},{"type":"link","title":null,"url":"../function/call","children":[{"type":"inlineCode","value":"Function.prototype.call()","position":{"start":{"line":100,"column":228,"offset":4604},"end":{"line":100,"column":255,"offset":4631},"indent":[]}}],"position":{"start":{"line":100,"column":227,"offset":4603},"end":{"line":100,"column":274,"offset":4650},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":100,"column":274,"offset":4650},"end":{"line":100,"column":275,"offset":4651},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":4377},"end":{"line":100,"column":275,"offset":4651},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: https://es5.github.io/#x15.4.4.18\n\nif (!Array.prototype['forEach']) {\n\n  Array.prototype.forEach = function(callback, thisArg) {\n\n    if (this == null) { throw new TypeError('Array.prototype.forEach called on null or undefined'); }\n\n    var T, k;\n    // 1. Let O be the result of calling toObject() passing the\n    // |this| value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get() internal\n    // method of O with the argument \"length\".\n    // 3. Let len be toUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If isCallable(callback) is false, throw a TypeError exception.\n    // See: https://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") { throw new TypeError(callback + ' is not a function'); }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let\n    // T be undefined.\n    if (arguments.length > 1) { T = thisArg; }\n\n    // 6. Let k be 0\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //    This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty\n      //    internal method of O with argument Pk.\n      //    This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal\n        // method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Call the Call internal method of callback with T as\n        // the this value and argument list containing kValue, k, and O.\n        callback.call(T, kValue, k, O);\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 8. return undefined\n  };\n}","position":{"start":{"line":102,"column":1,"offset":4653},"end":{"line":158,"column":6,"offset":6632},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":160,"column":4,"offset":6637},"end":{"line":160,"column":12,"offset":6645},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":6634},"end":{"line":160,"column":12,"offset":6645},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"No operation for uninitialized values (sparse arrays)","position":{"start":{"line":162,"column":5,"offset":6651},"end":{"line":162,"column":58,"offset":6704},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":6647},"end":{"line":162,"column":58,"offset":6704},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const arraySparse = [1,3,,7]\nlet numCallbackRuns = 0\n\narraySparse.forEach(function(element) {\n  console.log(element)\n  numCallbackRuns++\n})\n\nconsole.log(\"numCallbackRuns: \", numCallbackRuns)\n\n// 1\n// 3\n// 7\n// numCallbackRuns: 3\n// comment: as you can see the missing value between 3 and 7 didn't invoke callback function.","position":{"start":{"line":164,"column":1,"offset":6706},"end":{"line":178,"column":98,"offset":7076},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Converting a for loop to forEach","position":{"start":{"line":180,"column":5,"offset":7082},"end":{"line":180,"column":37,"offset":7114},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7078},"end":{"line":180,"column":37,"offset":7114},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const items = ['item1', 'item2', 'item3']\nconst copyItems = []\n\n// before\nfor (let i = 0; i < items.length; i++) {\n  copyItems.push(items[i])\n}\n\n// after\nitems.forEach(function(item){\n  copyItems.push(item)\n})","position":{"start":{"line":182,"column":1,"offset":7116},"end":{"line":193,"column":7,"offset":7365},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Printing the contents of an array","position":{"start":{"line":195,"column":5,"offset":7371},"end":{"line":195,"column":38,"offset":7404},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":7367},"end":{"line":195,"column":38,"offset":7404},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":197,"column":3,"offset":7408},"end":{"line":197,"column":8,"offset":7413},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":7406},"end":{"line":197,"column":10,"offset":7415},"indent":[]}},{"type":"text","value":" In order to display the content of an array in the console, you can use ","position":{"start":{"line":197,"column":10,"offset":7415},"end":{"line":197,"column":83,"offset":7488},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Console/table","children":[{"type":"inlineCode","value":"console.table()","position":{"start":{"line":197,"column":84,"offset":7489},"end":{"line":197,"column":101,"offset":7506},"indent":[]}}],"position":{"start":{"line":197,"column":83,"offset":7488},"end":{"line":197,"column":166,"offset":7571},"indent":[]}},{"type":"text","value":", which prints a formatted version of the array.","position":{"start":{"line":197,"column":166,"offset":7571},"end":{"line":197,"column":214,"offset":7619},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":7406},"end":{"line":197,"column":214,"offset":7619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example illustrates an alternative approach, using ","position":{"start":{"line":199,"column":1,"offset":7621},"end":{"line":199,"column":66,"offset":7686},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":199,"column":66,"offset":7686},"end":{"line":199,"column":77,"offset":7697},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":199,"column":77,"offset":7697},"end":{"line":199,"column":78,"offset":7698},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":7621},"end":{"line":199,"column":78,"offset":7698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following code logs a line for each element in an array:","position":{"start":{"line":201,"column":1,"offset":7700},"end":{"line":201,"column":61,"offset":7760},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":7700},"end":{"line":201,"column":61,"offset":7760},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function logArrayElements(element, index, array) {\n  console.log('a[' + index + '] = ' + element)\n}\n\n// Notice that index 2 is skipped, since there is no item at\n// that position in the array...\n[2, 5, , 9].forEach(logArrayElements)\n// logs:\n// a[0] = 2\n// a[1] = 5\n// a[3] = 9","position":{"start":{"line":203,"column":1,"offset":7762},"end":{"line":213,"column":16,"offset":8079},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using thisArg","position":{"start":{"line":215,"column":5,"offset":8085},"end":{"line":215,"column":18,"offset":8098},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":8081},"end":{"line":215,"column":18,"offset":8098},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following (contrived) example updates an object's properties from each entry in the array:","position":{"start":{"line":217,"column":1,"offset":8100},"end":{"line":217,"column":95,"offset":8194},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":8100},"end":{"line":217,"column":95,"offset":8194},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function Counter() {\n  this.sum = 0\n  this.count = 0\n}\nCounter.prototype.add = function(array) {\n  array.forEach(function countEntry(entry) {\n    this.sum += entry\n    ++this.count\n  }, this)\n}\n\nconst obj = new Counter()\nobj.add([2, 5, 9])\nobj.count\n// 3\nobj.sum\n// 16","position":{"start":{"line":219,"column":1,"offset":8196},"end":{"line":235,"column":10,"offset":8528},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":237,"column":1,"offset":8530},"end":{"line":237,"column":11,"offset":8540},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":237,"column":11,"offset":8540},"end":{"line":237,"column":20,"offset":8549},"indent":[]}},{"type":"text","value":" parameter (","position":{"start":{"line":237,"column":20,"offset":8549},"end":{"line":237,"column":32,"offset":8561},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":237,"column":32,"offset":8561},"end":{"line":237,"column":38,"offset":8567},"indent":[]}},{"type":"text","value":") is provided to ","position":{"start":{"line":237,"column":38,"offset":8567},"end":{"line":237,"column":55,"offset":8584},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":237,"column":55,"offset":8584},"end":{"line":237,"column":66,"offset":8595},"indent":[]}},{"type":"text","value":", it is passed to ","position":{"start":{"line":237,"column":66,"offset":8595},"end":{"line":237,"column":84,"offset":8613},"indent":[]}},{"type":"inlineCode","value":"callback","position":{"start":{"line":237,"column":84,"offset":8613},"end":{"line":237,"column":94,"offset":8623},"indent":[]}},{"type":"text","value":" each time it's invoked. The callback uses it as its ","position":{"start":{"line":237,"column":94,"offset":8623},"end":{"line":237,"column":147,"offset":8676},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":237,"column":147,"offset":8676},"end":{"line":237,"column":153,"offset":8682},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":237,"column":153,"offset":8682},"end":{"line":237,"column":160,"offset":8689},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":8530},"end":{"line":237,"column":160,"offset":8689},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":239,"column":3,"offset":8693},"end":{"line":239,"column":8,"offset":8698},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":8691},"end":{"line":239,"column":10,"offset":8700},"indent":[]}},{"type":"text","value":" If passing the callback function used an ","position":{"start":{"line":239,"column":10,"offset":8700},"end":{"line":239,"column":52,"offset":8742},"indent":[]}},{"type":"link","title":null,"url":"../../functions/arrow_functions","children":[{"type":"text","value":"arrow function expression","position":{"start":{"line":239,"column":53,"offset":8743},"end":{"line":239,"column":78,"offset":8768},"indent":[]}}],"position":{"start":{"line":239,"column":52,"offset":8742},"end":{"line":239,"column":112,"offset":8802},"indent":[]}},{"type":"text","value":", the ","position":{"start":{"line":239,"column":112,"offset":8802},"end":{"line":239,"column":118,"offset":8808},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":239,"column":118,"offset":8808},"end":{"line":239,"column":127,"offset":8817},"indent":[]}},{"type":"text","value":" parameter could be omitted, since all arrow functions lexically bind the ","position":{"start":{"line":239,"column":127,"offset":8817},"end":{"line":239,"column":201,"offset":8891},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"inlineCode","value":"this","position":{"start":{"line":239,"column":202,"offset":8892},"end":{"line":239,"column":208,"offset":8898},"indent":[]}}],"position":{"start":{"line":239,"column":201,"offset":8891},"end":{"line":239,"column":231,"offset":8921},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":239,"column":231,"offset":8921},"end":{"line":239,"column":238,"offset":8928},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":8691},"end":{"line":239,"column":238,"offset":8928},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"An object copy function","position":{"start":{"line":241,"column":5,"offset":8934},"end":{"line":241,"column":28,"offset":8957},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":8930},"end":{"line":241,"column":28,"offset":8957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following code creates a copy of a given object.","position":{"start":{"line":243,"column":1,"offset":8959},"end":{"line":243,"column":53,"offset":9011},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":8959},"end":{"line":243,"column":53,"offset":9011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are different ways to create a copy of an object. The following is just one way and is presented to explain how ","position":{"start":{"line":245,"column":1,"offset":9013},"end":{"line":245,"column":119,"offset":9131},"indent":[]}},{"type":"inlineCode","value":"Array.prototype.forEach()","position":{"start":{"line":245,"column":119,"offset":9131},"end":{"line":245,"column":146,"offset":9158},"indent":[]}},{"type":"text","value":" works by using ECMAScript 5 ","position":{"start":{"line":245,"column":146,"offset":9158},"end":{"line":245,"column":175,"offset":9187},"indent":[]}},{"type":"inlineCode","value":"Object.*","position":{"start":{"line":245,"column":175,"offset":9187},"end":{"line":245,"column":185,"offset":9197},"indent":[]}},{"type":"text","value":" meta property functions.","position":{"start":{"line":245,"column":185,"offset":9197},"end":{"line":245,"column":210,"offset":9222},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":9013},"end":{"line":245,"column":210,"offset":9222},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function copy(obj) {\n  const copy = Object.create(Object.getPrototypeOf(obj))\n  const propNames = Object.getOwnPropertyNames(obj)\n\n  propNames.forEach(function(name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name)\n    Object.defineProperty(copy, name, desc)\n  })\n\n  return copy\n}\n\nconst obj1 = { a: 1, b: 2 }\nconst obj2 = copy(obj1) // obj2 looks like obj1 now","position":{"start":{"line":247,"column":1,"offset":9224},"end":{"line":260,"column":56,"offset":9642},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Modifying the array during iteration","position":{"start":{"line":262,"column":5,"offset":9648},"end":{"line":262,"column":41,"offset":9684},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":9644},"end":{"line":262,"column":41,"offset":9684},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example logs ","position":{"start":{"line":264,"column":1,"offset":9686},"end":{"line":264,"column":28,"offset":9713},"indent":[]}},{"type":"inlineCode","value":"one","position":{"start":{"line":264,"column":28,"offset":9713},"end":{"line":264,"column":33,"offset":9718},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":264,"column":33,"offset":9718},"end":{"line":264,"column":35,"offset":9720},"indent":[]}},{"type":"inlineCode","value":"two","position":{"start":{"line":264,"column":35,"offset":9720},"end":{"line":264,"column":40,"offset":9725},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":264,"column":40,"offset":9725},"end":{"line":264,"column":42,"offset":9727},"indent":[]}},{"type":"inlineCode","value":"four","position":{"start":{"line":264,"column":42,"offset":9727},"end":{"line":264,"column":48,"offset":9733},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":264,"column":48,"offset":9733},"end":{"line":264,"column":49,"offset":9734},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":9686},"end":{"line":264,"column":49,"offset":9734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the entry containing the value ","position":{"start":{"line":266,"column":1,"offset":9736},"end":{"line":266,"column":37,"offset":9772},"indent":[]}},{"type":"inlineCode","value":"two","position":{"start":{"line":266,"column":37,"offset":9772},"end":{"line":266,"column":42,"offset":9777},"indent":[]}},{"type":"text","value":" is reached, the first entry of the whole array is shifted off—resulting in all remaining entries moving up one position. Because element ","position":{"start":{"line":266,"column":42,"offset":9777},"end":{"line":266,"column":180,"offset":9915},"indent":[]}},{"type":"inlineCode","value":"four","position":{"start":{"line":266,"column":180,"offset":9915},"end":{"line":266,"column":186,"offset":9921},"indent":[]}},{"type":"text","value":" is now at an earlier position in the array, ","position":{"start":{"line":266,"column":186,"offset":9921},"end":{"line":266,"column":231,"offset":9966},"indent":[]}},{"type":"inlineCode","value":"three","position":{"start":{"line":266,"column":231,"offset":9966},"end":{"line":266,"column":238,"offset":9973},"indent":[]}},{"type":"text","value":" will be skipped.","position":{"start":{"line":266,"column":238,"offset":9973},"end":{"line":266,"column":255,"offset":9990},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":9736},"end":{"line":266,"column":255,"offset":9990},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":268,"column":1,"offset":9992},"end":{"line":268,"column":12,"offset":10003},"indent":[]}},{"type":"text","value":" does not make a copy of the array before iterating.","position":{"start":{"line":268,"column":12,"offset":10003},"end":{"line":268,"column":64,"offset":10055},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":9992},"end":{"line":268,"column":64,"offset":10055},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let words = ['one', 'two', 'three', 'four']\nwords.forEach(function(word) {\n  console.log(word)\n  if (word === 'two') {\n    words.shift() //'one' will delete from array\n  }\n}) // one // two // four\n\nconsole.log(words);  //['two', 'three', 'four']","position":{"start":{"line":270,"column":1,"offset":10057},"end":{"line":278,"column":52,"offset":10334},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Flatten an array","position":{"start":{"line":280,"column":5,"offset":10340},"end":{"line":280,"column":21,"offset":10356},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":10336},"end":{"line":280,"column":21,"offset":10356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example is only here for learning purpose. If you want to flatten an array using built-in methods you can use ","position":{"start":{"line":282,"column":1,"offset":10358},"end":{"line":282,"column":125,"offset":10482},"indent":[]}},{"type":"link","title":null,"url":"flat","children":[{"type":"inlineCode","value":"Array.prototype.flat()","position":{"start":{"line":282,"column":126,"offset":10483},"end":{"line":282,"column":150,"offset":10507},"indent":[]}}],"position":{"start":{"line":282,"column":125,"offset":10482},"end":{"line":282,"column":157,"offset":10514},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":282,"column":157,"offset":10514},"end":{"line":282,"column":158,"offset":10515},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":10358},"end":{"line":282,"column":158,"offset":10515},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function flatten(arr) {\n  const result = []\n\n  arr.forEach(function(i) {\n    if (Array.isArray(i)) {\n      result.push(...flatten(i))\n    } else {\n      result.push(i)\n    }\n  })\n\n  return result\n}\n\n// Usage\nconst nested = [1, 2, 3, [4, 5, [6, 7], 8, 9]]\n\nflatten(nested) // [1, 2, 3, 4, 5, 6, 7, 8, 9]","position":{"start":{"line":284,"column":1,"offset":10517},"end":{"line":301,"column":51,"offset":10875},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":302,"column":1,"offset":10876}}}}