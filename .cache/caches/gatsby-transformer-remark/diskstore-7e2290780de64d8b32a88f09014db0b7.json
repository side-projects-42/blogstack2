{"expireTime":9007200914465207000,"key":"transformer-remark-markdown-ast-a2571338c8302300966afc7e4efc77c6--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":4,"column":4,"offset":16},"end":{"line":4,"column":32,"offset":44},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":32,"offset":44},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":6,"column":2,"offset":47},"end":{"line":6,"column":18,"offset":63},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":8,"column":2,"offset":125},"end":{"line":8,"column":142,"offset":265},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":10,"column":4,"offset":355},"end":{"line":10,"column":6,"offset":357},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":10,"column":7,"offset":358},"end":{"line":10,"column":33,"offset":384},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":357},"end":{"line":10,"column":100,"offset":451},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":352},"end":{"line":10,"column":100,"offset":451},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":12,"column":5,"offset":457},"end":{"line":12,"column":12,"offset":464},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":12,"column":12,"offset":464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":16,"offset":481},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":18,"offset":483},"end":{"line":14,"column":19,"offset":484},"indent":[]}}],"position":{"start":{"line":14,"column":16,"offset":481},"end":{"line":14,"column":21,"offset":486},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":14,"column":21,"offset":486},"end":{"line":14,"column":35,"offset":500},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":37,"offset":502},"end":{"line":14,"column":38,"offset":503},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":500},"end":{"line":14,"column":40,"offset":505},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":14,"column":40,"offset":505},"end":{"line":14,"column":87,"offset":552},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":89,"offset":554},"end":{"line":14,"column":90,"offset":555},"indent":[]}}],"position":{"start":{"line":14,"column":87,"offset":552},"end":{"line":14,"column":92,"offset":557},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":14,"column":92,"offset":557},"end":{"line":14,"column":106,"offset":571},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":108,"offset":573},"end":{"line":14,"column":109,"offset":574},"indent":[]}}],"position":{"start":{"line":14,"column":106,"offset":571},"end":{"line":14,"column":111,"offset":576},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":111,"offset":576},"end":{"line":14,"column":112,"offset":577},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":112,"offset":577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":16,"column":1,"offset":579},"end":{"line":16,"column":209,"offset":787},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":16,"column":209,"offset":787},"end":{"line":16,"column":216,"offset":794},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":16,"column":216,"offset":794},"end":{"line":16,"column":237,"offset":815},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":16,"column":237,"offset":815},"end":{"line":16,"column":246,"offset":824},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":16,"column":246,"offset":824},"end":{"line":16,"column":253,"offset":831},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":16,"column":253,"offset":831},"end":{"line":16,"column":260,"offset":838},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":16,"column":260,"offset":838},"end":{"line":16,"column":269,"offset":847},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":579},"end":{"line":16,"column":269,"offset":847},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":18,"column":3,"offset":851},"end":{"line":18,"column":13,"offset":861},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":849},"end":{"line":18,"column":15,"offset":863},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":849},"end":{"line":18,"column":15,"offset":863},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":20,"column":1,"offset":865},"end":{"line":32,"column":12,"offset":1129},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1133},"end":{"line":34,"column":13,"offset":1143},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1131},"end":{"line":34,"column":15,"offset":1145},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1131},"end":{"line":34,"column":15,"offset":1145},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1147},"end":{"line":52,"column":12,"offset":1450},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":54,"column":5,"offset":1456},"end":{"line":54,"column":13,"offset":1464},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1452},"end":{"line":54,"column":13,"offset":1464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":56,"column":1,"offset":1466},"end":{"line":56,"column":8,"offset":1473},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":56,"column":8,"offset":1473},"end":{"line":56,"column":17,"offset":1482},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":56,"column":17,"offset":1482},"end":{"line":56,"column":57,"offset":1522},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":56,"column":57,"offset":1522},"end":{"line":56,"column":67,"offset":1532},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":56,"column":67,"offset":1532},"end":{"line":56,"column":73,"offset":1538},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":56,"column":73,"offset":1538},"end":{"line":56,"column":83,"offset":1548},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":83,"offset":1548},"end":{"line":56,"column":84,"offset":1549},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1466},"end":{"line":56,"column":84,"offset":1549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":58,"column":1,"offset":1551},"end":{"line":58,"column":5,"offset":1555},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":5,"offset":1555},"end":{"line":58,"column":14,"offset":1564},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":58,"column":14,"offset":1564},"end":{"line":58,"column":35,"offset":1585},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":58,"column":35,"offset":1585},"end":{"line":58,"column":43,"offset":1593},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":58,"column":43,"offset":1593},"end":{"line":58,"column":71,"offset":1621},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":58,"column":71,"offset":1621},"end":{"line":58,"column":90,"offset":1640},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":90,"offset":1640},"end":{"line":58,"column":91,"offset":1641},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1551},"end":{"line":58,"column":91,"offset":1641},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nf(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":60,"column":1,"offset":1643},"end":{"line":65,"column":4,"offset":1781},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":67,"column":1,"offset":1783},"end":{"line":67,"column":27,"offset":1809},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1783},"end":{"line":67,"column":27,"offset":1809},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":69,"column":1,"offset":1811},"end":{"line":90,"column":4,"offset":2253},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":92,"column":1,"offset":2255},"end":{"line":92,"column":4,"offset":2258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":94,"column":1,"offset":2260},"end":{"line":96,"column":9,"offset":2303},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":96,"column":10,"offset":2304},"end":{"line":96,"column":39,"offset":2333},"indent":[]}}],"position":{"start":{"line":96,"column":9,"offset":2303},"end":{"line":96,"column":40,"offset":2334},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":96,"column":40,"offset":2334},"end":{"line":97,"column":23,"offset":2357},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":97,"column":24,"offset":2358},"end":{"line":97,"column":67,"offset":2401},"indent":[]}}],"position":{"start":{"line":97,"column":23,"offset":2357},"end":{"line":97,"column":68,"offset":2402},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":97,"column":68,"offset":2402},"end":{"line":99,"column":51,"offset":2472},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":99,"column":52,"offset":2473},"end":{"line":99,"column":128,"offset":2549},"indent":[]}}],"position":{"start":{"line":99,"column":51,"offset":2472},"end":{"line":99,"column":129,"offset":2550},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":99,"column":129,"offset":2550},"end":{"line":100,"column":32,"offset":2582},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":100,"column":33,"offset":2583},"end":{"line":100,"column":90,"offset":2640},"indent":[]}}],"position":{"start":{"line":100,"column":32,"offset":2582},"end":{"line":100,"column":91,"offset":2641},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2260},"end":{"line":100,"column":91,"offset":2641},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":102,"column":1,"offset":2643},"end":{"line":102,"column":4,"offset":2646},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":104,"column":2,"offset":2649},"end":{"line":104,"column":142,"offset":2789},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2648},"end":{"line":104,"column":271,"offset":2918},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2648},"end":{"line":104,"column":271,"offset":2918},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":106,"column":4,"offset":2923},"end":{"line":106,"column":6,"offset":2925},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":106,"column":7,"offset":2926},"end":{"line":106,"column":55,"offset":2974},"indent":[]}}],"position":{"start":{"line":106,"column":6,"offset":2925},"end":{"line":106,"column":144,"offset":3063},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2920},"end":{"line":106,"column":144,"offset":3063},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":108,"column":5,"offset":3069},"end":{"line":108,"column":12,"offset":3076},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3065},"end":{"line":108,"column":12,"offset":3076},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":110,"column":1,"offset":3078},"end":{"line":110,"column":20,"offset":3097},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3078},"end":{"line":110,"column":20,"offset":3097},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":112,"column":1,"offset":3099},"end":{"line":119,"column":4,"offset":3198},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":121,"column":1,"offset":3200},"end":{"line":121,"column":127,"offset":3326},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":127,"offset":3326},"end":{"line":121,"column":133,"offset":3332},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":133,"offset":3332},"end":{"line":121,"column":134,"offset":3333},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3200},"end":{"line":121,"column":134,"offset":3333},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":123,"column":1,"offset":3335},"end":{"line":123,"column":41,"offset":3375},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":123,"column":41,"offset":3375},"end":{"line":123,"column":47,"offset":3381},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":123,"column":47,"offset":3381},"end":{"line":123,"column":48,"offset":3382},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3335},"end":{"line":123,"column":48,"offset":3382},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":125,"column":3,"offset":3386},"end":{"line":125,"column":8,"offset":3391},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3384},"end":{"line":125,"column":10,"offset":3393},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3384},"end":{"line":125,"column":10,"offset":3393},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":127,"column":3,"offset":3397},"end":{"line":127,"column":41,"offset":3435},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":3397},"end":{"line":127,"column":41,"offset":3435},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3395},"end":{"line":127,"column":41,"offset":3435},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":128,"column":3,"offset":3438},"end":{"line":128,"column":99,"offset":3534},"indent":[]}}],"position":{"start":{"line":128,"column":3,"offset":3438},"end":{"line":128,"column":99,"offset":3534},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3436},"end":{"line":128,"column":99,"offset":3534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":129,"column":3,"offset":3537},"end":{"line":129,"column":125,"offset":3659},"indent":[]}}],"position":{"start":{"line":129,"column":3,"offset":3537},"end":{"line":129,"column":125,"offset":3659},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3535},"end":{"line":129,"column":125,"offset":3659},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3395},"end":{"line":129,"column":125,"offset":3659},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":131,"column":3,"offset":3663},"end":{"line":131,"column":11,"offset":3671},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3661},"end":{"line":131,"column":13,"offset":3673},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3661},"end":{"line":131,"column":13,"offset":3673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":133,"column":1,"offset":3675},"end":{"line":133,"column":41,"offset":3715},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3675},"end":{"line":133,"column":41,"offset":3715},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":135,"column":1,"offset":3717},"end":{"line":142,"column":4,"offset":3770},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":144,"column":1,"offset":3772},"end":{"line":144,"column":56,"offset":3827},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3772},"end":{"line":144,"column":56,"offset":3827},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":146,"column":1,"offset":3829},"end":{"line":153,"column":4,"offset":3906},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":155,"column":5,"offset":3912},"end":{"line":155,"column":13,"offset":3920},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3908},"end":{"line":155,"column":13,"offset":3920},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":157,"column":6,"offset":3927},"end":{"line":157,"column":9,"offset":3930},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3922},"end":{"line":157,"column":9,"offset":3930},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":159,"column":1,"offset":3932},"end":{"line":159,"column":11,"offset":3942},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3932},"end":{"line":159,"column":11,"offset":3942},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":161,"column":1,"offset":3944},"end":{"line":161,"column":11,"offset":3954},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":161,"column":11,"offset":3954},"end":{"line":161,"column":17,"offset":3960},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":161,"column":17,"offset":3960},"end":{"line":161,"column":18,"offset":3961},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3944},"end":{"line":161,"column":18,"offset":3961},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":163,"column":3,"offset":3965},"end":{"line":163,"column":25,"offset":3987},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":163,"column":25,"offset":3987},"end":{"line":163,"column":37,"offset":3999},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":163,"column":37,"offset":3999},"end":{"line":163,"column":38,"offset":4000},"indent":[]}}],"position":{"start":{"line":163,"column":3,"offset":3965},"end":{"line":163,"column":38,"offset":4000},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3963},"end":{"line":163,"column":38,"offset":4000},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":164,"column":3,"offset":4003},"end":{"line":164,"column":26,"offset":4026},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":164,"column":26,"offset":4026},"end":{"line":164,"column":42,"offset":4042},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":164,"column":42,"offset":4042},"end":{"line":164,"column":46,"offset":4046},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":164,"column":46,"offset":4046},"end":{"line":164,"column":57,"offset":4057},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":164,"column":57,"offset":4057},"end":{"line":164,"column":65,"offset":4065},"indent":[]}}],"position":{"start":{"line":164,"column":3,"offset":4003},"end":{"line":164,"column":65,"offset":4065},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4001},"end":{"line":164,"column":65,"offset":4065},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3963},"end":{"line":164,"column":65,"offset":4065},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":166,"column":1,"offset":4067},"end":{"line":195,"column":4,"offset":4688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":197,"column":6,"offset":4695},"end":{"line":197,"column":9,"offset":4698},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":4690},"end":{"line":197,"column":9,"offset":4698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":199,"column":1,"offset":4700},"end":{"line":199,"column":23,"offset":4722},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":4700},"end":{"line":199,"column":23,"offset":4722},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":201,"column":1,"offset":4724},"end":{"line":238,"column":4,"offset":5583},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":240,"column":1,"offset":5585},"end":{"line":240,"column":4,"offset":5588},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":242,"column":1,"offset":5590},"end":{"line":244,"column":9,"offset":5633},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":244,"column":10,"offset":5634},"end":{"line":244,"column":39,"offset":5663},"indent":[]}}],"position":{"start":{"line":244,"column":9,"offset":5633},"end":{"line":244,"column":40,"offset":5664},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":244,"column":40,"offset":5664},"end":{"line":245,"column":23,"offset":5687},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":245,"column":24,"offset":5688},"end":{"line":245,"column":67,"offset":5731},"indent":[]}}],"position":{"start":{"line":245,"column":23,"offset":5687},"end":{"line":245,"column":68,"offset":5732},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":245,"column":68,"offset":5732},"end":{"line":247,"column":48,"offset":5799},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":247,"column":49,"offset":5800},"end":{"line":247,"column":122,"offset":5873},"indent":[]}}],"position":{"start":{"line":247,"column":48,"offset":5799},"end":{"line":247,"column":123,"offset":5874},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":5590},"end":{"line":247,"column":123,"offset":5874},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":249,"column":1,"offset":5876},"end":{"line":249,"column":4,"offset":5879},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":251,"column":2,"offset":5882},"end":{"line":251,"column":142,"offset":6022},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":5881},"end":{"line":251,"column":277,"offset":6157},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":5881},"end":{"line":251,"column":277,"offset":6157},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":253,"column":4,"offset":6162},"end":{"line":253,"column":6,"offset":6164},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":253,"column":7,"offset":6165},"end":{"line":253,"column":58,"offset":6216},"indent":[]}}],"position":{"start":{"line":253,"column":6,"offset":6164},"end":{"line":253,"column":150,"offset":6308},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6159},"end":{"line":253,"column":150,"offset":6308},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":255,"column":5,"offset":6314},"end":{"line":255,"column":12,"offset":6321},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":6310},"end":{"line":255,"column":12,"offset":6321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":257,"column":1,"offset":6323},"end":{"line":257,"column":20,"offset":6342},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":6323},"end":{"line":257,"column":20,"offset":6342},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":259,"column":1,"offset":6344},"end":{"line":266,"column":4,"offset":6443},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":268,"column":1,"offset":6445},"end":{"line":268,"column":127,"offset":6571},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":268,"column":127,"offset":6571},"end":{"line":268,"column":133,"offset":6577},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":268,"column":133,"offset":6577},"end":{"line":268,"column":134,"offset":6578},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6445},"end":{"line":268,"column":134,"offset":6578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":270,"column":1,"offset":6580},"end":{"line":270,"column":41,"offset":6620},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":270,"column":41,"offset":6620},"end":{"line":270,"column":47,"offset":6626},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":270,"column":47,"offset":6626},"end":{"line":270,"column":48,"offset":6627},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6580},"end":{"line":270,"column":48,"offset":6627},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":272,"column":3,"offset":6631},"end":{"line":272,"column":8,"offset":6636},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6629},"end":{"line":272,"column":10,"offset":6638},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6629},"end":{"line":272,"column":10,"offset":6638},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":274,"column":3,"offset":6642},"end":{"line":274,"column":41,"offset":6680},"indent":[]}}],"position":{"start":{"line":274,"column":3,"offset":6642},"end":{"line":274,"column":41,"offset":6680},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":6640},"end":{"line":274,"column":41,"offset":6680},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":275,"column":3,"offset":6683},"end":{"line":275,"column":99,"offset":6779},"indent":[]}}],"position":{"start":{"line":275,"column":3,"offset":6683},"end":{"line":275,"column":99,"offset":6779},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6681},"end":{"line":275,"column":99,"offset":6779},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":6640},"end":{"line":275,"column":99,"offset":6779},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":277,"column":3,"offset":6783},"end":{"line":277,"column":11,"offset":6791},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":6781},"end":{"line":277,"column":13,"offset":6793},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":6781},"end":{"line":277,"column":13,"offset":6793},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":279,"column":1,"offset":6795},"end":{"line":279,"column":33,"offset":6827},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":6795},"end":{"line":279,"column":33,"offset":6827},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":281,"column":1,"offset":6829},"end":{"line":288,"column":4,"offset":6882},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":290,"column":1,"offset":6884},"end":{"line":290,"column":56,"offset":6939},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":6884},"end":{"line":290,"column":56,"offset":6939},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":292,"column":1,"offset":6941},"end":{"line":299,"column":4,"offset":7018},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":301,"column":5,"offset":7024},"end":{"line":301,"column":13,"offset":7032},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7020},"end":{"line":301,"column":13,"offset":7032},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":303,"column":6,"offset":7039},"end":{"line":303,"column":9,"offset":7042},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7034},"end":{"line":303,"column":9,"offset":7042},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":305,"column":1,"offset":7044},"end":{"line":305,"column":16,"offset":7059},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":305,"column":17,"offset":7060},"end":{"line":305,"column":65,"offset":7108},"indent":[]}}],"position":{"start":{"line":305,"column":16,"offset":7059},"end":{"line":305,"column":135,"offset":7178},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":305,"column":135,"offset":7178},"end":{"line":305,"column":136,"offset":7179},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7044},"end":{"line":305,"column":136,"offset":7179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":307,"column":1,"offset":7181},"end":{"line":307,"column":50,"offset":7230},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":307,"column":50,"offset":7230},"end":{"line":307,"column":56,"offset":7236},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":307,"column":56,"offset":7236},"end":{"line":307,"column":97,"offset":7277},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":307,"column":97,"offset":7277},"end":{"line":307,"column":103,"offset":7283},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":307,"column":103,"offset":7283},"end":{"line":307,"column":104,"offset":7284},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":7181},"end":{"line":307,"column":104,"offset":7284},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":309,"column":1,"offset":7286},"end":{"line":309,"column":50,"offset":7335},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":7286},"end":{"line":309,"column":50,"offset":7335},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":311,"column":1,"offset":7337},"end":{"line":349,"column":4,"offset":8181},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":351,"column":6,"offset":8188},"end":{"line":351,"column":9,"offset":8191},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":8183},"end":{"line":351,"column":9,"offset":8191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":353,"column":1,"offset":8193},"end":{"line":353,"column":38,"offset":8230},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":353,"column":39,"offset":8231},"end":{"line":353,"column":87,"offset":8279},"indent":[]}}],"position":{"start":{"line":353,"column":38,"offset":8230},"end":{"line":353,"column":157,"offset":8349},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":353,"column":157,"offset":8349},"end":{"line":353,"column":158,"offset":8350},"indent":[]}}],"position":{"start":{"line":353,"column":1,"offset":8193},"end":{"line":353,"column":158,"offset":8350},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":355,"column":1,"offset":8352},"end":{"line":392,"column":4,"offset":9211},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":394,"column":1,"offset":9213},"end":{"line":394,"column":4,"offset":9216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":396,"column":1,"offset":9218},"end":{"line":398,"column":10,"offset":9260},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":398,"column":11,"offset":9261},"end":{"line":398,"column":41,"offset":9291},"indent":[]}}],"position":{"start":{"line":398,"column":10,"offset":9260},"end":{"line":398,"column":42,"offset":9292},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":398,"column":42,"offset":9292},"end":{"line":400,"column":25,"offset":9336},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":400,"column":26,"offset":9337},"end":{"line":400,"column":75,"offset":9386},"indent":[]}}],"position":{"start":{"line":400,"column":25,"offset":9336},"end":{"line":400,"column":76,"offset":9387},"indent":[]}}],"position":{"start":{"line":396,"column":1,"offset":9218},"end":{"line":400,"column":76,"offset":9387},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":402,"column":1,"offset":9389},"end":{"line":402,"column":4,"offset":9392},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":404,"column":2,"offset":9395},"end":{"line":404,"column":142,"offset":9535},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":9394},"end":{"line":404,"column":217,"offset":9610},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":9394},"end":{"line":404,"column":217,"offset":9610},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":406,"column":4,"offset":9615},"end":{"line":406,"column":6,"offset":9617},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":406,"column":7,"offset":9618},"end":{"line":406,"column":29,"offset":9640},"indent":[]}}],"position":{"start":{"line":406,"column":6,"offset":9617},"end":{"line":406,"column":91,"offset":9702},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":9612},"end":{"line":406,"column":91,"offset":9702},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":408,"column":5,"offset":9708},"end":{"line":408,"column":12,"offset":9715},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":9704},"end":{"line":408,"column":12,"offset":9715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":410,"column":1,"offset":9717},"end":{"line":410,"column":30,"offset":9746},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":410,"column":31,"offset":9747},"end":{"line":410,"column":38,"offset":9754},"indent":[]}}],"position":{"start":{"line":410,"column":30,"offset":9746},"end":{"line":410,"column":39,"offset":9755},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":410,"column":39,"offset":9755},"end":{"line":410,"column":60,"offset":9776},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":410,"column":61,"offset":9777},"end":{"line":410,"column":68,"offset":9784},"indent":[]}}],"position":{"start":{"line":410,"column":60,"offset":9776},"end":{"line":410,"column":69,"offset":9785},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":410,"column":69,"offset":9785},"end":{"line":410,"column":91,"offset":9807},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":9717},"end":{"line":410,"column":91,"offset":9807},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":412,"column":1,"offset":9809},"end":{"line":412,"column":112,"offset":9920},"indent":[]}}],"position":{"start":{"line":412,"column":1,"offset":9809},"end":{"line":412,"column":112,"offset":9920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":414,"column":1,"offset":9922},"end":{"line":414,"column":83,"offset":10004},"indent":[]}}],"position":{"start":{"line":414,"column":1,"offset":9922},"end":{"line":414,"column":83,"offset":10004},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":416,"column":3,"offset":10008},"end":{"line":416,"column":11,"offset":10016},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":10006},"end":{"line":416,"column":13,"offset":10018},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":10006},"end":{"line":416,"column":13,"offset":10018},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":418,"column":1,"offset":10020},"end":{"line":429,"column":4,"offset":10108},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":431,"column":5,"offset":10114},"end":{"line":431,"column":13,"offset":10122},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":10110},"end":{"line":431,"column":13,"offset":10122},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":433,"column":1,"offset":10124},"end":{"line":433,"column":25,"offset":10148},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":10124},"end":{"line":433,"column":25,"offset":10148},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":435,"column":1,"offset":10150},"end":{"line":459,"column":4,"offset":10611},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":461,"column":1,"offset":10613},"end":{"line":461,"column":4,"offset":10616},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":463,"column":1,"offset":10618},"end":{"line":465,"column":10,"offset":10660},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":465,"column":11,"offset":10661},"end":{"line":465,"column":41,"offset":10691},"indent":[]}}],"position":{"start":{"line":465,"column":10,"offset":10660},"end":{"line":465,"column":42,"offset":10692},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":465,"column":42,"offset":10692},"end":{"line":467,"column":22,"offset":10733},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":467,"column":23,"offset":10734},"end":{"line":467,"column":69,"offset":10780},"indent":[]}}],"position":{"start":{"line":467,"column":22,"offset":10733},"end":{"line":467,"column":70,"offset":10781},"indent":[]}}],"position":{"start":{"line":463,"column":1,"offset":10618},"end":{"line":467,"column":70,"offset":10781},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":469,"column":1,"offset":10783},"end":{"line":469,"column":4,"offset":10786},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":471,"column":2,"offset":10789},"end":{"line":471,"column":142,"offset":10929},"indent":[]}}],"position":{"start":{"line":471,"column":1,"offset":10788},"end":{"line":471,"column":223,"offset":11010},"indent":[]}}],"position":{"start":{"line":471,"column":1,"offset":10788},"end":{"line":471,"column":223,"offset":11010},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":473,"column":4,"offset":11015},"end":{"line":473,"column":6,"offset":11017},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":473,"column":7,"offset":11018},"end":{"line":473,"column":32,"offset":11043},"indent":[]}}],"position":{"start":{"line":473,"column":6,"offset":11017},"end":{"line":473,"column":97,"offset":11108},"indent":[]}}],"position":{"start":{"line":473,"column":1,"offset":11012},"end":{"line":473,"column":97,"offset":11108},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":475,"column":5,"offset":11114},"end":{"line":475,"column":12,"offset":11121},"indent":[]}}],"position":{"start":{"line":475,"column":1,"offset":11110},"end":{"line":475,"column":12,"offset":11121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":477,"column":1,"offset":11123},"end":{"line":477,"column":28,"offset":11150},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":477,"column":29,"offset":11151},"end":{"line":477,"column":30,"offset":11152},"indent":[]}}],"position":{"start":{"line":477,"column":28,"offset":11150},"end":{"line":477,"column":31,"offset":11153},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":477,"column":31,"offset":11153},"end":{"line":477,"column":38,"offset":11160},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":477,"column":39,"offset":11161},"end":{"line":477,"column":40,"offset":11162},"indent":[]}}],"position":{"start":{"line":477,"column":38,"offset":11160},"end":{"line":477,"column":41,"offset":11163},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":477,"column":41,"offset":11163},"end":{"line":477,"column":59,"offset":11181},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":477,"column":60,"offset":11182},"end":{"line":477,"column":61,"offset":11183},"indent":[]}}],"position":{"start":{"line":477,"column":59,"offset":11181},"end":{"line":477,"column":62,"offset":11184},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":477,"column":62,"offset":11184},"end":{"line":477,"column":100,"offset":11222},"indent":[]}}],"position":{"start":{"line":477,"column":1,"offset":11123},"end":{"line":477,"column":100,"offset":11222},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":479,"column":1,"offset":11224},"end":{"line":479,"column":39,"offset":11262},"indent":[]}}],"position":{"start":{"line":479,"column":1,"offset":11224},"end":{"line":479,"column":39,"offset":11262},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":481,"column":1,"offset":11264},"end":{"line":481,"column":112,"offset":11375},"indent":[]}}],"position":{"start":{"line":481,"column":1,"offset":11264},"end":{"line":481,"column":112,"offset":11375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":483,"column":1,"offset":11377},"end":{"line":483,"column":83,"offset":11459},"indent":[]}}],"position":{"start":{"line":483,"column":1,"offset":11377},"end":{"line":483,"column":83,"offset":11459},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":485,"column":3,"offset":11463},"end":{"line":485,"column":11,"offset":11471},"indent":[]}}],"position":{"start":{"line":485,"column":1,"offset":11461},"end":{"line":485,"column":13,"offset":11473},"indent":[]}}],"position":{"start":{"line":485,"column":1,"offset":11461},"end":{"line":485,"column":13,"offset":11473},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":487,"column":1,"offset":11475},"end":{"line":491,"column":4,"offset":11510},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":493,"column":3,"offset":11514},"end":{"line":493,"column":13,"offset":11524},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":11512},"end":{"line":493,"column":15,"offset":11526},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":11512},"end":{"line":493,"column":15,"offset":11526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":495,"column":1,"offset":11528},"end":{"line":495,"column":47,"offset":11574},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":495,"column":48,"offset":11575},"end":{"line":495,"column":49,"offset":11576},"indent":[]}}],"position":{"start":{"line":495,"column":47,"offset":11574},"end":{"line":495,"column":50,"offset":11577},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":495,"column":50,"offset":11577},"end":{"line":495,"column":51,"offset":11578},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":495,"column":52,"offset":11579},"end":{"line":495,"column":53,"offset":11580},"indent":[]}}],"position":{"start":{"line":495,"column":51,"offset":11578},"end":{"line":495,"column":54,"offset":11581},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":495,"column":54,"offset":11581},"end":{"line":495,"column":68,"offset":11595},"indent":[]}}],"position":{"start":{"line":495,"column":1,"offset":11528},"end":{"line":495,"column":68,"offset":11595},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":497,"column":5,"offset":11601},"end":{"line":497,"column":13,"offset":11609},"indent":[]}}],"position":{"start":{"line":497,"column":1,"offset":11597},"end":{"line":497,"column":13,"offset":11609},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":499,"column":1,"offset":11611},"end":{"line":499,"column":44,"offset":11654},"indent":[]}}],"position":{"start":{"line":499,"column":1,"offset":11611},"end":{"line":499,"column":44,"offset":11654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":501,"column":1,"offset":11656},"end":{"line":501,"column":7,"offset":11662},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":501,"column":7,"offset":11662},"end":{"line":501,"column":15,"offset":11670},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":501,"column":15,"offset":11670},"end":{"line":501,"column":27,"offset":11682},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":501,"column":27,"offset":11682},"end":{"line":501,"column":37,"offset":11692},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":501,"column":37,"offset":11692},"end":{"line":501,"column":42,"offset":11697},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":501,"column":42,"offset":11697},"end":{"line":501,"column":54,"offset":11709},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":501,"column":54,"offset":11709},"end":{"line":501,"column":69,"offset":11724},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":501,"column":69,"offset":11724},"end":{"line":501,"column":81,"offset":11736},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":501,"column":81,"offset":11736},"end":{"line":501,"column":119,"offset":11774},"indent":[]}}],"position":{"start":{"line":501,"column":1,"offset":11656},"end":{"line":501,"column":119,"offset":11774},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":503,"column":1,"offset":11776},"end":{"line":524,"column":4,"offset":12127},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":526,"column":1,"offset":12129},"end":{"line":526,"column":4,"offset":12132},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":528,"column":1,"offset":12134},"end":{"line":530,"column":10,"offset":12178},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":530,"column":11,"offset":12179},"end":{"line":530,"column":41,"offset":12209},"indent":[]}}],"position":{"start":{"line":530,"column":10,"offset":12178},"end":{"line":530,"column":42,"offset":12210},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":530,"column":42,"offset":12210},"end":{"line":531,"column":24,"offset":12234},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":531,"column":25,"offset":12235},"end":{"line":531,"column":69,"offset":12279},"indent":[]}}],"position":{"start":{"line":531,"column":24,"offset":12234},"end":{"line":531,"column":70,"offset":12280},"indent":[]}}],"position":{"start":{"line":528,"column":1,"offset":12134},"end":{"line":531,"column":70,"offset":12280},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":533,"column":1,"offset":12282},"end":{"line":533,"column":4,"offset":12285},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":535,"column":2,"offset":12288},"end":{"line":535,"column":142,"offset":12428},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":12287},"end":{"line":535,"column":201,"offset":12487},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":12287},"end":{"line":535,"column":201,"offset":12487},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":537,"column":4,"offset":12492},"end":{"line":537,"column":6,"offset":12494},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":537,"column":7,"offset":12495},"end":{"line":537,"column":20,"offset":12508},"indent":[]}}],"position":{"start":{"line":537,"column":6,"offset":12494},"end":{"line":537,"column":74,"offset":12562},"indent":[]}}],"position":{"start":{"line":537,"column":1,"offset":12489},"end":{"line":537,"column":74,"offset":12562},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":539,"column":5,"offset":12568},"end":{"line":539,"column":12,"offset":12575},"indent":[]}}],"position":{"start":{"line":539,"column":1,"offset":12564},"end":{"line":539,"column":12,"offset":12575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":541,"column":1,"offset":12577},"end":{"line":541,"column":125,"offset":12701},"indent":[]}}],"position":{"start":{"line":541,"column":1,"offset":12577},"end":{"line":541,"column":125,"offset":12701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":543,"column":1,"offset":12703},"end":{"line":543,"column":42,"offset":12744},"indent":[]}}],"position":{"start":{"line":543,"column":1,"offset":12703},"end":{"line":543,"column":42,"offset":12744},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":545,"column":1,"offset":12746},"end":{"line":553,"column":4,"offset":12803},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":555,"column":1,"offset":12805},"end":{"line":555,"column":44,"offset":12848},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":555,"column":44,"offset":12848},"end":{"line":555,"column":48,"offset":12852},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":555,"column":48,"offset":12852},"end":{"line":555,"column":56,"offset":12860},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":555,"column":58,"offset":12862},"end":{"line":555,"column":59,"offset":12863},"indent":[]}}],"position":{"start":{"line":555,"column":56,"offset":12860},"end":{"line":555,"column":61,"offset":12865},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":555,"column":61,"offset":12865},"end":{"line":555,"column":64,"offset":12868},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":555,"column":66,"offset":12870},"end":{"line":555,"column":67,"offset":12871},"indent":[]}}],"position":{"start":{"line":555,"column":64,"offset":12868},"end":{"line":555,"column":69,"offset":12873},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":555,"column":69,"offset":12873},"end":{"line":555,"column":72,"offset":12876},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":555,"column":74,"offset":12878},"end":{"line":555,"column":75,"offset":12879},"indent":[]}}],"position":{"start":{"line":555,"column":72,"offset":12876},"end":{"line":555,"column":77,"offset":12881},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":555,"column":77,"offset":12881},"end":{"line":555,"column":80,"offset":12884},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":555,"column":82,"offset":12886},"end":{"line":555,"column":83,"offset":12887},"indent":[]}}],"position":{"start":{"line":555,"column":80,"offset":12884},"end":{"line":555,"column":85,"offset":12889},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":555,"column":85,"offset":12889},"end":{"line":555,"column":92,"offset":12896},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":12805},"end":{"line":555,"column":92,"offset":12896},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":557,"column":3,"offset":12900},"end":{"line":557,"column":8,"offset":12905},"indent":[]}}],"position":{"start":{"line":557,"column":1,"offset":12898},"end":{"line":557,"column":10,"offset":12907},"indent":[]}}],"position":{"start":{"line":557,"column":1,"offset":12898},"end":{"line":557,"column":10,"offset":12907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":559,"column":1,"offset":12909},"end":{"line":559,"column":51,"offset":12959},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":559,"column":52,"offset":12960},"end":{"line":559,"column":53,"offset":12961},"indent":[]}}],"position":{"start":{"line":559,"column":51,"offset":12959},"end":{"line":559,"column":54,"offset":12962},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":559,"column":54,"offset":12962},"end":{"line":559,"column":55,"offset":12963},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":559,"column":56,"offset":12964},"end":{"line":559,"column":57,"offset":12965},"indent":[]}}],"position":{"start":{"line":559,"column":55,"offset":12963},"end":{"line":559,"column":58,"offset":12966},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":559,"column":58,"offset":12966},"end":{"line":559,"column":79,"offset":12987},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":559,"column":80,"offset":12988},"end":{"line":559,"column":81,"offset":12989},"indent":[]}}],"position":{"start":{"line":559,"column":79,"offset":12987},"end":{"line":559,"column":82,"offset":12990},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":559,"column":82,"offset":12990},"end":{"line":559,"column":127,"offset":13035},"indent":[]}}],"position":{"start":{"line":559,"column":1,"offset":12909},"end":{"line":559,"column":127,"offset":13035},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":561,"column":5,"offset":13041},"end":{"line":561,"column":13,"offset":13049},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":13037},"end":{"line":561,"column":13,"offset":13049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":563,"column":1,"offset":13051},"end":{"line":563,"column":8,"offset":13058},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":563,"column":8,"offset":13058},"end":{"line":563,"column":17,"offset":13067},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":563,"column":17,"offset":13067},"end":{"line":563,"column":50,"offset":13100},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":563,"column":50,"offset":13100},"end":{"line":563,"column":66,"offset":13116},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":563,"column":66,"offset":13116},"end":{"line":563,"column":70,"offset":13120},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":563,"column":70,"offset":13120},"end":{"line":563,"column":86,"offset":13136},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":563,"column":86,"offset":13136},"end":{"line":563,"column":87,"offset":13137},"indent":[]}}],"position":{"start":{"line":563,"column":1,"offset":13051},"end":{"line":563,"column":87,"offset":13137},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":565,"column":1,"offset":13139},"end":{"line":567,"column":50,"offset":13301},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":569,"column":1,"offset":13303},"end":{"line":569,"column":27,"offset":13329},"indent":[]}}],"position":{"start":{"line":569,"column":1,"offset":13303},"end":{"line":569,"column":27,"offset":13329},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":571,"column":1,"offset":13331},"end":{"line":592,"column":4,"offset":13814},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":594,"column":1,"offset":13816},"end":{"line":594,"column":4,"offset":13819},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":596,"column":1,"offset":13821},"end":{"line":598,"column":10,"offset":13863},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":598,"column":11,"offset":13864},"end":{"line":598,"column":41,"offset":13894},"indent":[]}}],"position":{"start":{"line":598,"column":10,"offset":13863},"end":{"line":598,"column":42,"offset":13895},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":598,"column":42,"offset":13895},"end":{"line":599,"column":24,"offset":13919},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":599,"column":25,"offset":13920},"end":{"line":599,"column":69,"offset":13964},"indent":[]}}],"position":{"start":{"line":599,"column":24,"offset":13919},"end":{"line":599,"column":70,"offset":13965},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":599,"column":70,"offset":13965},"end":{"line":601,"column":21,"offset":14005},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":601,"column":22,"offset":14006},"end":{"line":601,"column":68,"offset":14052},"indent":[]}}],"position":{"start":{"line":601,"column":21,"offset":14005},"end":{"line":601,"column":69,"offset":14053},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":601,"column":69,"offset":14053},"end":{"line":602,"column":39,"offset":14092},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":602,"column":40,"offset":14093},"end":{"line":602,"column":104,"offset":14157},"indent":[]}}],"position":{"start":{"line":602,"column":39,"offset":14092},"end":{"line":602,"column":105,"offset":14158},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":602,"column":105,"offset":14158},"end":{"line":603,"column":40,"offset":14198},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":603,"column":41,"offset":14199},"end":{"line":603,"column":106,"offset":14264},"indent":[]}}],"position":{"start":{"line":603,"column":40,"offset":14198},"end":{"line":603,"column":107,"offset":14265},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":603,"column":107,"offset":14265},"end":{"line":604,"column":39,"offset":14304},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":604,"column":40,"offset":14305},"end":{"line":604,"column":104,"offset":14369},"indent":[]}}],"position":{"start":{"line":604,"column":39,"offset":14304},"end":{"line":604,"column":105,"offset":14370},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":604,"column":105,"offset":14370},"end":{"line":605,"column":50,"offset":14420},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":605,"column":51,"offset":14421},"end":{"line":605,"column":126,"offset":14496},"indent":[]}}],"position":{"start":{"line":605,"column":50,"offset":14420},"end":{"line":605,"column":127,"offset":14497},"indent":[]}}],"position":{"start":{"line":596,"column":1,"offset":13821},"end":{"line":605,"column":127,"offset":14497},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":607,"column":1,"offset":14499},"end":{"line":607,"column":4,"offset":14502},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":609,"column":2,"offset":14505},"end":{"line":609,"column":142,"offset":14645},"indent":[]}}],"position":{"start":{"line":609,"column":1,"offset":14504},"end":{"line":609,"column":247,"offset":14750},"indent":[]}}],"position":{"start":{"line":609,"column":1,"offset":14504},"end":{"line":609,"column":247,"offset":14750},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":611,"column":4,"offset":14755},"end":{"line":611,"column":6,"offset":14757},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":611,"column":7,"offset":14758},"end":{"line":611,"column":43,"offset":14794},"indent":[]}}],"position":{"start":{"line":611,"column":6,"offset":14757},"end":{"line":611,"column":120,"offset":14871},"indent":[]}}],"position":{"start":{"line":611,"column":1,"offset":14752},"end":{"line":611,"column":120,"offset":14871},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":613,"column":5,"offset":14877},"end":{"line":613,"column":12,"offset":14884},"indent":[]}}],"position":{"start":{"line":613,"column":1,"offset":14873},"end":{"line":613,"column":12,"offset":14884},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":615,"column":1,"offset":14886},"end":{"line":615,"column":37,"offset":14922},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":615,"column":38,"offset":14923},"end":{"line":615,"column":39,"offset":14924},"indent":[]}}],"position":{"start":{"line":615,"column":37,"offset":14922},"end":{"line":615,"column":40,"offset":14925},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":615,"column":40,"offset":14925},"end":{"line":615,"column":87,"offset":14972},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":615,"column":88,"offset":14973},"end":{"line":615,"column":89,"offset":14974},"indent":[]}}],"position":{"start":{"line":615,"column":87,"offset":14972},"end":{"line":615,"column":90,"offset":14975},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":615,"column":90,"offset":14975},"end":{"line":615,"column":91,"offset":14976},"indent":[]}}],"position":{"start":{"line":615,"column":1,"offset":14886},"end":{"line":615,"column":91,"offset":14976},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":617,"column":1,"offset":14978},"end":{"line":617,"column":160,"offset":15137},"indent":[]}}],"position":{"start":{"line":617,"column":1,"offset":14978},"end":{"line":617,"column":160,"offset":15137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":619,"column":1,"offset":15139},"end":{"line":619,"column":54,"offset":15192},"indent":[]}}],"position":{"start":{"line":619,"column":1,"offset":15139},"end":{"line":619,"column":54,"offset":15192},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":621,"column":3,"offset":15196},"end":{"line":621,"column":13,"offset":15206},"indent":[]}}],"position":{"start":{"line":621,"column":1,"offset":15194},"end":{"line":621,"column":15,"offset":15208},"indent":[]}}],"position":{"start":{"line":621,"column":1,"offset":15194},"end":{"line":621,"column":15,"offset":15208},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":623,"column":1,"offset":15210},"end":{"line":629,"column":4,"offset":15417},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":631,"column":3,"offset":15421},"end":{"line":631,"column":13,"offset":15431},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":15419},"end":{"line":631,"column":15,"offset":15433},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":15419},"end":{"line":631,"column":15,"offset":15433},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":633,"column":1,"offset":15435},"end":{"line":638,"column":4,"offset":15544},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":640,"column":5,"offset":15550},"end":{"line":640,"column":13,"offset":15558},"indent":[]}}],"position":{"start":{"line":640,"column":1,"offset":15546},"end":{"line":640,"column":13,"offset":15558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":642,"column":1,"offset":15560},"end":{"line":642,"column":110,"offset":15669},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":642,"column":110,"offset":15669},"end":{"line":642,"column":113,"offset":15672},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":642,"column":113,"offset":15672},"end":{"line":642,"column":126,"offset":15685},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":642,"column":126,"offset":15685},"end":{"line":642,"column":136,"offset":15695},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":642,"column":136,"offset":15695},"end":{"line":642,"column":227,"offset":15786},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":642,"column":227,"offset":15786},"end":{"line":642,"column":232,"offset":15791},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":642,"column":232,"offset":15791},"end":{"line":642,"column":250,"offset":15809},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":642,"column":250,"offset":15809},"end":{"line":642,"column":253,"offset":15812},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":642,"column":253,"offset":15812},"end":{"line":642,"column":267,"offset":15826},"indent":[]}}],"position":{"start":{"line":642,"column":1,"offset":15560},"end":{"line":642,"column":267,"offset":15826},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":644,"column":1,"offset":15828},"end":{"line":644,"column":9,"offset":15836},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":644,"column":9,"offset":15836},"end":{"line":644,"column":19,"offset":15846},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":644,"column":19,"offset":15846},"end":{"line":644,"column":50,"offset":15877},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":644,"column":50,"offset":15877},"end":{"line":644,"column":53,"offset":15880},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":644,"column":53,"offset":15880},"end":{"line":644,"column":125,"offset":15952},"indent":[]}}],"position":{"start":{"line":644,"column":1,"offset":15828},"end":{"line":644,"column":125,"offset":15952},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":646,"column":1,"offset":15954},"end":{"line":665,"column":4,"offset":16340},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":667,"column":1,"offset":16342},"end":{"line":667,"column":4,"offset":16345},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":669,"column":1,"offset":16347},"end":{"line":671,"column":10,"offset":16389},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":671,"column":11,"offset":16390},"end":{"line":671,"column":41,"offset":16420},"indent":[]}}],"position":{"start":{"line":671,"column":10,"offset":16389},"end":{"line":671,"column":42,"offset":16421},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":671,"column":42,"offset":16421},"end":{"line":672,"column":11,"offset":16432},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":672,"column":12,"offset":16433},"end":{"line":672,"column":43,"offset":16464},"indent":[]}}],"position":{"start":{"line":672,"column":11,"offset":16432},"end":{"line":672,"column":44,"offset":16465},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":672,"column":44,"offset":16465},"end":{"line":674,"column":36,"offset":16520},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":674,"column":37,"offset":16521},"end":{"line":674,"column":98,"offset":16582},"indent":[]}}],"position":{"start":{"line":674,"column":36,"offset":16520},"end":{"line":674,"column":99,"offset":16583},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":674,"column":99,"offset":16583},"end":{"line":675,"column":40,"offset":16623},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":675,"column":41,"offset":16624},"end":{"line":675,"column":106,"offset":16689},"indent":[]}}],"position":{"start":{"line":675,"column":40,"offset":16623},"end":{"line":675,"column":107,"offset":16690},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":675,"column":107,"offset":16690},"end":{"line":676,"column":39,"offset":16729},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":676,"column":40,"offset":16730},"end":{"line":676,"column":104,"offset":16794},"indent":[]}}],"position":{"start":{"line":676,"column":39,"offset":16729},"end":{"line":676,"column":105,"offset":16795},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":676,"column":105,"offset":16795},"end":{"line":677,"column":50,"offset":16845},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":677,"column":51,"offset":16846},"end":{"line":677,"column":126,"offset":16921},"indent":[]}}],"position":{"start":{"line":677,"column":50,"offset":16845},"end":{"line":677,"column":127,"offset":16922},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":677,"column":127,"offset":16922},"end":{"line":678,"column":57,"offset":16979},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":678,"column":58,"offset":16980},"end":{"line":678,"column":140,"offset":17062},"indent":[]}}],"position":{"start":{"line":678,"column":57,"offset":16979},"end":{"line":678,"column":141,"offset":17063},"indent":[]}}],"position":{"start":{"line":669,"column":1,"offset":16347},"end":{"line":678,"column":141,"offset":17063},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":680,"column":1,"offset":17065},"end":{"line":680,"column":4,"offset":17068},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":682,"column":2,"offset":17071},"end":{"line":682,"column":142,"offset":17211},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17070},"end":{"line":682,"column":253,"offset":17322},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17070},"end":{"line":682,"column":253,"offset":17322},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":684,"column":4,"offset":17327},"end":{"line":684,"column":6,"offset":17329},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":684,"column":7,"offset":17330},"end":{"line":684,"column":46,"offset":17369},"indent":[]}}],"position":{"start":{"line":684,"column":6,"offset":17329},"end":{"line":684,"column":126,"offset":17449},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":17324},"end":{"line":684,"column":126,"offset":17449},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":686,"column":5,"offset":17455},"end":{"line":686,"column":12,"offset":17462},"indent":[]}}],"position":{"start":{"line":686,"column":1,"offset":17451},"end":{"line":686,"column":12,"offset":17462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":688,"column":1,"offset":17464},"end":{"line":688,"column":37,"offset":17500},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":688,"column":38,"offset":17501},"end":{"line":688,"column":39,"offset":17502},"indent":[]}}],"position":{"start":{"line":688,"column":37,"offset":17500},"end":{"line":688,"column":40,"offset":17503},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":688,"column":40,"offset":17503},"end":{"line":688,"column":87,"offset":17550},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":688,"column":88,"offset":17551},"end":{"line":688,"column":89,"offset":17552},"indent":[]}}],"position":{"start":{"line":688,"column":87,"offset":17550},"end":{"line":688,"column":90,"offset":17553},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":688,"column":90,"offset":17553},"end":{"line":688,"column":91,"offset":17554},"indent":[]}}],"position":{"start":{"line":688,"column":1,"offset":17464},"end":{"line":688,"column":91,"offset":17554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":690,"column":1,"offset":17556},"end":{"line":690,"column":162,"offset":17717},"indent":[]}}],"position":{"start":{"line":690,"column":1,"offset":17556},"end":{"line":690,"column":162,"offset":17717},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":692,"column":3,"offset":17721},"end":{"line":692,"column":8,"offset":17726},"indent":[]}}],"position":{"start":{"line":692,"column":1,"offset":17719},"end":{"line":692,"column":10,"offset":17728},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":692,"column":10,"offset":17728},"end":{"line":692,"column":125,"offset":17843},"indent":[]}}],"position":{"start":{"line":692,"column":1,"offset":17719},"end":{"line":692,"column":125,"offset":17843},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":694,"column":3,"offset":17847},"end":{"line":694,"column":13,"offset":17857},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":17845},"end":{"line":694,"column":15,"offset":17859},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":17845},"end":{"line":694,"column":15,"offset":17859},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":696,"column":1,"offset":17861},"end":{"line":702,"column":4,"offset":18079},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":704,"column":3,"offset":18083},"end":{"line":704,"column":13,"offset":18093},"indent":[]}}],"position":{"start":{"line":704,"column":1,"offset":18081},"end":{"line":704,"column":15,"offset":18095},"indent":[]}}],"position":{"start":{"line":704,"column":1,"offset":18081},"end":{"line":704,"column":15,"offset":18095},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":706,"column":1,"offset":18097},"end":{"line":713,"column":4,"offset":18411},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":715,"column":3,"offset":18415},"end":{"line":715,"column":13,"offset":18425},"indent":[]}}],"position":{"start":{"line":715,"column":1,"offset":18413},"end":{"line":715,"column":15,"offset":18427},"indent":[]}}],"position":{"start":{"line":715,"column":1,"offset":18413},"end":{"line":715,"column":15,"offset":18427},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":717,"column":1,"offset":18429},"end":{"line":719,"column":76,"offset":18541},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":721,"column":5,"offset":18547},"end":{"line":721,"column":13,"offset":18555},"indent":[]}}],"position":{"start":{"line":721,"column":1,"offset":18543},"end":{"line":721,"column":13,"offset":18555},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":723,"column":1,"offset":18557},"end":{"line":723,"column":144,"offset":18700},"indent":[]}}],"position":{"start":{"line":723,"column":1,"offset":18557},"end":{"line":723,"column":144,"offset":18700},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":725,"column":1,"offset":18702},"end":{"line":740,"column":4,"offset":18991},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":742,"column":1,"offset":18993},"end":{"line":742,"column":4,"offset":18996},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":744,"column":1,"offset":18998},"end":{"line":746,"column":10,"offset":19040},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":746,"column":11,"offset":19041},"end":{"line":746,"column":41,"offset":19071},"indent":[]}}],"position":{"start":{"line":746,"column":10,"offset":19040},"end":{"line":746,"column":42,"offset":19072},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":746,"column":42,"offset":19072},"end":{"line":747,"column":24,"offset":19096},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":747,"column":25,"offset":19097},"end":{"line":747,"column":69,"offset":19141},"indent":[]}}],"position":{"start":{"line":747,"column":24,"offset":19096},"end":{"line":747,"column":70,"offset":19142},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":747,"column":70,"offset":19142},"end":{"line":749,"column":36,"offset":19197},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":749,"column":37,"offset":19198},"end":{"line":749,"column":98,"offset":19259},"indent":[]}}],"position":{"start":{"line":749,"column":36,"offset":19197},"end":{"line":749,"column":99,"offset":19260},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":749,"column":99,"offset":19260},"end":{"line":750,"column":39,"offset":19299},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":750,"column":40,"offset":19300},"end":{"line":750,"column":104,"offset":19364},"indent":[]}}],"position":{"start":{"line":750,"column":39,"offset":19299},"end":{"line":750,"column":105,"offset":19365},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":750,"column":105,"offset":19365},"end":{"line":751,"column":39,"offset":19404},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":751,"column":40,"offset":19405},"end":{"line":751,"column":104,"offset":19469},"indent":[]}}],"position":{"start":{"line":751,"column":39,"offset":19404},"end":{"line":751,"column":105,"offset":19470},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":751,"column":105,"offset":19470},"end":{"line":752,"column":47,"offset":19517},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":752,"column":48,"offset":19518},"end":{"line":752,"column":120,"offset":19590},"indent":[]}}],"position":{"start":{"line":752,"column":47,"offset":19517},"end":{"line":752,"column":121,"offset":19591},"indent":[]}}],"position":{"start":{"line":744,"column":1,"offset":18998},"end":{"line":752,"column":121,"offset":19591},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":754,"column":1,"offset":19593},"end":{"line":754,"column":4,"offset":19596},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":756,"column":2,"offset":19599},"end":{"line":756,"column":142,"offset":19739},"indent":[]}}],"position":{"start":{"line":756,"column":1,"offset":19598},"end":{"line":756,"column":255,"offset":19852},"indent":[]}}],"position":{"start":{"line":756,"column":1,"offset":19598},"end":{"line":756,"column":255,"offset":19852},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":758,"column":4,"offset":19857},"end":{"line":758,"column":6,"offset":19859},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":758,"column":7,"offset":19860},"end":{"line":758,"column":47,"offset":19900},"indent":[]}}],"position":{"start":{"line":758,"column":6,"offset":19859},"end":{"line":758,"column":128,"offset":19981},"indent":[]}}],"position":{"start":{"line":758,"column":1,"offset":19854},"end":{"line":758,"column":128,"offset":19981},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":760,"column":5,"offset":19987},"end":{"line":760,"column":12,"offset":19994},"indent":[]}}],"position":{"start":{"line":760,"column":1,"offset":19983},"end":{"line":760,"column":12,"offset":19994},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":762,"column":1,"offset":19996},"end":{"line":762,"column":37,"offset":20032},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":762,"column":38,"offset":20033},"end":{"line":762,"column":39,"offset":20034},"indent":[]}}],"position":{"start":{"line":762,"column":37,"offset":20032},"end":{"line":762,"column":40,"offset":20035},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day","position":{"start":{"line":762,"column":40,"offset":20035},"end":{"line":762,"column":87,"offset":20082},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":762,"column":88,"offset":20083},"end":{"line":762,"column":89,"offset":20084},"indent":[]}}],"position":{"start":{"line":762,"column":87,"offset":20082},"end":{"line":762,"column":90,"offset":20085},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":762,"column":90,"offset":20085},"end":{"line":762,"column":91,"offset":20086},"indent":[]}}],"position":{"start":{"line":762,"column":1,"offset":19996},"end":{"line":762,"column":91,"offset":20086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":764,"column":1,"offset":20088},"end":{"line":764,"column":74,"offset":20161},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":764,"column":75,"offset":20162},"end":{"line":764,"column":78,"offset":20165},"indent":[]}}],"position":{"start":{"line":764,"column":74,"offset":20161},"end":{"line":764,"column":79,"offset":20166},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":764,"column":79,"offset":20166},"end":{"line":764,"column":93,"offset":20180},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":20088},"end":{"line":764,"column":93,"offset":20180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*","position":{"start":{"line":766,"column":1,"offset":20182},"end":{"line":766,"column":3,"offset":20184},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":766,"column":3,"offset":20184},"end":{"line":766,"column":5,"offset":20186},"indent":[]}},{"type":"text","value":"Note:","position":{"start":{"line":766,"column":5,"offset":20186},"end":{"line":766,"column":10,"offset":20191},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":766,"column":10,"offset":20191},"end":{"line":766,"column":12,"offset":20193},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":766,"column":12,"offset":20193},"end":{"line":766,"column":14,"offset":20195},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":766,"column":14,"offset":20195},"end":{"line":766,"column":128,"offset":20309},"indent":[]}}],"position":{"start":{"line":766,"column":1,"offset":20182},"end":{"line":766,"column":128,"offset":20309},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":768,"column":3,"offset":20313},"end":{"line":768,"column":13,"offset":20323},"indent":[]}}],"position":{"start":{"line":768,"column":1,"offset":20311},"end":{"line":768,"column":15,"offset":20325},"indent":[]}}],"position":{"start":{"line":768,"column":1,"offset":20311},"end":{"line":768,"column":15,"offset":20325},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":770,"column":1,"offset":20327},"end":{"line":773,"column":96,"offset":20556},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":775,"column":3,"offset":20560},"end":{"line":775,"column":13,"offset":20570},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20558},"end":{"line":775,"column":15,"offset":20572},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20558},"end":{"line":775,"column":15,"offset":20572},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":777,"column":1,"offset":20574},"end":{"line":784,"column":4,"offset":20888},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":786,"column":3,"offset":20892},"end":{"line":786,"column":13,"offset":20902},"indent":[]}}],"position":{"start":{"line":786,"column":1,"offset":20890},"end":{"line":786,"column":15,"offset":20904},"indent":[]}}],"position":{"start":{"line":786,"column":1,"offset":20890},"end":{"line":786,"column":15,"offset":20904},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":788,"column":1,"offset":20906},"end":{"line":790,"column":76,"offset":21018},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":792,"column":5,"offset":21024},"end":{"line":792,"column":13,"offset":21032},"indent":[]}}],"position":{"start":{"line":792,"column":1,"offset":21020},"end":{"line":792,"column":13,"offset":21032},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":794,"column":1,"offset":21034},"end":{"line":794,"column":200,"offset":21233},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":794,"column":201,"offset":21234},"end":{"line":794,"column":204,"offset":21237},"indent":[]}}],"position":{"start":{"line":794,"column":200,"offset":21233},"end":{"line":794,"column":205,"offset":21238},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":794,"column":205,"offset":21238},"end":{"line":794,"column":256,"offset":21289},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":794,"column":256,"offset":21289},"end":{"line":794,"column":265,"offset":21298},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":794,"column":265,"offset":21298},"end":{"line":794,"column":270,"offset":21303},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":794,"column":270,"offset":21303},"end":{"line":794,"column":281,"offset":21314},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":794,"column":281,"offset":21314},"end":{"line":794,"column":290,"offset":21323},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":794,"column":290,"offset":21323},"end":{"line":794,"column":293,"offset":21326},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":794,"column":293,"offset":21326},"end":{"line":794,"column":392,"offset":21425},"indent":[]}}],"position":{"start":{"line":794,"column":1,"offset":21034},"end":{"line":794,"column":392,"offset":21425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":796,"column":1,"offset":21427},"end":{"line":796,"column":8,"offset":21434},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":796,"column":8,"offset":21434},"end":{"line":796,"column":15,"offset":21441},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":796,"column":15,"offset":21441},"end":{"line":796,"column":44,"offset":21470},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":796,"column":44,"offset":21470},"end":{"line":796,"column":53,"offset":21479},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":796,"column":53,"offset":21479},"end":{"line":796,"column":88,"offset":21514},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":796,"column":89,"offset":21515},"end":{"line":796,"column":125,"offset":21551},"indent":[]}}],"position":{"start":{"line":796,"column":88,"offset":21514},"end":{"line":796,"column":183,"offset":21609},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":796,"column":183,"offset":21609},"end":{"line":796,"column":184,"offset":21610},"indent":[]}}],"position":{"start":{"line":796,"column":1,"offset":21427},"end":{"line":796,"column":184,"offset":21610},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":798,"column":1,"offset":21612},"end":{"line":799,"column":87,"offset":21712},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":801,"column":1,"offset":21714},"end":{"line":801,"column":8,"offset":21721},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":801,"column":8,"offset":21721},"end":{"line":801,"column":15,"offset":21728},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":801,"column":15,"offset":21728},"end":{"line":801,"column":44,"offset":21757},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":801,"column":44,"offset":21757},"end":{"line":801,"column":55,"offset":21768},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":801,"column":55,"offset":21768},"end":{"line":801,"column":79,"offset":21792},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":801,"column":79,"offset":21792},"end":{"line":801,"column":83,"offset":21796},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":801,"column":83,"offset":21796},"end":{"line":801,"column":84,"offset":21797},"indent":[]}}],"position":{"start":{"line":801,"column":1,"offset":21714},"end":{"line":801,"column":84,"offset":21797},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":803,"column":1,"offset":21799},"end":{"line":804,"column":87,"offset":21901},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":806,"column":1,"offset":21903},"end":{"line":806,"column":8,"offset":21910},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":806,"column":8,"offset":21910},"end":{"line":806,"column":14,"offset":21916},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":806,"column":14,"offset":21916},"end":{"line":806,"column":21,"offset":21923},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":806,"column":21,"offset":21923},"end":{"line":806,"column":36,"offset":21938},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":806,"column":36,"offset":21938},"end":{"line":806,"column":53,"offset":21955},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":806,"column":53,"offset":21955},"end":{"line":806,"column":79,"offset":21981},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":806,"column":79,"offset":21981},"end":{"line":806,"column":80,"offset":21982},"indent":[]}}],"position":{"start":{"line":806,"column":1,"offset":21903},"end":{"line":806,"column":80,"offset":21982},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":808,"column":1,"offset":21984},"end":{"line":838,"column":4,"offset":22578},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":840,"column":1,"offset":22580},"end":{"line":840,"column":4,"offset":22583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":842,"column":1,"offset":22585},"end":{"line":844,"column":9,"offset":22626},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":844,"column":10,"offset":22627},"end":{"line":844,"column":39,"offset":22656},"indent":[]}}],"position":{"start":{"line":844,"column":9,"offset":22626},"end":{"line":844,"column":40,"offset":22657},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":844,"column":40,"offset":22657},"end":{"line":845,"column":23,"offset":22680},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":845,"column":24,"offset":22681},"end":{"line":845,"column":67,"offset":22724},"indent":[]}}],"position":{"start":{"line":845,"column":23,"offset":22680},"end":{"line":845,"column":68,"offset":22725},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":845,"column":68,"offset":22725},"end":{"line":847,"column":13,"offset":22757},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":847,"column":14,"offset":22758},"end":{"line":847,"column":52,"offset":22796},"indent":[]}}],"position":{"start":{"line":847,"column":13,"offset":22757},"end":{"line":847,"column":53,"offset":22797},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":847,"column":53,"offset":22797},"end":{"line":848,"column":29,"offset":22826},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":848,"column":30,"offset":22827},"end":{"line":848,"column":84,"offset":22881},"indent":[]}}],"position":{"start":{"line":848,"column":29,"offset":22826},"end":{"line":848,"column":85,"offset":22882},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":848,"column":85,"offset":22882},"end":{"line":849,"column":16,"offset":22898},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":849,"column":17,"offset":22899},"end":{"line":849,"column":58,"offset":22940},"indent":[]}}],"position":{"start":{"line":849,"column":16,"offset":22898},"end":{"line":849,"column":59,"offset":22941},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":849,"column":59,"offset":22941},"end":{"line":850,"column":26,"offset":22967},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":850,"column":27,"offset":22968},"end":{"line":850,"column":78,"offset":23019},"indent":[]}}],"position":{"start":{"line":850,"column":26,"offset":22967},"end":{"line":850,"column":79,"offset":23020},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":22585},"end":{"line":850,"column":79,"offset":23020},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":852,"column":1,"offset":23022},"end":{"line":852,"column":4,"offset":23025},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":854,"column":2,"offset":23028},"end":{"line":854,"column":142,"offset":23168},"indent":[]}}],"position":{"start":{"line":854,"column":1,"offset":23027},"end":{"line":854,"column":241,"offset":23267},"indent":[]}}],"position":{"start":{"line":854,"column":1,"offset":23027},"end":{"line":854,"column":241,"offset":23267},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":856,"column":4,"offset":23272},"end":{"line":856,"column":6,"offset":23274},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":856,"column":7,"offset":23275},"end":{"line":856,"column":40,"offset":23308},"indent":[]}}],"position":{"start":{"line":856,"column":6,"offset":23274},"end":{"line":856,"column":114,"offset":23382},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":23269},"end":{"line":856,"column":114,"offset":23382},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":858,"column":5,"offset":23388},"end":{"line":858,"column":12,"offset":23395},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":23384},"end":{"line":858,"column":12,"offset":23395},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":860,"column":1,"offset":23397},"end":{"line":860,"column":9,"offset":23405},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":860,"column":11,"offset":23407},"end":{"line":860,"column":20,"offset":23416},"indent":[]}}],"position":{"start":{"line":860,"column":9,"offset":23405},"end":{"line":860,"column":22,"offset":23418},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":860,"column":22,"offset":23418},"end":{"line":860,"column":62,"offset":23458},"indent":[]}}],"position":{"start":{"line":860,"column":1,"offset":23397},"end":{"line":860,"column":62,"offset":23458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":862,"column":1,"offset":23460},"end":{"line":862,"column":168,"offset":23627},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":862,"column":170,"offset":23629},"end":{"line":862,"column":187,"offset":23646},"indent":[]}}],"position":{"start":{"line":862,"column":168,"offset":23627},"end":{"line":862,"column":189,"offset":23648},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":862,"column":189,"offset":23648},"end":{"line":862,"column":231,"offset":23690},"indent":[]}}],"position":{"start":{"line":862,"column":1,"offset":23460},"end":{"line":862,"column":231,"offset":23690},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":864,"column":3,"offset":23694},"end":{"line":864,"column":13,"offset":23704},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":23692},"end":{"line":864,"column":15,"offset":23706},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":23692},"end":{"line":864,"column":15,"offset":23706},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":866,"column":1,"offset":23708},"end":{"line":875,"column":4,"offset":23773},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":877,"column":3,"offset":23777},"end":{"line":877,"column":13,"offset":23787},"indent":[]}}],"position":{"start":{"line":877,"column":1,"offset":23775},"end":{"line":877,"column":15,"offset":23789},"indent":[]}}],"position":{"start":{"line":877,"column":1,"offset":23775},"end":{"line":877,"column":15,"offset":23789},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":879,"column":1,"offset":23791},"end":{"line":890,"column":4,"offset":23886},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":892,"column":5,"offset":23892},"end":{"line":892,"column":13,"offset":23900},"indent":[]}}],"position":{"start":{"line":892,"column":1,"offset":23888},"end":{"line":892,"column":13,"offset":23900},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":894,"column":1,"offset":23902},"end":{"line":894,"column":11,"offset":23912},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":894,"column":11,"offset":23912},"end":{"line":894,"column":17,"offset":23918},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":894,"column":17,"offset":23918},"end":{"line":894,"column":71,"offset":23972},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":23902},"end":{"line":894,"column":71,"offset":23972},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":896,"column":3,"offset":23976},"end":{"line":896,"column":8,"offset":23981},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":896,"column":8,"offset":23981},"end":{"line":896,"column":18,"offset":23991},"indent":[]}}],"position":{"start":{"line":896,"column":3,"offset":23976},"end":{"line":896,"column":18,"offset":23991},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":897,"column":9,"offset":24000},"end":{"line":897,"column":19,"offset":24010},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":897,"column":19,"offset":24010},"end":{"line":897,"column":62,"offset":24053},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":897,"column":62,"offset":24053},"end":{"line":897,"column":73,"offset":24064},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":897,"column":73,"offset":24064},"end":{"line":897,"column":74,"offset":24065},"indent":[]}}],"position":{"start":{"line":897,"column":9,"offset":24000},"end":{"line":897,"column":74,"offset":24065},"indent":[]}}],"position":{"start":{"line":897,"column":5,"offset":23996},"end":{"line":897,"column":74,"offset":24065},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":898,"column":9,"offset":24074},"end":{"line":898,"column":19,"offset":24084},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":898,"column":19,"offset":24084},"end":{"line":898,"column":64,"offset":24129},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":898,"column":64,"offset":24129},"end":{"line":898,"column":76,"offset":24141},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":898,"column":76,"offset":24141},"end":{"line":898,"column":77,"offset":24142},"indent":[]}}],"position":{"start":{"line":898,"column":9,"offset":24074},"end":{"line":898,"column":77,"offset":24142},"indent":[]}}],"position":{"start":{"line":898,"column":5,"offset":24070},"end":{"line":898,"column":77,"offset":24142},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":899,"column":9,"offset":24151},"end":{"line":899,"column":19,"offset":24161},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":899,"column":19,"offset":24161},"end":{"line":899,"column":51,"offset":24193},"indent":[]}}],"position":{"start":{"line":899,"column":9,"offset":24151},"end":{"line":899,"column":51,"offset":24193},"indent":[]}}],"position":{"start":{"line":899,"column":5,"offset":24147},"end":{"line":899,"column":51,"offset":24193},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":900,"column":9,"offset":24202},"end":{"line":900,"column":14,"offset":24207},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":900,"column":14,"offset":24207},"end":{"line":900,"column":24,"offset":24217},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":900,"column":24,"offset":24217},"end":{"line":900,"column":66,"offset":24259},"indent":[]}}],"position":{"start":{"line":900,"column":9,"offset":24202},"end":{"line":900,"column":66,"offset":24259},"indent":[]}}],"position":{"start":{"line":900,"column":5,"offset":24198},"end":{"line":900,"column":66,"offset":24259},"indent":[]}}],"position":{"start":{"line":897,"column":5,"offset":23996},"end":{"line":900,"column":66,"offset":24259},"indent":[5,5,5]}}],"position":{"start":{"line":896,"column":1,"offset":23974},"end":{"line":900,"column":66,"offset":24259},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":901,"column":3,"offset":24262},"end":{"line":901,"column":10,"offset":24269},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":901,"column":10,"offset":24269},"end":{"line":901,"column":20,"offset":24279},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":901,"column":20,"offset":24279},"end":{"line":901,"column":35,"offset":24294},"indent":[]}}],"position":{"start":{"line":901,"column":3,"offset":24262},"end":{"line":901,"column":35,"offset":24294},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":902,"column":9,"offset":24303},"end":{"line":902,"column":49,"offset":24343},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":902,"column":49,"offset":24343},"end":{"line":902,"column":60,"offset":24354},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":902,"column":60,"offset":24354},"end":{"line":902,"column":69,"offset":24363},"indent":[]}}],"position":{"start":{"line":902,"column":9,"offset":24303},"end":{"line":902,"column":69,"offset":24363},"indent":[]}}],"position":{"start":{"line":902,"column":5,"offset":24299},"end":{"line":902,"column":69,"offset":24363},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":903,"column":9,"offset":24372},"end":{"line":903,"column":49,"offset":24412},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":903,"column":49,"offset":24412},"end":{"line":903,"column":61,"offset":24424},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":903,"column":61,"offset":24424},"end":{"line":903,"column":70,"offset":24433},"indent":[]}}],"position":{"start":{"line":903,"column":9,"offset":24372},"end":{"line":903,"column":70,"offset":24433},"indent":[]}}],"position":{"start":{"line":903,"column":5,"offset":24368},"end":{"line":903,"column":70,"offset":24433},"indent":[]}}],"position":{"start":{"line":902,"column":5,"offset":24299},"end":{"line":903,"column":70,"offset":24433},"indent":[5]}}],"position":{"start":{"line":901,"column":1,"offset":24260},"end":{"line":903,"column":70,"offset":24433},"indent":[1,1]}}],"position":{"start":{"line":896,"column":1,"offset":23974},"end":{"line":903,"column":70,"offset":24433},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":905,"column":1,"offset":24435},"end":{"line":905,"column":38,"offset":24472},"indent":[]}}],"position":{"start":{"line":905,"column":1,"offset":24435},"end":{"line":905,"column":38,"offset":24472},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":907,"column":6,"offset":24479},"end":{"line":907,"column":9,"offset":24482},"indent":[]}}],"position":{"start":{"line":907,"column":1,"offset":24474},"end":{"line":907,"column":9,"offset":24482},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":909,"column":1,"offset":24484},"end":{"line":909,"column":95,"offset":24578},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":909,"column":95,"offset":24578},"end":{"line":909,"column":101,"offset":24584},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":909,"column":101,"offset":24584},"end":{"line":909,"column":151,"offset":24634},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":909,"column":151,"offset":24634},"end":{"line":909,"column":157,"offset":24640},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":909,"column":157,"offset":24640},"end":{"line":909,"column":163,"offset":24646},"indent":[]}}],"position":{"start":{"line":909,"column":1,"offset":24484},"end":{"line":909,"column":163,"offset":24646},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":911,"column":1,"offset":24648},"end":{"line":941,"column":4,"offset":25318},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":943,"column":6,"offset":25325},"end":{"line":943,"column":9,"offset":25328},"indent":[]}}],"position":{"start":{"line":943,"column":1,"offset":25320},"end":{"line":943,"column":9,"offset":25328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":945,"column":1,"offset":25330},"end":{"line":945,"column":57,"offset":25386},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":945,"column":57,"offset":25386},"end":{"line":945,"column":63,"offset":25392},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":945,"column":63,"offset":25392},"end":{"line":945,"column":127,"offset":25456},"indent":[]}}],"position":{"start":{"line":945,"column":1,"offset":25330},"end":{"line":945,"column":127,"offset":25456},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":947,"column":1,"offset":25458},"end":{"line":983,"column":4,"offset":26250},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":985,"column":1,"offset":26252},"end":{"line":985,"column":4,"offset":26255},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":987,"column":1,"offset":26257},"end":{"line":989,"column":17,"offset":26306},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":989,"column":18,"offset":26307},"end":{"line":989,"column":55,"offset":26344},"indent":[]}}],"position":{"start":{"line":989,"column":17,"offset":26306},"end":{"line":989,"column":56,"offset":26345},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":989,"column":56,"offset":26345},"end":{"line":990,"column":11,"offset":26356},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":990,"column":12,"offset":26357},"end":{"line":990,"column":43,"offset":26388},"indent":[]}}],"position":{"start":{"line":990,"column":11,"offset":26356},"end":{"line":990,"column":44,"offset":26389},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":990,"column":44,"offset":26389},"end":{"line":992,"column":27,"offset":26435},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":992,"column":28,"offset":26436},"end":{"line":992,"column":80,"offset":26488},"indent":[]}}],"position":{"start":{"line":992,"column":27,"offset":26435},"end":{"line":992,"column":81,"offset":26489},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":992,"column":81,"offset":26489},"end":{"line":993,"column":24,"offset":26513},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":993,"column":25,"offset":26514},"end":{"line":993,"column":74,"offset":26563},"indent":[]}}],"position":{"start":{"line":993,"column":24,"offset":26513},"end":{"line":993,"column":75,"offset":26564},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":26257},"end":{"line":993,"column":75,"offset":26564},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":995,"column":1,"offset":26566},"end":{"line":995,"column":4,"offset":26569},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":997,"column":2,"offset":26572},"end":{"line":997,"column":142,"offset":26712},"indent":[]}}],"position":{"start":{"line":997,"column":1,"offset":26571},"end":{"line":997,"column":217,"offset":26787},"indent":[]}}],"position":{"start":{"line":997,"column":1,"offset":26571},"end":{"line":997,"column":217,"offset":26787},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":999,"column":4,"offset":26792},"end":{"line":999,"column":6,"offset":26794},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":999,"column":7,"offset":26795},"end":{"line":999,"column":28,"offset":26816},"indent":[]}}],"position":{"start":{"line":999,"column":6,"offset":26794},"end":{"line":999,"column":90,"offset":26878},"indent":[]}}],"position":{"start":{"line":999,"column":1,"offset":26789},"end":{"line":999,"column":90,"offset":26878},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1001,"column":5,"offset":26884},"end":{"line":1001,"column":12,"offset":26891},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":26880},"end":{"line":1001,"column":12,"offset":26891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":1003,"column":1,"offset":26893},"end":{"line":1003,"column":110,"offset":27002},"indent":[]}}],"position":{"start":{"line":1003,"column":1,"offset":26893},"end":{"line":1003,"column":110,"offset":27002},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1005,"column":3,"offset":27006},"end":{"line":1005,"column":8,"offset":27011},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":27004},"end":{"line":1005,"column":10,"offset":27013},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":1005,"column":10,"offset":27013},"end":{"line":1005,"column":87,"offset":27090},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":27004},"end":{"line":1005,"column":87,"offset":27090},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1007,"column":3,"offset":27094},"end":{"line":1007,"column":13,"offset":27104},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":27092},"end":{"line":1007,"column":15,"offset":27106},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":27092},"end":{"line":1007,"column":15,"offset":27106},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":1009,"column":1,"offset":27108},"end":{"line":1013,"column":4,"offset":27169},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1015,"column":3,"offset":27173},"end":{"line":1015,"column":13,"offset":27183},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":27171},"end":{"line":1015,"column":15,"offset":27185},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":27171},"end":{"line":1015,"column":15,"offset":27185},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1017,"column":1,"offset":27187},"end":{"line":1021,"column":4,"offset":27229},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1023,"column":5,"offset":27235},"end":{"line":1023,"column":13,"offset":27243},"indent":[]}}],"position":{"start":{"line":1023,"column":1,"offset":27231},"end":{"line":1023,"column":13,"offset":27243},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1025,"column":6,"offset":27250},"end":{"line":1025,"column":9,"offset":27253},"indent":[]}}],"position":{"start":{"line":1025,"column":1,"offset":27245},"end":{"line":1025,"column":9,"offset":27253},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1027,"column":1,"offset":27255},"end":{"line":1037,"column":4,"offset":27465},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1039,"column":6,"offset":27472},"end":{"line":1039,"column":9,"offset":27475},"indent":[]}}],"position":{"start":{"line":1039,"column":1,"offset":27467},"end":{"line":1039,"column":9,"offset":27475},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1041,"column":1,"offset":27477},"end":{"line":1041,"column":49,"offset":27525},"indent":[]}}],"position":{"start":{"line":1041,"column":1,"offset":27477},"end":{"line":1041,"column":49,"offset":27525},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1043,"column":1,"offset":27527},"end":{"line":1058,"column":4,"offset":27847},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1060,"column":6,"offset":27854},"end":{"line":1060,"column":11,"offset":27859},"indent":[]}}],"position":{"start":{"line":1060,"column":1,"offset":27849},"end":{"line":1060,"column":11,"offset":27859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1062,"column":1,"offset":27861},"end":{"line":1062,"column":24,"offset":27884},"indent":[]}}],"position":{"start":{"line":1062,"column":1,"offset":27861},"end":{"line":1062,"column":24,"offset":27884},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1064,"column":1,"offset":27886},"end":{"line":1101,"column":4,"offset":28793},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1103,"column":1,"offset":28795},"end":{"line":1103,"column":4,"offset":28798},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1105,"column":1,"offset":28800},"end":{"line":1107,"column":10,"offset":28842},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1107,"column":11,"offset":28843},"end":{"line":1107,"column":41,"offset":28873},"indent":[]}}],"position":{"start":{"line":1107,"column":10,"offset":28842},"end":{"line":1107,"column":42,"offset":28874},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1107,"column":42,"offset":28874},"end":{"line":1108,"column":11,"offset":28885},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1108,"column":12,"offset":28886},"end":{"line":1108,"column":43,"offset":28917},"indent":[]}}],"position":{"start":{"line":1108,"column":11,"offset":28885},"end":{"line":1108,"column":44,"offset":28918},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1108,"column":44,"offset":28918},"end":{"line":1109,"column":17,"offset":28935},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1109,"column":18,"offset":28936},"end":{"line":1109,"column":55,"offset":28973},"indent":[]}}],"position":{"start":{"line":1109,"column":17,"offset":28935},"end":{"line":1109,"column":56,"offset":28974},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1109,"column":56,"offset":28974},"end":{"line":1110,"column":25,"offset":28999},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1110,"column":26,"offset":29000},"end":{"line":1110,"column":71,"offset":29045},"indent":[]}}],"position":{"start":{"line":1110,"column":25,"offset":28999},"end":{"line":1110,"column":72,"offset":29046},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1110,"column":72,"offset":29046},"end":{"line":1112,"column":16,"offset":29081},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1112,"column":17,"offset":29082},"end":{"line":1112,"column":58,"offset":29123},"indent":[]}}],"position":{"start":{"line":1112,"column":16,"offset":29081},"end":{"line":1112,"column":59,"offset":29124},"indent":[]}}],"position":{"start":{"line":1105,"column":1,"offset":28800},"end":{"line":1112,"column":59,"offset":29124},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1114,"column":1,"offset":29126},"end":{"line":1114,"column":4,"offset":29129},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1116,"column":2,"offset":29132},"end":{"line":1116,"column":142,"offset":29272},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":29131},"end":{"line":1116,"column":213,"offset":29343},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":29131},"end":{"line":1116,"column":213,"offset":29343},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1118,"column":4,"offset":29348},"end":{"line":1118,"column":6,"offset":29350},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1118,"column":7,"offset":29351},"end":{"line":1118,"column":26,"offset":29370},"indent":[]}}],"position":{"start":{"line":1118,"column":6,"offset":29350},"end":{"line":1118,"column":86,"offset":29430},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":29345},"end":{"line":1118,"column":86,"offset":29430},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1120,"column":5,"offset":29436},"end":{"line":1120,"column":12,"offset":29443},"indent":[]}}],"position":{"start":{"line":1120,"column":1,"offset":29432},"end":{"line":1120,"column":12,"offset":29443},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1122,"column":1,"offset":29445},"end":{"line":1122,"column":18,"offset":29462},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1122,"column":19,"offset":29463},"end":{"line":1122,"column":28,"offset":29472},"indent":[]}}],"position":{"start":{"line":1122,"column":18,"offset":29462},"end":{"line":1122,"column":29,"offset":29473},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1122,"column":29,"offset":29473},"end":{"line":1122,"column":34,"offset":29478},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1122,"column":35,"offset":29479},"end":{"line":1122,"column":42,"offset":29486},"indent":[]}}],"position":{"start":{"line":1122,"column":34,"offset":29478},"end":{"line":1122,"column":43,"offset":29487},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1122,"column":43,"offset":29487},"end":{"line":1122,"column":126,"offset":29570},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1122,"column":127,"offset":29571},"end":{"line":1122,"column":136,"offset":29580},"indent":[]}}],"position":{"start":{"line":1122,"column":126,"offset":29570},"end":{"line":1122,"column":137,"offset":29581},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1122,"column":137,"offset":29581},"end":{"line":1122,"column":141,"offset":29585},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1122,"column":142,"offset":29586},"end":{"line":1122,"column":149,"offset":29593},"indent":[]}}],"position":{"start":{"line":1122,"column":141,"offset":29585},"end":{"line":1122,"column":150,"offset":29594},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1122,"column":150,"offset":29594},"end":{"line":1122,"column":162,"offset":29606},"indent":[]}}],"position":{"start":{"line":1122,"column":1,"offset":29445},"end":{"line":1122,"column":162,"offset":29606},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1124,"column":5,"offset":29612},"end":{"line":1124,"column":45,"offset":29652},"indent":[]}}],"position":{"start":{"line":1124,"column":5,"offset":29612},"end":{"line":1124,"column":45,"offset":29652},"indent":[]}}],"position":{"start":{"line":1124,"column":1,"offset":29608},"end":{"line":1124,"column":45,"offset":29652},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1125,"column":5,"offset":29657},"end":{"line":1125,"column":66,"offset":29718},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1125,"column":67,"offset":29719},"end":{"line":1125,"column":76,"offset":29728},"indent":[]}}],"position":{"start":{"line":1125,"column":66,"offset":29718},"end":{"line":1125,"column":77,"offset":29729},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1125,"column":77,"offset":29729},"end":{"line":1125,"column":81,"offset":29733},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1125,"column":82,"offset":29734},"end":{"line":1125,"column":85,"offset":29737},"indent":[]}}],"position":{"start":{"line":1125,"column":81,"offset":29733},"end":{"line":1125,"column":86,"offset":29738},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1125,"column":86,"offset":29738},"end":{"line":1125,"column":106,"offset":29758},"indent":[]}}],"position":{"start":{"line":1125,"column":5,"offset":29657},"end":{"line":1125,"column":106,"offset":29758},"indent":[]}}],"position":{"start":{"line":1125,"column":1,"offset":29653},"end":{"line":1125,"column":106,"offset":29758},"indent":[]}}],"position":{"start":{"line":1124,"column":1,"offset":29608},"end":{"line":1125,"column":106,"offset":29758},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1127,"column":3,"offset":29762},"end":{"line":1127,"column":8,"offset":29767},"indent":[]}}],"position":{"start":{"line":1127,"column":1,"offset":29760},"end":{"line":1127,"column":10,"offset":29769},"indent":[]}}],"position":{"start":{"line":1127,"column":1,"offset":29760},"end":{"line":1127,"column":10,"offset":29769},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1129,"column":3,"offset":29773},"end":{"line":1129,"column":68,"offset":29838},"indent":[]}}],"position":{"start":{"line":1129,"column":3,"offset":29773},"end":{"line":1129,"column":68,"offset":29838},"indent":[]}}],"position":{"start":{"line":1129,"column":1,"offset":29771},"end":{"line":1129,"column":68,"offset":29838},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1130,"column":3,"offset":29841},"end":{"line":1130,"column":34,"offset":29872},"indent":[]}}],"position":{"start":{"line":1130,"column":3,"offset":29841},"end":{"line":1130,"column":34,"offset":29872},"indent":[]}}],"position":{"start":{"line":1130,"column":1,"offset":29839},"end":{"line":1130,"column":34,"offset":29872},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1131,"column":3,"offset":29875},"end":{"line":1131,"column":58,"offset":29930},"indent":[]}}],"position":{"start":{"line":1131,"column":3,"offset":29875},"end":{"line":1131,"column":58,"offset":29930},"indent":[]}}],"position":{"start":{"line":1131,"column":1,"offset":29873},"end":{"line":1131,"column":58,"offset":29930},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1132,"column":3,"offset":29933},"end":{"line":1132,"column":49,"offset":29979},"indent":[]}}],"position":{"start":{"line":1132,"column":3,"offset":29933},"end":{"line":1132,"column":49,"offset":29979},"indent":[]}}],"position":{"start":{"line":1132,"column":1,"offset":29931},"end":{"line":1132,"column":49,"offset":29979},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1133,"column":3,"offset":29982},"end":{"line":1133,"column":18,"offset":29997},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1133,"column":19,"offset":29998},"end":{"line":1133,"column":28,"offset":30007},"indent":[]}}],"position":{"start":{"line":1133,"column":18,"offset":29997},"end":{"line":1133,"column":29,"offset":30008},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1133,"column":29,"offset":30008},"end":{"line":1133,"column":34,"offset":30013},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1133,"column":35,"offset":30014},"end":{"line":1133,"column":42,"offset":30021},"indent":[]}}],"position":{"start":{"line":1133,"column":34,"offset":30013},"end":{"line":1133,"column":43,"offset":30022},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1133,"column":43,"offset":30022},"end":{"line":1133,"column":79,"offset":30058},"indent":[]}}],"position":{"start":{"line":1133,"column":3,"offset":29982},"end":{"line":1133,"column":79,"offset":30058},"indent":[]}}],"position":{"start":{"line":1133,"column":1,"offset":29980},"end":{"line":1133,"column":79,"offset":30058},"indent":[]}}],"position":{"start":{"line":1129,"column":1,"offset":29771},"end":{"line":1133,"column":79,"offset":30058},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1135,"column":3,"offset":30062},"end":{"line":1135,"column":13,"offset":30072},"indent":[]}}],"position":{"start":{"line":1135,"column":1,"offset":30060},"end":{"line":1135,"column":15,"offset":30074},"indent":[]}}],"position":{"start":{"line":1135,"column":1,"offset":30060},"end":{"line":1135,"column":15,"offset":30074},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1137,"column":1,"offset":30076},"end":{"line":1149,"column":4,"offset":30258},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1151,"column":3,"offset":30262},"end":{"line":1151,"column":13,"offset":30272},"indent":[]}}],"position":{"start":{"line":1151,"column":1,"offset":30260},"end":{"line":1151,"column":15,"offset":30274},"indent":[]}}],"position":{"start":{"line":1151,"column":1,"offset":30260},"end":{"line":1151,"column":15,"offset":30274},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1153,"column":1,"offset":30276},"end":{"line":1163,"column":4,"offset":30470},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1165,"column":5,"offset":30476},"end":{"line":1165,"column":13,"offset":30484},"indent":[]}}],"position":{"start":{"line":1165,"column":1,"offset":30472},"end":{"line":1165,"column":13,"offset":30484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1167,"column":1,"offset":30486},"end":{"line":1167,"column":19,"offset":30504},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1167,"column":20,"offset":30505},"end":{"line":1167,"column":36,"offset":30521},"indent":[]}}],"position":{"start":{"line":1167,"column":19,"offset":30504},"end":{"line":1167,"column":61,"offset":30546},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1167,"column":61,"offset":30546},"end":{"line":1167,"column":62,"offset":30547},"indent":[]}}],"position":{"start":{"line":1167,"column":1,"offset":30486},"end":{"line":1167,"column":62,"offset":30547},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1169,"column":1,"offset":30549},"end":{"line":1169,"column":204,"offset":30752},"indent":[]}}],"position":{"start":{"line":1169,"column":1,"offset":30549},"end":{"line":1169,"column":204,"offset":30752},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1171,"column":1,"offset":30754},"end":{"line":1171,"column":122,"offset":30875},"indent":[]}}],"position":{"start":{"line":1171,"column":1,"offset":30754},"end":{"line":1171,"column":122,"offset":30875},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1173,"column":1,"offset":30877},"end":{"line":1234,"column":4,"offset":32554},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1236,"column":1,"offset":32556},"end":{"line":1236,"column":4,"offset":32559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1238,"column":1,"offset":32561},"end":{"line":1240,"column":25,"offset":32620},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1240,"column":26,"offset":32621},"end":{"line":1240,"column":71,"offset":32666},"indent":[]}}],"position":{"start":{"line":1240,"column":25,"offset":32620},"end":{"line":1240,"column":72,"offset":32667},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1240,"column":72,"offset":32667},"end":{"line":1242,"column":19,"offset":32705},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1242,"column":20,"offset":32706},"end":{"line":1242,"column":64,"offset":32750},"indent":[]}}],"position":{"start":{"line":1242,"column":19,"offset":32705},"end":{"line":1242,"column":65,"offset":32751},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1242,"column":65,"offset":32751},"end":{"line":1243,"column":29,"offset":32780},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1243,"column":30,"offset":32781},"end":{"line":1243,"column":84,"offset":32835},"indent":[]}}],"position":{"start":{"line":1243,"column":29,"offset":32780},"end":{"line":1243,"column":85,"offset":32836},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":32561},"end":{"line":1243,"column":85,"offset":32836},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1245,"column":1,"offset":32838},"end":{"line":1245,"column":4,"offset":32841},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1247,"column":2,"offset":32844},"end":{"line":1247,"column":142,"offset":32984},"indent":[]}}],"position":{"start":{"line":1247,"column":1,"offset":32843},"end":{"line":1247,"column":207,"offset":33049},"indent":[]}}],"position":{"start":{"line":1247,"column":1,"offset":32843},"end":{"line":1247,"column":207,"offset":33049},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1249,"column":4,"offset":33054},"end":{"line":1249,"column":6,"offset":33056},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1249,"column":7,"offset":33057},"end":{"line":1249,"column":23,"offset":33073},"indent":[]}}],"position":{"start":{"line":1249,"column":6,"offset":33056},"end":{"line":1249,"column":80,"offset":33130},"indent":[]}}],"position":{"start":{"line":1249,"column":1,"offset":33051},"end":{"line":1249,"column":80,"offset":33130},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1251,"column":5,"offset":33136},"end":{"line":1251,"column":12,"offset":33143},"indent":[]}}],"position":{"start":{"line":1251,"column":1,"offset":33132},"end":{"line":1251,"column":12,"offset":33143},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1253,"column":1,"offset":33145},"end":{"line":1253,"column":18,"offset":33162},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1253,"column":19,"offset":33163},"end":{"line":1253,"column":28,"offset":33172},"indent":[]}}],"position":{"start":{"line":1253,"column":18,"offset":33162},"end":{"line":1253,"column":29,"offset":33173},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1253,"column":29,"offset":33173},"end":{"line":1253,"column":34,"offset":33178},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1253,"column":35,"offset":33179},"end":{"line":1253,"column":42,"offset":33186},"indent":[]}}],"position":{"start":{"line":1253,"column":34,"offset":33178},"end":{"line":1253,"column":43,"offset":33187},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1253,"column":43,"offset":33187},"end":{"line":1253,"column":133,"offset":33277},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1253,"column":134,"offset":33278},"end":{"line":1253,"column":143,"offset":33287},"indent":[]}}],"position":{"start":{"line":1253,"column":133,"offset":33277},"end":{"line":1253,"column":144,"offset":33288},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1253,"column":144,"offset":33288},"end":{"line":1253,"column":148,"offset":33292},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1253,"column":149,"offset":33293},"end":{"line":1253,"column":156,"offset":33300},"indent":[]}}],"position":{"start":{"line":1253,"column":148,"offset":33292},"end":{"line":1253,"column":157,"offset":33301},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1253,"column":157,"offset":33301},"end":{"line":1253,"column":169,"offset":33313},"indent":[]}}],"position":{"start":{"line":1253,"column":1,"offset":33145},"end":{"line":1253,"column":169,"offset":33313},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1255,"column":5,"offset":33319},"end":{"line":1255,"column":46,"offset":33360},"indent":[]}}],"position":{"start":{"line":1255,"column":5,"offset":33319},"end":{"line":1255,"column":46,"offset":33360},"indent":[]}}],"position":{"start":{"line":1255,"column":1,"offset":33315},"end":{"line":1255,"column":46,"offset":33360},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1256,"column":5,"offset":33365},"end":{"line":1256,"column":66,"offset":33426},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1256,"column":67,"offset":33427},"end":{"line":1256,"column":76,"offset":33436},"indent":[]}}],"position":{"start":{"line":1256,"column":66,"offset":33426},"end":{"line":1256,"column":77,"offset":33437},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1256,"column":77,"offset":33437},"end":{"line":1256,"column":81,"offset":33441},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1256,"column":82,"offset":33442},"end":{"line":1256,"column":85,"offset":33445},"indent":[]}}],"position":{"start":{"line":1256,"column":81,"offset":33441},"end":{"line":1256,"column":86,"offset":33446},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1256,"column":86,"offset":33446},"end":{"line":1256,"column":106,"offset":33466},"indent":[]}}],"position":{"start":{"line":1256,"column":5,"offset":33365},"end":{"line":1256,"column":106,"offset":33466},"indent":[]}}],"position":{"start":{"line":1256,"column":1,"offset":33361},"end":{"line":1256,"column":106,"offset":33466},"indent":[]}}],"position":{"start":{"line":1255,"column":1,"offset":33315},"end":{"line":1256,"column":106,"offset":33466},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1258,"column":3,"offset":33470},"end":{"line":1258,"column":8,"offset":33475},"indent":[]}}],"position":{"start":{"line":1258,"column":1,"offset":33468},"end":{"line":1258,"column":10,"offset":33477},"indent":[]}}],"position":{"start":{"line":1258,"column":1,"offset":33468},"end":{"line":1258,"column":10,"offset":33477},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1260,"column":3,"offset":33481},"end":{"line":1260,"column":56,"offset":33534},"indent":[]}}],"position":{"start":{"line":1260,"column":3,"offset":33481},"end":{"line":1260,"column":56,"offset":33534},"indent":[]}}],"position":{"start":{"line":1260,"column":1,"offset":33479},"end":{"line":1260,"column":56,"offset":33534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1261,"column":3,"offset":33537},"end":{"line":1261,"column":34,"offset":33568},"indent":[]}}],"position":{"start":{"line":1261,"column":3,"offset":33537},"end":{"line":1261,"column":34,"offset":33568},"indent":[]}}],"position":{"start":{"line":1261,"column":1,"offset":33535},"end":{"line":1261,"column":34,"offset":33568},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1262,"column":3,"offset":33571},"end":{"line":1262,"column":58,"offset":33626},"indent":[]}}],"position":{"start":{"line":1262,"column":3,"offset":33571},"end":{"line":1262,"column":58,"offset":33626},"indent":[]}}],"position":{"start":{"line":1262,"column":1,"offset":33569},"end":{"line":1262,"column":58,"offset":33626},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1263,"column":3,"offset":33629},"end":{"line":1263,"column":49,"offset":33675},"indent":[]}}],"position":{"start":{"line":1263,"column":3,"offset":33629},"end":{"line":1263,"column":49,"offset":33675},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":33627},"end":{"line":1263,"column":49,"offset":33675},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1264,"column":3,"offset":33678},"end":{"line":1264,"column":18,"offset":33693},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1264,"column":19,"offset":33694},"end":{"line":1264,"column":28,"offset":33703},"indent":[]}}],"position":{"start":{"line":1264,"column":18,"offset":33693},"end":{"line":1264,"column":29,"offset":33704},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1264,"column":29,"offset":33704},"end":{"line":1264,"column":34,"offset":33709},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1264,"column":35,"offset":33710},"end":{"line":1264,"column":42,"offset":33717},"indent":[]}}],"position":{"start":{"line":1264,"column":34,"offset":33709},"end":{"line":1264,"column":43,"offset":33718},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1264,"column":43,"offset":33718},"end":{"line":1264,"column":79,"offset":33754},"indent":[]}}],"position":{"start":{"line":1264,"column":3,"offset":33678},"end":{"line":1264,"column":79,"offset":33754},"indent":[]}}],"position":{"start":{"line":1264,"column":1,"offset":33676},"end":{"line":1264,"column":79,"offset":33754},"indent":[]}}],"position":{"start":{"line":1260,"column":1,"offset":33479},"end":{"line":1264,"column":79,"offset":33754},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1266,"column":3,"offset":33758},"end":{"line":1266,"column":13,"offset":33768},"indent":[]}}],"position":{"start":{"line":1266,"column":1,"offset":33756},"end":{"line":1266,"column":15,"offset":33770},"indent":[]}}],"position":{"start":{"line":1266,"column":1,"offset":33756},"end":{"line":1266,"column":15,"offset":33770},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1268,"column":1,"offset":33772},"end":{"line":1279,"column":4,"offset":33995},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1281,"column":3,"offset":33999},"end":{"line":1281,"column":13,"offset":34009},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":33997},"end":{"line":1281,"column":15,"offset":34011},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":33997},"end":{"line":1281,"column":15,"offset":34011},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1283,"column":1,"offset":34013},"end":{"line":1293,"column":4,"offset":34206},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1295,"column":5,"offset":34212},"end":{"line":1295,"column":13,"offset":34220},"indent":[]}}],"position":{"start":{"line":1295,"column":1,"offset":34208},"end":{"line":1295,"column":13,"offset":34220},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1297,"column":1,"offset":34222},"end":{"line":1297,"column":38,"offset":34259},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1297,"column":38,"offset":34259},"end":{"line":1297,"column":50,"offset":34271},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1297,"column":50,"offset":34271},"end":{"line":1297,"column":63,"offset":34284},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1297,"column":63,"offset":34284},"end":{"line":1297,"column":72,"offset":34293},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1297,"column":72,"offset":34293},"end":{"line":1297,"column":83,"offset":34304},"indent":[]}}],"position":{"start":{"line":1297,"column":1,"offset":34222},"end":{"line":1297,"column":83,"offset":34304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1299,"column":1,"offset":34306},"end":{"line":1299,"column":128,"offset":34433},"indent":[]}}],"position":{"start":{"line":1299,"column":1,"offset":34306},"end":{"line":1299,"column":128,"offset":34433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1301,"column":1,"offset":34435},"end":{"line":1301,"column":205,"offset":34639},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1301,"column":205,"offset":34639},"end":{"line":1301,"column":208,"offset":34642},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1301,"column":208,"offset":34642},"end":{"line":1301,"column":282,"offset":34716},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1301,"column":282,"offset":34716},"end":{"line":1301,"column":285,"offset":34719},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1301,"column":285,"offset":34719},"end":{"line":1301,"column":365,"offset":34799},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1301,"column":365,"offset":34799},"end":{"line":1301,"column":375,"offset":34809},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1301,"column":375,"offset":34809},"end":{"line":1301,"column":376,"offset":34810},"indent":[]}}],"position":{"start":{"line":1301,"column":1,"offset":34435},"end":{"line":1301,"column":376,"offset":34810},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1303,"column":1,"offset":34812},"end":{"line":1303,"column":54,"offset":34865},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1303,"column":54,"offset":34865},"end":{"line":1303,"column":64,"offset":34875},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1303,"column":64,"offset":34875},"end":{"line":1303,"column":114,"offset":34925},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1303,"column":114,"offset":34925},"end":{"line":1303,"column":124,"offset":34935},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1303,"column":124,"offset":34935},"end":{"line":1303,"column":125,"offset":34936},"indent":[]}}],"position":{"start":{"line":1303,"column":1,"offset":34812},"end":{"line":1303,"column":125,"offset":34936},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1305,"column":1,"offset":34938},"end":{"line":1352,"column":4,"offset":36085},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1354,"column":1,"offset":36087},"end":{"line":1354,"column":4,"offset":36090},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1356,"column":1,"offset":36092},"end":{"line":1358,"column":10,"offset":36134},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1358,"column":11,"offset":36135},"end":{"line":1358,"column":41,"offset":36165},"indent":[]}}],"position":{"start":{"line":1358,"column":10,"offset":36134},"end":{"line":1358,"column":42,"offset":36166},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1358,"column":42,"offset":36166},"end":{"line":1359,"column":15,"offset":36181},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1359,"column":16,"offset":36182},"end":{"line":1359,"column":51,"offset":36217},"indent":[]}}],"position":{"start":{"line":1359,"column":15,"offset":36181},"end":{"line":1359,"column":52,"offset":36218},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1359,"column":52,"offset":36218},"end":{"line":1361,"column":45,"offset":36282},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1361,"column":46,"offset":36283},"end":{"line":1361,"column":116,"offset":36353},"indent":[]}}],"position":{"start":{"line":1361,"column":45,"offset":36282},"end":{"line":1361,"column":117,"offset":36354},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":36092},"end":{"line":1361,"column":117,"offset":36354},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1363,"column":1,"offset":36356},"end":{"line":1363,"column":4,"offset":36359},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1365,"column":2,"offset":36362},"end":{"line":1365,"column":142,"offset":36502},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":36361},"end":{"line":1365,"column":241,"offset":36601},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":36361},"end":{"line":1365,"column":241,"offset":36601},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1367,"column":4,"offset":36606},"end":{"line":1367,"column":6,"offset":36608},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1367,"column":7,"offset":36609},"end":{"line":1367,"column":40,"offset":36642},"indent":[]}}],"position":{"start":{"line":1367,"column":6,"offset":36608},"end":{"line":1367,"column":114,"offset":36716},"indent":[]}}],"position":{"start":{"line":1367,"column":1,"offset":36603},"end":{"line":1367,"column":114,"offset":36716},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1369,"column":5,"offset":36722},"end":{"line":1369,"column":12,"offset":36729},"indent":[]}}],"position":{"start":{"line":1369,"column":1,"offset":36718},"end":{"line":1369,"column":12,"offset":36729},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1371,"column":1,"offset":36731},"end":{"line":1371,"column":99,"offset":36829},"indent":[]}}],"position":{"start":{"line":1371,"column":1,"offset":36731},"end":{"line":1371,"column":99,"offset":36829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1373,"column":1,"offset":36831},"end":{"line":1373,"column":32,"offset":36862},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1373,"column":33,"offset":36863},"end":{"line":1373,"column":34,"offset":36864},"indent":[]}}],"position":{"start":{"line":1373,"column":32,"offset":36862},"end":{"line":1373,"column":35,"offset":36865},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1373,"column":35,"offset":36865},"end":{"line":1373,"column":48,"offset":36878},"indent":[]}}],"position":{"start":{"line":1373,"column":1,"offset":36831},"end":{"line":1373,"column":48,"offset":36878},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1375,"column":3,"offset":36882},"end":{"line":1375,"column":11,"offset":36890},"indent":[]}}],"position":{"start":{"line":1375,"column":1,"offset":36880},"end":{"line":1375,"column":13,"offset":36892},"indent":[]}}],"position":{"start":{"line":1375,"column":1,"offset":36880},"end":{"line":1375,"column":13,"offset":36892},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1377,"column":1,"offset":36894},"end":{"line":1382,"column":4,"offset":37041},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1384,"column":5,"offset":37047},"end":{"line":1384,"column":13,"offset":37055},"indent":[]}}],"position":{"start":{"line":1384,"column":1,"offset":37043},"end":{"line":1384,"column":13,"offset":37055},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1386,"column":1,"offset":37057},"end":{"line":1386,"column":208,"offset":37264},"indent":[]}}],"position":{"start":{"line":1386,"column":1,"offset":37057},"end":{"line":1386,"column":208,"offset":37264},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1388,"column":1,"offset":37266},"end":{"line":1413,"column":4,"offset":37836},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1415,"column":1,"offset":37838},"end":{"line":1415,"column":4,"offset":37841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1417,"column":1,"offset":37843},"end":{"line":1419,"column":9,"offset":37886},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1419,"column":10,"offset":37887},"end":{"line":1419,"column":39,"offset":37916},"indent":[]}}],"position":{"start":{"line":1419,"column":9,"offset":37886},"end":{"line":1419,"column":40,"offset":37917},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1419,"column":40,"offset":37917},"end":{"line":1420,"column":23,"offset":37940},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1420,"column":24,"offset":37941},"end":{"line":1420,"column":67,"offset":37984},"indent":[]}}],"position":{"start":{"line":1420,"column":23,"offset":37940},"end":{"line":1420,"column":68,"offset":37985},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1420,"column":68,"offset":37985},"end":{"line":1422,"column":13,"offset":38017},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1422,"column":14,"offset":38018},"end":{"line":1422,"column":52,"offset":38056},"indent":[]}}],"position":{"start":{"line":1422,"column":13,"offset":38017},"end":{"line":1422,"column":53,"offset":38057},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1422,"column":53,"offset":38057},"end":{"line":1423,"column":33,"offset":38090},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1423,"column":34,"offset":38091},"end":{"line":1423,"column":92,"offset":38149},"indent":[]}}],"position":{"start":{"line":1423,"column":33,"offset":38090},"end":{"line":1423,"column":93,"offset":38150},"indent":[]}}],"position":{"start":{"line":1417,"column":1,"offset":37843},"end":{"line":1423,"column":93,"offset":38150},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1425,"column":1,"offset":38152},"end":{"line":1425,"column":4,"offset":38155},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1427,"column":2,"offset":38158},"end":{"line":1427,"column":142,"offset":38298},"indent":[]}}],"position":{"start":{"line":1427,"column":1,"offset":38157},"end":{"line":1427,"column":233,"offset":38389},"indent":[]}}],"position":{"start":{"line":1427,"column":1,"offset":38157},"end":{"line":1427,"column":233,"offset":38389},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1429,"column":4,"offset":38394},"end":{"line":1429,"column":6,"offset":38396},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1429,"column":7,"offset":38397},"end":{"line":1429,"column":36,"offset":38426},"indent":[]}}],"position":{"start":{"line":1429,"column":6,"offset":38396},"end":{"line":1429,"column":106,"offset":38496},"indent":[]}}],"position":{"start":{"line":1429,"column":1,"offset":38391},"end":{"line":1429,"column":106,"offset":38496},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1431,"column":5,"offset":38502},"end":{"line":1431,"column":12,"offset":38509},"indent":[]}}],"position":{"start":{"line":1431,"column":1,"offset":38498},"end":{"line":1431,"column":12,"offset":38509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1433,"column":1,"offset":38511},"end":{"line":1433,"column":44,"offset":38554},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1433,"column":44,"offset":38554},"end":{"line":1433,"column":49,"offset":38559},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1433,"column":49,"offset":38559},"end":{"line":1433,"column":104,"offset":38614},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":38511},"end":{"line":1433,"column":104,"offset":38614},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1435,"column":1,"offset":38616},"end":{"line":1435,"column":37,"offset":38652},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1435,"column":37,"offset":38652},"end":{"line":1435,"column":46,"offset":38661},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1435,"column":46,"offset":38661},"end":{"line":1435,"column":75,"offset":38690},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1435,"column":75,"offset":38690},"end":{"line":1435,"column":80,"offset":38695},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1435,"column":80,"offset":38695},"end":{"line":1435,"column":81,"offset":38696},"indent":[]}}],"position":{"start":{"line":1435,"column":1,"offset":38616},"end":{"line":1435,"column":81,"offset":38696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1437,"column":1,"offset":38698},"end":{"line":1437,"column":48,"offset":38745},"indent":[]}}],"position":{"start":{"line":1437,"column":1,"offset":38698},"end":{"line":1437,"column":48,"offset":38745},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1439,"column":3,"offset":38749},"end":{"line":1439,"column":8,"offset":38754},"indent":[]}}],"position":{"start":{"line":1439,"column":1,"offset":38747},"end":{"line":1439,"column":10,"offset":38756},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1439,"column":10,"offset":38756},"end":{"line":1439,"column":45,"offset":38791},"indent":[]}}],"position":{"start":{"line":1439,"column":1,"offset":38747},"end":{"line":1439,"column":45,"offset":38791},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1441,"column":3,"offset":38795},"end":{"line":1441,"column":11,"offset":38803},"indent":[]}}],"position":{"start":{"line":1441,"column":1,"offset":38793},"end":{"line":1441,"column":13,"offset":38805},"indent":[]}}],"position":{"start":{"line":1441,"column":1,"offset":38793},"end":{"line":1441,"column":13,"offset":38805},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1443,"column":1,"offset":38807},"end":{"line":1451,"column":35,"offset":39039},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1453,"column":3,"offset":39043},"end":{"line":1453,"column":13,"offset":39053},"indent":[]}}],"position":{"start":{"line":1453,"column":1,"offset":39041},"end":{"line":1453,"column":15,"offset":39055},"indent":[]}}],"position":{"start":{"line":1453,"column":1,"offset":39041},"end":{"line":1453,"column":15,"offset":39055},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1455,"column":1,"offset":39057},"end":{"line":1466,"column":44,"offset":39388},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1468,"column":5,"offset":39394},"end":{"line":1468,"column":13,"offset":39402},"indent":[]}}],"position":{"start":{"line":1468,"column":1,"offset":39390},"end":{"line":1468,"column":13,"offset":39402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1470,"column":1,"offset":39404},"end":{"line":1470,"column":50,"offset":39453},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1470,"column":50,"offset":39453},"end":{"line":1470,"column":53,"offset":39456},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1470,"column":53,"offset":39456},"end":{"line":1470,"column":105,"offset":39508},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1470,"column":105,"offset":39508},"end":{"line":1470,"column":108,"offset":39511},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1470,"column":108,"offset":39511},"end":{"line":1470,"column":161,"offset":39564},"indent":[]}}],"position":{"start":{"line":1470,"column":1,"offset":39404},"end":{"line":1470,"column":161,"offset":39564},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1472,"column":1,"offset":39566},"end":{"line":1492,"column":4,"offset":39967},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1494,"column":1,"offset":39969},"end":{"line":1494,"column":4,"offset":39972},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1496,"column":1,"offset":39974},"end":{"line":1498,"column":23,"offset":40031},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1498,"column":24,"offset":40032},"end":{"line":1498,"column":67,"offset":40075},"indent":[]}}],"position":{"start":{"line":1498,"column":23,"offset":40031},"end":{"line":1498,"column":68,"offset":40076},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1498,"column":68,"offset":40076},"end":{"line":1499,"column":25,"offset":40101},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1499,"column":26,"offset":40102},"end":{"line":1499,"column":71,"offset":40147},"indent":[]}}],"position":{"start":{"line":1499,"column":25,"offset":40101},"end":{"line":1499,"column":72,"offset":40148},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1499,"column":72,"offset":40148},"end":{"line":1500,"column":15,"offset":40163},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1500,"column":16,"offset":40164},"end":{"line":1500,"column":51,"offset":40199},"indent":[]}}],"position":{"start":{"line":1500,"column":15,"offset":40163},"end":{"line":1500,"column":52,"offset":40200},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1500,"column":52,"offset":40200},"end":{"line":1502,"column":22,"offset":40241},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1502,"column":23,"offset":40242},"end":{"line":1502,"column":70,"offset":40289},"indent":[]}}],"position":{"start":{"line":1502,"column":22,"offset":40241},"end":{"line":1502,"column":71,"offset":40290},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1502,"column":71,"offset":40290},"end":{"line":1503,"column":20,"offset":40310},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1503,"column":21,"offset":40311},"end":{"line":1503,"column":66,"offset":40356},"indent":[]}}],"position":{"start":{"line":1503,"column":20,"offset":40310},"end":{"line":1503,"column":67,"offset":40357},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":39974},"end":{"line":1503,"column":67,"offset":40357},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1505,"column":1,"offset":40359},"end":{"line":1505,"column":4,"offset":40362},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1507,"column":2,"offset":40365},"end":{"line":1507,"column":142,"offset":40505},"indent":[]}}],"position":{"start":{"line":1507,"column":1,"offset":40364},"end":{"line":1507,"column":221,"offset":40584},"indent":[]}}],"position":{"start":{"line":1507,"column":1,"offset":40364},"end":{"line":1507,"column":221,"offset":40584},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1509,"column":4,"offset":40589},"end":{"line":1509,"column":6,"offset":40591},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1509,"column":7,"offset":40592},"end":{"line":1509,"column":30,"offset":40615},"indent":[]}}],"position":{"start":{"line":1509,"column":6,"offset":40591},"end":{"line":1509,"column":94,"offset":40679},"indent":[]}}],"position":{"start":{"line":1509,"column":1,"offset":40586},"end":{"line":1509,"column":94,"offset":40679},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1511,"column":5,"offset":40685},"end":{"line":1511,"column":12,"offset":40692},"indent":[]}}],"position":{"start":{"line":1511,"column":1,"offset":40681},"end":{"line":1511,"column":12,"offset":40692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1513,"column":1,"offset":40694},"end":{"line":1513,"column":29,"offset":40722},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1513,"column":29,"offset":40722},"end":{"line":1513,"column":34,"offset":40727},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1513,"column":34,"offset":40727},"end":{"line":1513,"column":39,"offset":40732},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1513,"column":39,"offset":40732},"end":{"line":1513,"column":44,"offset":40737},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1513,"column":44,"offset":40737},"end":{"line":1513,"column":46,"offset":40739},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1513,"column":48,"offset":40741},"end":{"line":1513,"column":60,"offset":40753},"indent":[]}}],"position":{"start":{"line":1513,"column":46,"offset":40739},"end":{"line":1513,"column":62,"offset":40755},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1513,"column":62,"offset":40755},"end":{"line":1513,"column":99,"offset":40792},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1513,"column":99,"offset":40792},"end":{"line":1513,"column":104,"offset":40797},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1513,"column":104,"offset":40797},"end":{"line":1513,"column":105,"offset":40798},"indent":[]}}],"position":{"start":{"line":1513,"column":1,"offset":40694},"end":{"line":1513,"column":105,"offset":40798},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1515,"column":1,"offset":40800},"end":{"line":1515,"column":38,"offset":40837},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1515,"column":38,"offset":40837},"end":{"line":1515,"column":43,"offset":40842},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1515,"column":43,"offset":40842},"end":{"line":1515,"column":50,"offset":40849},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1515,"column":50,"offset":40849},"end":{"line":1515,"column":55,"offset":40854},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1515,"column":55,"offset":40854},"end":{"line":1515,"column":83,"offset":40882},"indent":[]}}],"position":{"start":{"line":1515,"column":1,"offset":40800},"end":{"line":1515,"column":83,"offset":40882},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1517,"column":3,"offset":40886},"end":{"line":1517,"column":11,"offset":40894},"indent":[]}}],"position":{"start":{"line":1517,"column":1,"offset":40884},"end":{"line":1517,"column":13,"offset":40896},"indent":[]}}],"position":{"start":{"line":1517,"column":1,"offset":40884},"end":{"line":1517,"column":13,"offset":40896},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1519,"column":1,"offset":40898},"end":{"line":1525,"column":4,"offset":40938},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1527,"column":1,"offset":40940},"end":{"line":1527,"column":50,"offset":40989},"indent":[]}}],"position":{"start":{"line":1527,"column":1,"offset":40940},"end":{"line":1527,"column":50,"offset":40989},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1529,"column":1,"offset":40991},"end":{"line":1535,"column":4,"offset":41031},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1537,"column":3,"offset":41035},"end":{"line":1537,"column":15,"offset":41047},"indent":[]}}],"position":{"start":{"line":1537,"column":1,"offset":41033},"end":{"line":1537,"column":17,"offset":41049},"indent":[]}}],"position":{"start":{"line":1537,"column":1,"offset":41033},"end":{"line":1537,"column":17,"offset":41049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1539,"column":1,"offset":41051},"end":{"line":1539,"column":69,"offset":41119},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1539,"column":69,"offset":41119},"end":{"line":1539,"column":74,"offset":41124},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1539,"column":74,"offset":41124},"end":{"line":1539,"column":121,"offset":41171},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1539,"column":121,"offset":41171},"end":{"line":1539,"column":126,"offset":41176},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1539,"column":126,"offset":41176},"end":{"line":1539,"column":132,"offset":41182},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1539,"column":132,"offset":41182},"end":{"line":1539,"column":137,"offset":41187},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1539,"column":137,"offset":41187},"end":{"line":1539,"column":194,"offset":41244},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1539,"column":194,"offset":41244},"end":{"line":1539,"column":199,"offset":41249},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1539,"column":199,"offset":41249},"end":{"line":1539,"column":233,"offset":41283},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1539,"column":233,"offset":41283},"end":{"line":1539,"column":238,"offset":41288},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1539,"column":238,"offset":41288},"end":{"line":1539,"column":328,"offset":41378},"indent":[]}}],"position":{"start":{"line":1539,"column":1,"offset":41051},"end":{"line":1539,"column":328,"offset":41378},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1541,"column":5,"offset":41384},"end":{"line":1541,"column":13,"offset":41392},"indent":[]}}],"position":{"start":{"line":1541,"column":1,"offset":41380},"end":{"line":1541,"column":13,"offset":41392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1543,"column":1,"offset":41394},"end":{"line":1543,"column":14,"offset":41407},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1543,"column":14,"offset":41407},"end":{"line":1543,"column":17,"offset":41410},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1543,"column":17,"offset":41410},"end":{"line":1543,"column":45,"offset":41438},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1543,"column":45,"offset":41438},"end":{"line":1543,"column":48,"offset":41441},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1543,"column":48,"offset":41441},"end":{"line":1543,"column":80,"offset":41473},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1543,"column":80,"offset":41473},"end":{"line":1543,"column":83,"offset":41476},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1543,"column":83,"offset":41476},"end":{"line":1543,"column":113,"offset":41506},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1543,"column":113,"offset":41506},"end":{"line":1543,"column":116,"offset":41509},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1543,"column":116,"offset":41509},"end":{"line":1543,"column":120,"offset":41513},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1543,"column":120,"offset":41513},"end":{"line":1543,"column":123,"offset":41516},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1543,"column":123,"offset":41516},"end":{"line":1543,"column":128,"offset":41521},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1543,"column":128,"offset":41521},"end":{"line":1543,"column":131,"offset":41524},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1543,"column":131,"offset":41524},"end":{"line":1543,"column":140,"offset":41533},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1543,"column":140,"offset":41533},"end":{"line":1543,"column":143,"offset":41536},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1543,"column":143,"offset":41536},"end":{"line":1543,"column":144,"offset":41537},"indent":[]}}],"position":{"start":{"line":1543,"column":1,"offset":41394},"end":{"line":1543,"column":144,"offset":41537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1545,"column":1,"offset":41539},"end":{"line":1545,"column":38,"offset":41576},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1545,"column":38,"offset":41576},"end":{"line":1545,"column":41,"offset":41579},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1545,"column":41,"offset":41579},"end":{"line":1545,"column":72,"offset":41610},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1545,"column":72,"offset":41610},"end":{"line":1545,"column":75,"offset":41613},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1545,"column":75,"offset":41613},"end":{"line":1545,"column":158,"offset":41696},"indent":[]}}],"position":{"start":{"line":1545,"column":1,"offset":41539},"end":{"line":1545,"column":158,"offset":41696},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1547,"column":1,"offset":41698},"end":{"line":1547,"column":99,"offset":41796},"indent":[]}}],"position":{"start":{"line":1547,"column":1,"offset":41698},"end":{"line":1547,"column":99,"offset":41796},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1549,"column":1,"offset":41798},"end":{"line":1623,"column":4,"offset":43730},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1625,"column":1,"offset":43732},"end":{"line":1625,"column":4,"offset":43735},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1627,"column":1,"offset":43737},"end":{"line":1629,"column":23,"offset":43794},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1629,"column":24,"offset":43795},"end":{"line":1629,"column":67,"offset":43838},"indent":[]}}],"position":{"start":{"line":1629,"column":23,"offset":43794},"end":{"line":1629,"column":68,"offset":43839},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1629,"column":68,"offset":43839},"end":{"line":1630,"column":25,"offset":43864},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1630,"column":26,"offset":43865},"end":{"line":1630,"column":71,"offset":43910},"indent":[]}}],"position":{"start":{"line":1630,"column":25,"offset":43864},"end":{"line":1630,"column":72,"offset":43911},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1630,"column":72,"offset":43911},"end":{"line":1631,"column":10,"offset":43921},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1631,"column":11,"offset":43922},"end":{"line":1631,"column":41,"offset":43952},"indent":[]}}],"position":{"start":{"line":1631,"column":10,"offset":43921},"end":{"line":1631,"column":42,"offset":43953},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1631,"column":42,"offset":43953},"end":{"line":1633,"column":34,"offset":44006},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1633,"column":35,"offset":44007},"end":{"line":1633,"column":94,"offset":44066},"indent":[]}}],"position":{"start":{"line":1633,"column":34,"offset":44006},"end":{"line":1633,"column":95,"offset":44067},"indent":[]}}],"position":{"start":{"line":1627,"column":1,"offset":43737},"end":{"line":1633,"column":95,"offset":44067},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1635,"column":1,"offset":44069},"end":{"line":1635,"column":4,"offset":44072},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1637,"column":2,"offset":44075},"end":{"line":1637,"column":142,"offset":44215},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":44074},"end":{"line":1637,"column":207,"offset":44280},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":44074},"end":{"line":1637,"column":207,"offset":44280},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1639,"column":4,"offset":44285},"end":{"line":1639,"column":6,"offset":44287},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1639,"column":7,"offset":44288},"end":{"line":1639,"column":23,"offset":44304},"indent":[]}}],"position":{"start":{"line":1639,"column":6,"offset":44287},"end":{"line":1639,"column":80,"offset":44361},"indent":[]}}],"position":{"start":{"line":1639,"column":1,"offset":44282},"end":{"line":1639,"column":80,"offset":44361},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem","position":{"start":{"line":1641,"column":5,"offset":44367},"end":{"line":1641,"column":12,"offset":44374},"indent":[]}}],"position":{"start":{"line":1641,"column":1,"offset":44363},"end":{"line":1641,"column":12,"offset":44374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1643,"column":1,"offset":44376},"end":{"line":1643,"column":103,"offset":44478},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1643,"column":103,"offset":44478},"end":{"line":1643,"column":110,"offset":44485},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1643,"column":110,"offset":44485},"end":{"line":1643,"column":112,"offset":44487},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1643,"column":112,"offset":44487},"end":{"line":1643,"column":117,"offset":44492},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1643,"column":117,"offset":44492},"end":{"line":1643,"column":131,"offset":44506},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1643,"column":131,"offset":44506},"end":{"line":1643,"column":158,"offset":44533},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1643,"column":158,"offset":44533},"end":{"line":1643,"column":167,"offset":44542},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1643,"column":167,"offset":44542},"end":{"line":1643,"column":178,"offset":44553},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1643,"column":178,"offset":44553},"end":{"line":1643,"column":259,"offset":44634},"indent":[]}}],"position":{"start":{"line":1643,"column":1,"offset":44376},"end":{"line":1643,"column":259,"offset":44634},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1645,"column":1,"offset":44636},"end":{"line":1645,"column":74,"offset":44709},"indent":[]}}],"position":{"start":{"line":1645,"column":1,"offset":44636},"end":{"line":1645,"column":74,"offset":44709},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1647,"column":1,"offset":44711},"end":{"line":1647,"column":28,"offset":44738},"indent":[]}}],"position":{"start":{"line":1647,"column":1,"offset":44711},"end":{"line":1647,"column":28,"offset":44738},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1649,"column":1,"offset":44740},"end":{"line":1649,"column":8,"offset":44747},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1649,"column":8,"offset":44747},"end":{"line":1649,"column":11,"offset":44750},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1649,"column":11,"offset":44750},"end":{"line":1649,"column":46,"offset":44785},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1649,"column":46,"offset":44785},"end":{"line":1649,"column":49,"offset":44788},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1649,"column":49,"offset":44788},"end":{"line":1649,"column":110,"offset":44849},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":44740},"end":{"line":1649,"column":110,"offset":44849},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1651,"column":1,"offset":44851},"end":{"line":1651,"column":46,"offset":44896},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1651,"column":46,"offset":44896},"end":{"line":1651,"column":63,"offset":44913},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1651,"column":63,"offset":44913},"end":{"line":1651,"column":64,"offset":44914},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":44851},"end":{"line":1651,"column":64,"offset":44914},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1653,"column":1,"offset":44916},"end":{"line":1653,"column":90,"offset":45005},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1653,"column":90,"offset":45005},"end":{"line":1653,"column":93,"offset":45008},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1653,"column":93,"offset":45008},"end":{"line":1653,"column":94,"offset":45009},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":44916},"end":{"line":1653,"column":94,"offset":45009},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1655,"column":5,"offset":45015},"end":{"line":1655,"column":30,"offset":45040},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1655,"column":30,"offset":45040},"end":{"line":1655,"column":33,"offset":45043},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1655,"column":33,"offset":45043},"end":{"line":1655,"column":48,"offset":45058},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1655,"column":48,"offset":45058},"end":{"line":1655,"column":51,"offset":45061},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1655,"column":51,"offset":45061},"end":{"line":1655,"column":66,"offset":45076},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1655,"column":66,"offset":45076},"end":{"line":1655,"column":69,"offset":45079},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1655,"column":69,"offset":45079},"end":{"line":1655,"column":74,"offset":45084},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1655,"column":74,"offset":45084},"end":{"line":1655,"column":77,"offset":45087},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1655,"column":77,"offset":45087},"end":{"line":1655,"column":78,"offset":45088},"indent":[]}}],"position":{"start":{"line":1655,"column":5,"offset":45015},"end":{"line":1655,"column":78,"offset":45088},"indent":[]}}],"position":{"start":{"line":1655,"column":1,"offset":45011},"end":{"line":1655,"column":78,"offset":45088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1656,"column":5,"offset":45093},"end":{"line":1656,"column":31,"offset":45119},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1656,"column":31,"offset":45119},"end":{"line":1656,"column":34,"offset":45122},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1656,"column":34,"offset":45122},"end":{"line":1656,"column":49,"offset":45137},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1656,"column":49,"offset":45137},"end":{"line":1656,"column":52,"offset":45140},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1656,"column":52,"offset":45140},"end":{"line":1656,"column":61,"offset":45149},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1656,"column":61,"offset":45149},"end":{"line":1656,"column":64,"offset":45152},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1656,"column":64,"offset":45152},"end":{"line":1656,"column":65,"offset":45153},"indent":[]}}],"position":{"start":{"line":1656,"column":5,"offset":45093},"end":{"line":1656,"column":65,"offset":45153},"indent":[]}}],"position":{"start":{"line":1656,"column":1,"offset":45089},"end":{"line":1656,"column":65,"offset":45153},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1657,"column":5,"offset":45158},"end":{"line":1657,"column":30,"offset":45183},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1657,"column":30,"offset":45183},"end":{"line":1657,"column":33,"offset":45186},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1657,"column":33,"offset":45186},"end":{"line":1657,"column":48,"offset":45201},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1657,"column":48,"offset":45201},"end":{"line":1657,"column":51,"offset":45204},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1657,"column":51,"offset":45204},"end":{"line":1657,"column":60,"offset":45213},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1657,"column":60,"offset":45213},"end":{"line":1657,"column":63,"offset":45216},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1657,"column":63,"offset":45216},"end":{"line":1657,"column":100,"offset":45253},"indent":[]}}],"position":{"start":{"line":1657,"column":5,"offset":45158},"end":{"line":1657,"column":100,"offset":45253},"indent":[]}}],"position":{"start":{"line":1657,"column":1,"offset":45154},"end":{"line":1657,"column":100,"offset":45253},"indent":[]}}],"position":{"start":{"line":1655,"column":1,"offset":45011},"end":{"line":1657,"column":100,"offset":45253},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1659,"column":1,"offset":45255},"end":{"line":1659,"column":46,"offset":45300},"indent":[]}}],"position":{"start":{"line":1659,"column":1,"offset":45255},"end":{"line":1659,"column":46,"offset":45300},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1661,"column":1,"offset":45302},"end":{"line":1669,"column":4,"offset":45378},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1671,"column":3,"offset":45382},"end":{"line":1671,"column":7,"offset":45386},"indent":[]}}],"position":{"start":{"line":1671,"column":1,"offset":45380},"end":{"line":1671,"column":9,"offset":45388},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1671,"column":9,"offset":45388},"end":{"line":1671,"column":205,"offset":45584},"indent":[]}}],"position":{"start":{"line":1671,"column":1,"offset":45380},"end":{"line":1671,"column":205,"offset":45584},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution","position":{"start":{"line":1673,"column":5,"offset":45590},"end":{"line":1673,"column":13,"offset":45598},"indent":[]}}],"position":{"start":{"line":1673,"column":1,"offset":45586},"end":{"line":1673,"column":13,"offset":45598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1675,"column":1,"offset":45600},"end":{"line":1675,"column":64,"offset":45663},"indent":[]}}],"position":{"start":{"line":1675,"column":1,"offset":45600},"end":{"line":1675,"column":64,"offset":45663},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1677,"column":1,"offset":45665},"end":{"line":1707,"column":4,"offset":46345},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1709,"column":1,"offset":46347},"end":{"line":1709,"column":127,"offset":46473},"indent":[]}}],"position":{"start":{"line":1709,"column":1,"offset":46347},"end":{"line":1709,"column":127,"offset":46473},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1711,"column":1,"offset":46475},"end":{"line":1753,"column":4,"offset":47330},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1755,"column":1,"offset":47332},"end":{"line":1755,"column":138,"offset":47469},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":47332},"end":{"line":1755,"column":138,"offset":47469},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1757,"column":1,"offset":47471},"end":{"line":1778,"column":4,"offset":47977},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1780,"column":2,"offset":47980},"end":{"line":1780,"column":142,"offset":48120},"indent":[]}}],"position":{"start":{"line":1780,"column":1,"offset":47979},"end":{"line":1780,"column":177,"offset":48155},"indent":[]}}],"position":{"start":{"line":1780,"column":1,"offset":47979},"end":{"line":1780,"column":177,"offset":48155},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1782,"column":3,"offset":48159},"end":{"line":1782,"column":36,"offset":48192},"indent":[]}}],"position":{"start":{"line":1782,"column":1,"offset":48157},"end":{"line":1782,"column":36,"offset":48192},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1784,"column":3,"offset":48196},"end":{"line":1784,"column":144,"offset":48337},"indent":[]}}],"position":{"start":{"line":1784,"column":3,"offset":48196},"end":{"line":1784,"column":144,"offset":48337},"indent":[]}}],"position":{"start":{"line":1784,"column":1,"offset":48194},"end":{"line":1784,"column":144,"offset":48337},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1786,"column":1,"offset":48339},"end":{"line":1786,"column":57,"offset":48395},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":48339},"end":{"line":1786,"column":57,"offset":48395},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1788,"column":1,"offset":48397},"end":{"line":1788,"column":63,"offset":48459},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":48397},"end":{"line":1788,"column":63,"offset":48459},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1790,"column":3,"offset":48463},"end":{"line":1790,"column":57,"offset":48517},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1790,"column":58,"offset":48518},"end":{"line":1790,"column":63,"offset":48523},"indent":[]}}],"position":{"start":{"line":1790,"column":57,"offset":48517},"end":{"line":1790,"column":64,"offset":48524},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1790,"column":64,"offset":48524},"end":{"line":1790,"column":105,"offset":48565},"indent":[]}}],"position":{"start":{"line":1790,"column":3,"offset":48463},"end":{"line":1790,"column":105,"offset":48565},"indent":[]}}],"position":{"start":{"line":1790,"column":1,"offset":48461},"end":{"line":1790,"column":105,"offset":48565},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1792,"column":3,"offset":48569},"end":{"line":1792,"column":13,"offset":48579},"indent":[]}}],"position":{"start":{"line":1792,"column":1,"offset":48567},"end":{"line":1792,"column":15,"offset":48581},"indent":[]}}],"position":{"start":{"line":1792,"column":1,"offset":48567},"end":{"line":1792,"column":15,"offset":48581},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1794,"column":1,"offset":48583},"end":{"line":1794,"column":66,"offset":48648},"indent":[]}}],"position":{"start":{"line":1794,"column":1,"offset":48583},"end":{"line":1794,"column":66,"offset":48648},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1796,"column":3,"offset":48652},"end":{"line":1796,"column":9,"offset":48658},"indent":[]}}],"position":{"start":{"line":1796,"column":1,"offset":48650},"end":{"line":1796,"column":11,"offset":48660},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1796,"column":11,"offset":48660},"end":{"line":1796,"column":19,"offset":48668},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1796,"column":19,"offset":48668},"end":{"line":1796,"column":21,"offset":48670},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":1796,"column":21,"offset":48670},"end":{"line":1797,"column":1,"offset":48693},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1797,"column":3,"offset":48695},"end":{"line":1797,"column":10,"offset":48702},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":48693},"end":{"line":1797,"column":12,"offset":48704},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1797,"column":12,"offset":48704},"end":{"line":1797,"column":17,"offset":48709},"indent":[]}}],"position":{"start":{"line":1796,"column":1,"offset":48650},"end":{"line":1797,"column":17,"offset":48709},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1799,"column":3,"offset":48713},"end":{"line":1799,"column":13,"offset":48723},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":48711},"end":{"line":1799,"column":15,"offset":48725},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":48711},"end":{"line":1799,"column":15,"offset":48725},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1801,"column":1,"offset":48727},"end":{"line":1801,"column":66,"offset":48792},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":48727},"end":{"line":1801,"column":66,"offset":48792},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1803,"column":3,"offset":48796},"end":{"line":1803,"column":9,"offset":48802},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":48794},"end":{"line":1803,"column":11,"offset":48804},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1803,"column":11,"offset":48804},"end":{"line":1803,"column":19,"offset":48812},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1803,"column":19,"offset":48812},"end":{"line":1803,"column":21,"offset":48814},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":1803,"column":21,"offset":48814},"end":{"line":1804,"column":1,"offset":48839},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1804,"column":3,"offset":48841},"end":{"line":1804,"column":10,"offset":48848},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":48839},"end":{"line":1804,"column":12,"offset":48850},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1804,"column":12,"offset":48850},"end":{"line":1804,"column":18,"offset":48856},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":48794},"end":{"line":1804,"column":18,"offset":48856},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1806,"column":3,"offset":48860},"end":{"line":1806,"column":13,"offset":48870},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":48858},"end":{"line":1806,"column":15,"offset":48872},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":48858},"end":{"line":1806,"column":15,"offset":48872},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1808,"column":3,"offset":48876},"end":{"line":1808,"column":9,"offset":48882},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":48874},"end":{"line":1808,"column":11,"offset":48884},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1808,"column":11,"offset":48884},"end":{"line":1808,"column":19,"offset":48892},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1808,"column":19,"offset":48892},"end":{"line":1808,"column":21,"offset":48894},"indent":[]}},{"type":"text","value":"]\n","position":{"start":{"line":1808,"column":21,"offset":48894},"end":{"line":1809,"column":1,"offset":48896},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1809,"column":3,"offset":48898},"end":{"line":1809,"column":10,"offset":48905},"indent":[]}}],"position":{"start":{"line":1809,"column":1,"offset":48896},"end":{"line":1809,"column":12,"offset":48907},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1809,"column":12,"offset":48907},"end":{"line":1809,"column":17,"offset":48912},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":48874},"end":{"line":1809,"column":17,"offset":48912},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1811,"column":3,"offset":48916},"end":{"line":1811,"column":15,"offset":48928},"indent":[]}}],"position":{"start":{"line":1811,"column":1,"offset":48914},"end":{"line":1811,"column":17,"offset":48930},"indent":[]}}],"position":{"start":{"line":1811,"column":1,"offset":48914},"end":{"line":1811,"column":17,"offset":48930},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1813,"column":3,"offset":48934},"end":{"line":1813,"column":51,"offset":48982},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1813,"column":51,"offset":48982},"end":{"line":1813,"column":62,"offset":48993},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1813,"column":62,"offset":48993},"end":{"line":1813,"column":63,"offset":48994},"indent":[]}}],"position":{"start":{"line":1813,"column":3,"offset":48934},"end":{"line":1813,"column":63,"offset":48994},"indent":[]}}],"position":{"start":{"line":1813,"column":1,"offset":48932},"end":{"line":1813,"column":63,"offset":48994},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1814,"column":3,"offset":48997},"end":{"line":1814,"column":28,"offset":49022},"indent":[]}}],"position":{"start":{"line":1814,"column":3,"offset":48997},"end":{"line":1814,"column":28,"offset":49022},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":48995},"end":{"line":1814,"column":28,"offset":49022},"indent":[]}}],"position":{"start":{"line":1813,"column":1,"offset":48932},"end":{"line":1814,"column":28,"offset":49022},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1816,"column":2,"offset":49025},"end":{"line":1816,"column":8,"offset":49031},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":49024},"end":{"line":1816,"column":62,"offset":49085},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1816,"column":62,"offset":49085},"end":{"line":1816,"column":106,"offset":49129},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":49024},"end":{"line":1816,"column":106,"offset":49129},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1818,"column":3,"offset":49133},"end":{"line":1818,"column":144,"offset":49274},"indent":[]}}],"position":{"start":{"line":1818,"column":3,"offset":49133},"end":{"line":1818,"column":144,"offset":49274},"indent":[]}}],"position":{"start":{"line":1818,"column":1,"offset":49131},"end":{"line":1818,"column":144,"offset":49274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1820,"column":1,"offset":49276},"end":{"line":1820,"column":98,"offset":49373},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":49276},"end":{"line":1820,"column":98,"offset":49373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1822,"column":1,"offset":49375},"end":{"line":1822,"column":119,"offset":49493},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1822,"column":120,"offset":49494},"end":{"line":1822,"column":125,"offset":49499},"indent":[]}}],"position":{"start":{"line":1822,"column":119,"offset":49493},"end":{"line":1822,"column":126,"offset":49500},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1822,"column":126,"offset":49500},"end":{"line":1822,"column":160,"offset":49534},"indent":[]}}],"position":{"start":{"line":1822,"column":1,"offset":49375},"end":{"line":1822,"column":160,"offset":49534},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1824,"column":3,"offset":49538},"end":{"line":1824,"column":11,"offset":49546},"indent":[]}}],"position":{"start":{"line":1824,"column":1,"offset":49536},"end":{"line":1824,"column":13,"offset":49548},"indent":[]}}],"position":{"start":{"line":1824,"column":1,"offset":49536},"end":{"line":1824,"column":13,"offset":49548},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1826,"column":1,"offset":49550},"end":{"line":1826,"column":25,"offset":49574},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1826,"column":25,"offset":49574},"end":{"line":1826,"column":27,"offset":49576},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":1826,"column":27,"offset":49576},"end":{"line":1826,"column":41,"offset":49590},"indent":[]}}],"position":{"start":{"line":1826,"column":1,"offset":49550},"end":{"line":1826,"column":41,"offset":49590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1828,"column":1,"offset":49592},"end":{"line":1828,"column":25,"offset":49616},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1828,"column":25,"offset":49616},"end":{"line":1828,"column":27,"offset":49618},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":1828,"column":27,"offset":49618},"end":{"line":1828,"column":98,"offset":49689},"indent":[]}}],"position":{"start":{"line":1828,"column":1,"offset":49592},"end":{"line":1828,"column":98,"offset":49689},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1830,"column":1,"offset":49691},"end":{"line":1831,"column":10,"offset":49708},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":1833,"column":1,"offset":49710},"end":{"line":1833,"column":3,"offset":49712},"indent":[]}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":1833,"column":3,"offset":49712},"end":{"line":1835,"column":1,"offset":49720},"indent":[1,1]}},{"type":"text","value":"-","position":{"start":{"line":1835,"column":1,"offset":49720},"end":{"line":1835,"column":3,"offset":49722},"indent":[]}},{"type":"text","value":"10 5","position":{"start":{"line":1835,"column":3,"offset":49722},"end":{"line":1835,"column":7,"offset":49726},"indent":[]}}],"position":{"start":{"line":1833,"column":1,"offset":49710},"end":{"line":1835,"column":7,"offset":49726},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1837,"column":2,"offset":49729},"end":{"line":1837,"column":8,"offset":49735},"indent":[]}}],"position":{"start":{"line":1837,"column":1,"offset":49728},"end":{"line":1837,"column":84,"offset":49811},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1837,"column":84,"offset":49811},"end":{"line":1837,"column":106,"offset":49833},"indent":[]}}],"position":{"start":{"line":1837,"column":1,"offset":49728},"end":{"line":1837,"column":106,"offset":49833},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1839,"column":3,"offset":49837},"end":{"line":1839,"column":144,"offset":49978},"indent":[]}}],"position":{"start":{"line":1839,"column":3,"offset":49837},"end":{"line":1839,"column":144,"offset":49978},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":49835},"end":{"line":1839,"column":144,"offset":49978},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1841,"column":1,"offset":49980},"end":{"line":1841,"column":157,"offset":50136},"indent":[]}}],"position":{"start":{"line":1841,"column":1,"offset":49980},"end":{"line":1841,"column":157,"offset":50136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1843,"column":1,"offset":50138},"end":{"line":1843,"column":56,"offset":50193},"indent":[]}}],"position":{"start":{"line":1843,"column":1,"offset":50138},"end":{"line":1843,"column":56,"offset":50193},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1845,"column":5,"offset":50199},"end":{"line":1845,"column":33,"offset":50227},"indent":[]}}],"position":{"start":{"line":1845,"column":5,"offset":50199},"end":{"line":1845,"column":33,"offset":50227},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":50195},"end":{"line":1845,"column":33,"offset":50227},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1846,"column":5,"offset":50232},"end":{"line":1846,"column":43,"offset":50270},"indent":[]}}],"position":{"start":{"line":1846,"column":5,"offset":50232},"end":{"line":1846,"column":43,"offset":50270},"indent":[]}}],"position":{"start":{"line":1846,"column":1,"offset":50228},"end":{"line":1846,"column":43,"offset":50270},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":50195},"end":{"line":1846,"column":43,"offset":50270},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1848,"column":3,"offset":50274},"end":{"line":1848,"column":13,"offset":50284},"indent":[]}}],"position":{"start":{"line":1848,"column":1,"offset":50272},"end":{"line":1848,"column":15,"offset":50286},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1848,"column":15,"offset":50286},"end":{"line":1848,"column":54,"offset":50325},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1848,"column":54,"offset":50325},"end":{"line":1848,"column":73,"offset":50344},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1848,"column":73,"offset":50344},"end":{"line":1848,"column":74,"offset":50345},"indent":[]}}],"position":{"start":{"line":1848,"column":1,"offset":50272},"end":{"line":1848,"column":74,"offset":50345},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1850,"column":3,"offset":50349},"end":{"line":1850,"column":13,"offset":50359},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":50347},"end":{"line":1850,"column":15,"offset":50361},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":50347},"end":{"line":1850,"column":15,"offset":50361},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1852,"column":1,"offset":50363},"end":{"line":1852,"column":67,"offset":50429},"indent":[]}}],"position":{"start":{"line":1852,"column":1,"offset":50363},"end":{"line":1852,"column":67,"offset":50429},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1854,"column":3,"offset":50433},"end":{"line":1854,"column":9,"offset":50439},"indent":[]}}],"position":{"start":{"line":1854,"column":1,"offset":50431},"end":{"line":1854,"column":11,"offset":50441},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1854,"column":11,"offset":50441},"end":{"line":1854,"column":19,"offset":50449},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1854,"column":19,"offset":50449},"end":{"line":1854,"column":21,"offset":50451},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":1854,"column":21,"offset":50451},"end":{"line":1855,"column":1,"offset":50478},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1855,"column":3,"offset":50480},"end":{"line":1855,"column":10,"offset":50487},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":50478},"end":{"line":1855,"column":12,"offset":50489},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1855,"column":12,"offset":50489},"end":{"line":1855,"column":13,"offset":50490},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1855,"column":13,"offset":50490},"end":{"line":1855,"column":15,"offset":50492},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":1855,"column":15,"offset":50492},"end":{"line":1856,"column":1,"offset":50513},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1856,"column":3,"offset":50515},"end":{"line":1856,"column":15,"offset":50527},"indent":[]}}],"position":{"start":{"line":1856,"column":1,"offset":50513},"end":{"line":1856,"column":17,"offset":50529},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1856,"column":17,"offset":50529},"end":{"line":1857,"column":21,"offset":50624},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1857,"column":21,"offset":50624},"end":{"line":1857,"column":23,"offset":50626},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1857,"column":23,"offset":50626},"end":{"line":1858,"column":44,"offset":50715},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1858,"column":44,"offset":50715},"end":{"line":1858,"column":46,"offset":50717},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":1858,"column":46,"offset":50717},"end":{"line":1859,"column":1,"offset":50762},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1859,"column":1,"offset":50762},"end":{"line":1859,"column":70,"offset":50831},"indent":[]}}],"position":{"start":{"line":1854,"column":1,"offset":50431},"end":{"line":1859,"column":70,"offset":50831},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1861,"column":3,"offset":50835},"end":{"line":1861,"column":13,"offset":50845},"indent":[]}}],"position":{"start":{"line":1861,"column":1,"offset":50833},"end":{"line":1861,"column":15,"offset":50847},"indent":[]}}],"position":{"start":{"line":1861,"column":1,"offset":50833},"end":{"line":1861,"column":15,"offset":50847},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1863,"column":3,"offset":50851},"end":{"line":1863,"column":9,"offset":50857},"indent":[]}}],"position":{"start":{"line":1863,"column":1,"offset":50849},"end":{"line":1863,"column":11,"offset":50859},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1863,"column":11,"offset":50859},"end":{"line":1863,"column":19,"offset":50867},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1863,"column":19,"offset":50867},"end":{"line":1863,"column":21,"offset":50869},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":1863,"column":21,"offset":50869},"end":{"line":1864,"column":1,"offset":50896},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1864,"column":3,"offset":50898},"end":{"line":1864,"column":10,"offset":50905},"indent":[]}}],"position":{"start":{"line":1864,"column":1,"offset":50896},"end":{"line":1864,"column":12,"offset":50907},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1864,"column":12,"offset":50907},"end":{"line":1864,"column":13,"offset":50908},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1864,"column":13,"offset":50908},"end":{"line":1864,"column":15,"offset":50910},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":1864,"column":15,"offset":50910},"end":{"line":1865,"column":1,"offset":50928},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1865,"column":3,"offset":50930},"end":{"line":1865,"column":15,"offset":50942},"indent":[]}}],"position":{"start":{"line":1865,"column":1,"offset":50928},"end":{"line":1865,"column":17,"offset":50944},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1865,"column":17,"offset":50944},"end":{"line":1865,"column":66,"offset":50993},"indent":[]}}],"position":{"start":{"line":1863,"column":1,"offset":50849},"end":{"line":1865,"column":66,"offset":50993},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1867,"column":3,"offset":50997},"end":{"line":1867,"column":13,"offset":51007},"indent":[]}}],"position":{"start":{"line":1867,"column":1,"offset":50995},"end":{"line":1867,"column":15,"offset":51009},"indent":[]}}],"position":{"start":{"line":1867,"column":1,"offset":50995},"end":{"line":1867,"column":15,"offset":51009},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1869,"column":3,"offset":51013},"end":{"line":1869,"column":9,"offset":51019},"indent":[]}}],"position":{"start":{"line":1869,"column":1,"offset":51011},"end":{"line":1869,"column":11,"offset":51021},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1869,"column":11,"offset":51021},"end":{"line":1869,"column":19,"offset":51029},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1869,"column":19,"offset":51029},"end":{"line":1869,"column":21,"offset":51031},"indent":[]}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":1869,"column":21,"offset":51031},"end":{"line":1870,"column":1,"offset":51042},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1870,"column":3,"offset":51044},"end":{"line":1870,"column":10,"offset":51051},"indent":[]}}],"position":{"start":{"line":1870,"column":1,"offset":51042},"end":{"line":1870,"column":12,"offset":51053},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1870,"column":12,"offset":51053},"end":{"line":1870,"column":13,"offset":51054},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1870,"column":13,"offset":51054},"end":{"line":1870,"column":15,"offset":51056},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1870,"column":15,"offset":51056},"end":{"line":1870,"column":16,"offset":51057},"indent":[]}}],"position":{"start":{"line":1869,"column":1,"offset":51011},"end":{"line":1870,"column":16,"offset":51057},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1872,"column":3,"offset":51061},"end":{"line":1872,"column":15,"offset":51073},"indent":[]}}],"position":{"start":{"line":1872,"column":1,"offset":51059},"end":{"line":1872,"column":17,"offset":51075},"indent":[]}}],"position":{"start":{"line":1872,"column":1,"offset":51059},"end":{"line":1872,"column":17,"offset":51075},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1874,"column":3,"offset":51079},"end":{"line":1874,"column":51,"offset":51127},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1874,"column":51,"offset":51127},"end":{"line":1874,"column":61,"offset":51137},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1874,"column":61,"offset":51137},"end":{"line":1874,"column":62,"offset":51138},"indent":[]}}],"position":{"start":{"line":1874,"column":3,"offset":51079},"end":{"line":1874,"column":62,"offset":51138},"indent":[]}}],"position":{"start":{"line":1874,"column":1,"offset":51077},"end":{"line":1874,"column":62,"offset":51138},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1875,"column":3,"offset":51141},"end":{"line":1875,"column":28,"offset":51166},"indent":[]}}],"position":{"start":{"line":1875,"column":3,"offset":51141},"end":{"line":1875,"column":28,"offset":51166},"indent":[]}}],"position":{"start":{"line":1875,"column":1,"offset":51139},"end":{"line":1875,"column":28,"offset":51166},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1876,"column":3,"offset":51169},"end":{"line":1876,"column":19,"offset":51185},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1876,"column":21,"offset":51187},"end":{"line":1876,"column":27,"offset":51193},"indent":[]}}],"position":{"start":{"line":1876,"column":19,"offset":51185},"end":{"line":1876,"column":29,"offset":51195},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1876,"column":29,"offset":51195},"end":{"line":1876,"column":36,"offset":51202},"indent":[]}}],"position":{"start":{"line":1876,"column":3,"offset":51169},"end":{"line":1876,"column":36,"offset":51202},"indent":[]}}],"position":{"start":{"line":1876,"column":1,"offset":51167},"end":{"line":1876,"column":36,"offset":51202},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1877,"column":3,"offset":51205},"end":{"line":1877,"column":9,"offset":51211},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1877,"column":9,"offset":51211},"end":{"line":1877,"column":40,"offset":51242},"indent":[]}}],"position":{"start":{"line":1877,"column":3,"offset":51205},"end":{"line":1877,"column":40,"offset":51242},"indent":[]}}],"position":{"start":{"line":1877,"column":1,"offset":51203},"end":{"line":1877,"column":40,"offset":51242},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1878,"column":3,"offset":51245},"end":{"line":1878,"column":23,"offset":51265},"indent":[]}}],"position":{"start":{"line":1878,"column":3,"offset":51245},"end":{"line":1878,"column":23,"offset":51265},"indent":[]}}],"position":{"start":{"line":1878,"column":1,"offset":51243},"end":{"line":1878,"column":23,"offset":51265},"indent":[]}}],"position":{"start":{"line":1874,"column":1,"offset":51077},"end":{"line":1878,"column":23,"offset":51265},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1880,"column":2,"offset":51268},"end":{"line":1880,"column":8,"offset":51274},"indent":[]}}],"position":{"start":{"line":1880,"column":1,"offset":51267},"end":{"line":1880,"column":62,"offset":51328},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1880,"column":62,"offset":51328},"end":{"line":1880,"column":173,"offset":51439},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1880,"column":173,"offset":51439},"end":{"line":1881,"column":1,"offset":51440},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1881,"column":1,"offset":51440},"end":{"line":1881,"column":112,"offset":51551},"indent":[]}}],"position":{"start":{"line":1880,"column":1,"offset":51267},"end":{"line":1881,"column":112,"offset":51551},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"//\n/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1883,"column":1,"offset":51553},"end":{"line":1907,"column":4,"offset":52130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1909,"column":2,"offset":52133},"end":{"line":1909,"column":142,"offset":52273},"indent":[]}}],"position":{"start":{"line":1909,"column":1,"offset":52132},"end":{"line":1909,"column":147,"offset":52278},"indent":[]}}],"position":{"start":{"line":1909,"column":1,"offset":52132},"end":{"line":1909,"column":147,"offset":52278},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1910,"column":1,"offset":52279}}}}